REBOL [
	comment: "Generated by c2r3.reb, DO NOT EDIT"
]
make object! [
	SDL_bool: [
		SDL_FALSE 0
		SDL_TRUE 1
	]

	SDL_DUMMY_ENUM: [
		DUMMY_ENUM_VALUE 0
	]

	SDL_assert_state: [
		SDL_ASSERTION_RETRY 0
		SDL_ASSERTION_BREAK 1
		SDL_ASSERTION_ABORT 2
		SDL_ASSERTION_IGNORE 3
		SDL_ASSERTION_ALWAYS_IGNORE 4
	]

	SDL_errorcode: [
		SDL_ENOMEM 0
		SDL_EFREAD 1
		SDL_EFWRITE 2
		SDL_EFSEEK 3
		SDL_UNSUPPORTED 4
		SDL_LASTERROR 5
	]

	SDL_ThreadPriority: [
		SDL_THREAD_PRIORITY_LOW 0
		SDL_THREAD_PRIORITY_NORMAL 1
		SDL_THREAD_PRIORITY_HIGH 2
	]

	SDL_AudioStatus: [
		SDL_AUDIO_STOPPED 0
		SDL_AUDIO_PLAYING 1
		SDL_AUDIO_PAUSED 2
	]

	SDL_BlendMode: [
		SDL_BLENDMODE_NONE 0
		SDL_BLENDMODE_BLEND 1
		SDL_BLENDMODE_ADD 2
		SDL_BLENDMODE_MOD 4
	]

	SDL_WindowFlags: [
		SDL_WINDOW_FULLSCREEN 1
		SDL_WINDOW_OPENGL 2
		SDL_WINDOW_SHOWN 4
		SDL_WINDOW_HIDDEN 8
		SDL_WINDOW_BORDERLESS 16
		SDL_WINDOW_RESIZABLE 32
		SDL_WINDOW_MINIMIZED 64
		SDL_WINDOW_MAXIMIZED 128
		SDL_WINDOW_INPUT_GRABBED 256
		SDL_WINDOW_INPUT_FOCUS 512
		SDL_WINDOW_MOUSE_FOCUS 1024
		SDL_WINDOW_FULLSCREEN_DESKTOP 4097
		SDL_WINDOW_FOREIGN 2048
		SDL_WINDOW_ALLOW_HIGHDPI 8192
	]

	SDL_WindowEventID: [
		SDL_WINDOWEVENT_NONE 0
		SDL_WINDOWEVENT_SHOWN 1
		SDL_WINDOWEVENT_HIDDEN 2
		SDL_WINDOWEVENT_EXPOSED 3
		SDL_WINDOWEVENT_MOVED 4
		SDL_WINDOWEVENT_RESIZED 5
		SDL_WINDOWEVENT_SIZE_CHANGED 6
		SDL_WINDOWEVENT_MINIMIZED 7
		SDL_WINDOWEVENT_MAXIMIZED 8
		SDL_WINDOWEVENT_RESTORED 9
		SDL_WINDOWEVENT_ENTER 10
		SDL_WINDOWEVENT_LEAVE 11
		SDL_WINDOWEVENT_FOCUS_GAINED 12
		SDL_WINDOWEVENT_FOCUS_LOST 13
		SDL_WINDOWEVENT_CLOSE 14
	]

	SDL_GLattr: [
		SDL_GL_RED_SIZE 0
		SDL_GL_GREEN_SIZE 1
		SDL_GL_BLUE_SIZE 2
		SDL_GL_ALPHA_SIZE 3
		SDL_GL_BUFFER_SIZE 4
		SDL_GL_DOUBLEBUFFER 5
		SDL_GL_DEPTH_SIZE 6
		SDL_GL_STENCIL_SIZE 7
		SDL_GL_ACCUM_RED_SIZE 8
		SDL_GL_ACCUM_GREEN_SIZE 9
		SDL_GL_ACCUM_BLUE_SIZE 10
		SDL_GL_ACCUM_ALPHA_SIZE 11
		SDL_GL_STEREO 12
		SDL_GL_MULTISAMPLEBUFFERS 13
		SDL_GL_MULTISAMPLESAMPLES 14
		SDL_GL_ACCELERATED_VISUAL 15
		SDL_GL_RETAINED_BACKING 16
		SDL_GL_CONTEXT_MAJOR_VERSION 17
		SDL_GL_CONTEXT_MINOR_VERSION 18
		SDL_GL_CONTEXT_EGL 19
		SDL_GL_CONTEXT_FLAGS 20
		SDL_GL_CONTEXT_PROFILE_MASK 21
		SDL_GL_SHARE_WITH_CURRENT_CONTEXT 22
		SDL_GL_FRAMEBUFFER_SRGB_CAPABLE 23
	]

	SDL_GLprofile: [
		SDL_GL_CONTEXT_PROFILE_CORE 1
		SDL_GL_CONTEXT_PROFILE_COMPATIBILITY 2
		SDL_GL_CONTEXT_PROFILE_ES 4
	]

	SDL_GLcontextFlag: [
		SDL_GL_CONTEXT_DEBUG_FLAG 1
		SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG 2
		SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG 4
		SDL_GL_CONTEXT_RESET_ISOLATION_FLAG 8
	]

	SDL_Scancode: [
		SDL_SCANCODE_UNKNOWN 0
		SDL_SCANCODE_A 4
		SDL_SCANCODE_B 5
		SDL_SCANCODE_C 6
		SDL_SCANCODE_D 7
		SDL_SCANCODE_E 8
		SDL_SCANCODE_F 9
		SDL_SCANCODE_G 10
		SDL_SCANCODE_H 11
		SDL_SCANCODE_I 12
		SDL_SCANCODE_J 13
		SDL_SCANCODE_K 14
		SDL_SCANCODE_L 15
		SDL_SCANCODE_M 16
		SDL_SCANCODE_N 17
		SDL_SCANCODE_O 18
		SDL_SCANCODE_P 19
		SDL_SCANCODE_Q 20
		SDL_SCANCODE_R 21
		SDL_SCANCODE_S 22
		SDL_SCANCODE_T 23
		SDL_SCANCODE_U 24
		SDL_SCANCODE_V 25
		SDL_SCANCODE_W 26
		SDL_SCANCODE_X 27
		SDL_SCANCODE_Y 28
		SDL_SCANCODE_Z 29
		SDL_SCANCODE_1 30
		SDL_SCANCODE_2 31
		SDL_SCANCODE_3 32
		SDL_SCANCODE_4 33
		SDL_SCANCODE_5 34
		SDL_SCANCODE_6 35
		SDL_SCANCODE_7 36
		SDL_SCANCODE_8 37
		SDL_SCANCODE_9 38
		SDL_SCANCODE_0 39
		SDL_SCANCODE_RETURN 40
		SDL_SCANCODE_ESCAPE 41
		SDL_SCANCODE_BACKSPACE 42
		SDL_SCANCODE_TAB 43
		SDL_SCANCODE_SPACE 44
		SDL_SCANCODE_MINUS 45
		SDL_SCANCODE_EQUALS 46
		SDL_SCANCODE_LEFTBRACKET 47
		SDL_SCANCODE_RIGHTBRACKET 48
		SDL_SCANCODE_BACKSLASH 49
		SDL_SCANCODE_NONUSHASH 50
		SDL_SCANCODE_SEMICOLON 51
		SDL_SCANCODE_APOSTROPHE 52
		SDL_SCANCODE_GRAVE 53
		SDL_SCANCODE_COMMA 54
		SDL_SCANCODE_PERIOD 55
		SDL_SCANCODE_SLASH 56
		SDL_SCANCODE_CAPSLOCK 57
		SDL_SCANCODE_F1 58
		SDL_SCANCODE_F2 59
		SDL_SCANCODE_F3 60
		SDL_SCANCODE_F4 61
		SDL_SCANCODE_F5 62
		SDL_SCANCODE_F6 63
		SDL_SCANCODE_F7 64
		SDL_SCANCODE_F8 65
		SDL_SCANCODE_F9 66
		SDL_SCANCODE_F10 67
		SDL_SCANCODE_F11 68
		SDL_SCANCODE_F12 69
		SDL_SCANCODE_PRINTSCREEN 70
		SDL_SCANCODE_SCROLLLOCK 71
		SDL_SCANCODE_PAUSE 72
		SDL_SCANCODE_INSERT 73
		SDL_SCANCODE_HOME 74
		SDL_SCANCODE_PAGEUP 75
		SDL_SCANCODE_DELETE 76
		SDL_SCANCODE_END 77
		SDL_SCANCODE_PAGEDOWN 78
		SDL_SCANCODE_RIGHT 79
		SDL_SCANCODE_LEFT 80
		SDL_SCANCODE_DOWN 81
		SDL_SCANCODE_UP 82
		SDL_SCANCODE_NUMLOCKCLEAR 83
		SDL_SCANCODE_KP_DIVIDE 84
		SDL_SCANCODE_KP_MULTIPLY 85
		SDL_SCANCODE_KP_MINUS 86
		SDL_SCANCODE_KP_PLUS 87
		SDL_SCANCODE_KP_ENTER 88
		SDL_SCANCODE_KP_1 89
		SDL_SCANCODE_KP_2 90
		SDL_SCANCODE_KP_3 91
		SDL_SCANCODE_KP_4 92
		SDL_SCANCODE_KP_5 93
		SDL_SCANCODE_KP_6 94
		SDL_SCANCODE_KP_7 95
		SDL_SCANCODE_KP_8 96
		SDL_SCANCODE_KP_9 97
		SDL_SCANCODE_KP_0 98
		SDL_SCANCODE_KP_PERIOD 99
		SDL_SCANCODE_NONUSBACKSLASH 100
		SDL_SCANCODE_APPLICATION 101
		SDL_SCANCODE_POWER 102
		SDL_SCANCODE_KP_EQUALS 103
		SDL_SCANCODE_F13 104
		SDL_SCANCODE_F14 105
		SDL_SCANCODE_F15 106
		SDL_SCANCODE_F16 107
		SDL_SCANCODE_F17 108
		SDL_SCANCODE_F18 109
		SDL_SCANCODE_F19 110
		SDL_SCANCODE_F20 111
		SDL_SCANCODE_F21 112
		SDL_SCANCODE_F22 113
		SDL_SCANCODE_F23 114
		SDL_SCANCODE_F24 115
		SDL_SCANCODE_EXECUTE 116
		SDL_SCANCODE_HELP 117
		SDL_SCANCODE_MENU 118
		SDL_SCANCODE_SELECT 119
		SDL_SCANCODE_STOP 120
		SDL_SCANCODE_AGAIN 121
		SDL_SCANCODE_UNDO 122
		SDL_SCANCODE_CUT 123
		SDL_SCANCODE_COPY 124
		SDL_SCANCODE_PASTE 125
		SDL_SCANCODE_FIND 126
		SDL_SCANCODE_MUTE 127
		SDL_SCANCODE_VOLUMEUP 128
		SDL_SCANCODE_VOLUMEDOWN 129
		SDL_SCANCODE_KP_COMMA 133
		SDL_SCANCODE_KP_EQUALSAS400 134
		SDL_SCANCODE_INTERNATIONAL1 135
		SDL_SCANCODE_INTERNATIONAL2 136
		SDL_SCANCODE_INTERNATIONAL3 137
		SDL_SCANCODE_INTERNATIONAL4 138
		SDL_SCANCODE_INTERNATIONAL5 139
		SDL_SCANCODE_INTERNATIONAL6 140
		SDL_SCANCODE_INTERNATIONAL7 141
		SDL_SCANCODE_INTERNATIONAL8 142
		SDL_SCANCODE_INTERNATIONAL9 143
		SDL_SCANCODE_LANG1 144
		SDL_SCANCODE_LANG2 145
		SDL_SCANCODE_LANG3 146
		SDL_SCANCODE_LANG4 147
		SDL_SCANCODE_LANG5 148
		SDL_SCANCODE_LANG6 149
		SDL_SCANCODE_LANG7 150
		SDL_SCANCODE_LANG8 151
		SDL_SCANCODE_LANG9 152
		SDL_SCANCODE_ALTERASE 153
		SDL_SCANCODE_SYSREQ 154
		SDL_SCANCODE_CANCEL 155
		SDL_SCANCODE_CLEAR 156
		SDL_SCANCODE_PRIOR 157
		SDL_SCANCODE_RETURN2 158
		SDL_SCANCODE_SEPARATOR 159
		SDL_SCANCODE_OUT 160
		SDL_SCANCODE_OPER 161
		SDL_SCANCODE_CLEARAGAIN 162
		SDL_SCANCODE_CRSEL 163
		SDL_SCANCODE_EXSEL 164
		SDL_SCANCODE_KP_00 176
		SDL_SCANCODE_KP_000 177
		SDL_SCANCODE_THOUSANDSSEPARATOR 178
		SDL_SCANCODE_DECIMALSEPARATOR 179
		SDL_SCANCODE_CURRENCYUNIT 180
		SDL_SCANCODE_CURRENCYSUBUNIT 181
		SDL_SCANCODE_KP_LEFTPAREN 182
		SDL_SCANCODE_KP_RIGHTPAREN 183
		SDL_SCANCODE_KP_LEFTBRACE 184
		SDL_SCANCODE_KP_RIGHTBRACE 185
		SDL_SCANCODE_KP_TAB 186
		SDL_SCANCODE_KP_BACKSPACE 187
		SDL_SCANCODE_KP_A 188
		SDL_SCANCODE_KP_B 189
		SDL_SCANCODE_KP_C 190
		SDL_SCANCODE_KP_D 191
		SDL_SCANCODE_KP_E 192
		SDL_SCANCODE_KP_F 193
		SDL_SCANCODE_KP_XOR 194
		SDL_SCANCODE_KP_POWER 195
		SDL_SCANCODE_KP_PERCENT 196
		SDL_SCANCODE_KP_LESS 197
		SDL_SCANCODE_KP_GREATER 198
		SDL_SCANCODE_KP_AMPERSAND 199
		SDL_SCANCODE_KP_DBLAMPERSAND 200
		SDL_SCANCODE_KP_VERTICALBAR 201
		SDL_SCANCODE_KP_DBLVERTICALBAR 202
		SDL_SCANCODE_KP_COLON 203
		SDL_SCANCODE_KP_HASH 204
		SDL_SCANCODE_KP_SPACE 205
		SDL_SCANCODE_KP_AT 206
		SDL_SCANCODE_KP_EXCLAM 207
		SDL_SCANCODE_KP_MEMSTORE 208
		SDL_SCANCODE_KP_MEMRECALL 209
		SDL_SCANCODE_KP_MEMCLEAR 210
		SDL_SCANCODE_KP_MEMADD 211
		SDL_SCANCODE_KP_MEMSUBTRACT 212
		SDL_SCANCODE_KP_MEMMULTIPLY 213
		SDL_SCANCODE_KP_MEMDIVIDE 214
		SDL_SCANCODE_KP_PLUSMINUS 215
		SDL_SCANCODE_KP_CLEAR 216
		SDL_SCANCODE_KP_CLEARENTRY 217
		SDL_SCANCODE_KP_BINARY 218
		SDL_SCANCODE_KP_OCTAL 219
		SDL_SCANCODE_KP_DECIMAL 220
		SDL_SCANCODE_KP_HEXADECIMAL 221
		SDL_SCANCODE_LCTRL 224
		SDL_SCANCODE_LSHIFT 225
		SDL_SCANCODE_LALT 226
		SDL_SCANCODE_LGUI 227
		SDL_SCANCODE_RCTRL 228
		SDL_SCANCODE_RSHIFT 229
		SDL_SCANCODE_RALT 230
		SDL_SCANCODE_RGUI 231
		SDL_SCANCODE_MODE 257
		SDL_SCANCODE_AUDIONEXT 258
		SDL_SCANCODE_AUDIOPREV 259
		SDL_SCANCODE_AUDIOSTOP 260
		SDL_SCANCODE_AUDIOPLAY 261
		SDL_SCANCODE_AUDIOMUTE 262
		SDL_SCANCODE_MEDIASELECT 263
		SDL_SCANCODE_WWW 264
		SDL_SCANCODE_MAIL 265
		SDL_SCANCODE_CALCULATOR 266
		SDL_SCANCODE_COMPUTER 267
		SDL_SCANCODE_AC_SEARCH 268
		SDL_SCANCODE_AC_HOME 269
		SDL_SCANCODE_AC_BACK 270
		SDL_SCANCODE_AC_FORWARD 271
		SDL_SCANCODE_AC_STOP 272
		SDL_SCANCODE_AC_REFRESH 273
		SDL_SCANCODE_AC_BOOKMARKS 274
		SDL_SCANCODE_BRIGHTNESSDOWN 275
		SDL_SCANCODE_BRIGHTNESSUP 276
		SDL_SCANCODE_DISPLAYSWITCH 277
		SDL_SCANCODE_KBDILLUMTOGGLE 278
		SDL_SCANCODE_KBDILLUMDOWN 279
		SDL_SCANCODE_KBDILLUMUP 280
		SDL_SCANCODE_EJECT 281
		SDL_SCANCODE_SLEEP 282
		SDL_SCANCODE_APP1 283
		SDL_SCANCODE_APP2 284
		SDL_NUM_SCANCODES 512
	]

	SDL_Keymod: [
		KMOD_NONE 0
		KMOD_LSHIFT 1
		KMOD_RSHIFT 2
		KMOD_LCTRL 64
		KMOD_RCTRL 128
		KMOD_LALT 256
		KMOD_RALT 512
		KMOD_LGUI 1024
		KMOD_RGUI 2048
		KMOD_NUM 4096
		KMOD_CAPS 8192
		KMOD_MODE 16384
		KMOD_RESERVED 32768
	]

	SDL_SystemCursor: [
		SDL_SYSTEM_CURSOR_ARROW 0
		SDL_SYSTEM_CURSOR_IBEAM 1
		SDL_SYSTEM_CURSOR_WAIT 2
		SDL_SYSTEM_CURSOR_CROSSHAIR 3
		SDL_SYSTEM_CURSOR_WAITARROW 4
		SDL_SYSTEM_CURSOR_SIZENWSE 5
		SDL_SYSTEM_CURSOR_SIZENESW 6
		SDL_SYSTEM_CURSOR_SIZEWE 7
		SDL_SYSTEM_CURSOR_SIZENS 8
		SDL_SYSTEM_CURSOR_SIZEALL 9
		SDL_SYSTEM_CURSOR_NO 10
		SDL_SYSTEM_CURSOR_HAND 11
		SDL_NUM_SYSTEM_CURSORS 12
	]

	SDL_GameControllerBindType: [
		SDL_CONTROLLER_BINDTYPE_NONE 0
		SDL_CONTROLLER_BINDTYPE_BUTTON 1
		SDL_CONTROLLER_BINDTYPE_AXIS 2
		SDL_CONTROLLER_BINDTYPE_HAT 3
	]

	SDL_GameControllerAxis: [
		SDL_CONTROLLER_AXIS_INVALID -1
		SDL_CONTROLLER_AXIS_LEFTX 0
		SDL_CONTROLLER_AXIS_LEFTY 1
		SDL_CONTROLLER_AXIS_RIGHTX 2
		SDL_CONTROLLER_AXIS_RIGHTY 3
		SDL_CONTROLLER_AXIS_TRIGGERLEFT 4
		SDL_CONTROLLER_AXIS_TRIGGERRIGHT 5
		SDL_CONTROLLER_AXIS_MAX 6
	]

	SDL_GameControllerButton: [
		SDL_CONTROLLER_BUTTON_INVALID -1
		SDL_CONTROLLER_BUTTON_A 0
		SDL_CONTROLLER_BUTTON_B 1
		SDL_CONTROLLER_BUTTON_X 2
		SDL_CONTROLLER_BUTTON_Y 3
		SDL_CONTROLLER_BUTTON_BACK 4
		SDL_CONTROLLER_BUTTON_GUIDE 5
		SDL_CONTROLLER_BUTTON_START 6
		SDL_CONTROLLER_BUTTON_LEFTSTICK 7
		SDL_CONTROLLER_BUTTON_RIGHTSTICK 8
		SDL_CONTROLLER_BUTTON_LEFTSHOULDER 9
		SDL_CONTROLLER_BUTTON_RIGHTSHOULDER 10
		SDL_CONTROLLER_BUTTON_DPAD_UP 11
		SDL_CONTROLLER_BUTTON_DPAD_DOWN 12
		SDL_CONTROLLER_BUTTON_DPAD_LEFT 13
		SDL_CONTROLLER_BUTTON_DPAD_RIGHT 14
		SDL_CONTROLLER_BUTTON_MAX 15
	]

	SDL_EventType: [
		SDL_FIRSTEVENT 0
		SDL_QUIT 256
		SDL_APP_TERMINATING 257
		SDL_APP_LOWMEMORY 258
		SDL_APP_WILLENTERBACKGROUND 259
		SDL_APP_DIDENTERBACKGROUND 260
		SDL_APP_WILLENTERFOREGROUND 261
		SDL_APP_DIDENTERFOREGROUND 262
		SDL_WINDOWEVENT 512
		SDL_SYSWMEVENT 513
		SDL_KEYDOWN 768
		SDL_KEYUP 769
		SDL_TEXTEDITING 770
		SDL_TEXTINPUT 771
		SDL_MOUSEMOTION 1024
		SDL_MOUSEBUTTONDOWN 1025
		SDL_MOUSEBUTTONUP 1026
		SDL_MOUSEWHEEL 1027
		SDL_JOYAXISMOTION 1536
		SDL_JOYBALLMOTION 1537
		SDL_JOYHATMOTION 1538
		SDL_JOYBUTTONDOWN 1539
		SDL_JOYBUTTONUP 1540
		SDL_JOYDEVICEADDED 1541
		SDL_JOYDEVICEREMOVED 1542
		SDL_CONTROLLERAXISMOTION 1616
		SDL_CONTROLLERBUTTONDOWN 1617
		SDL_CONTROLLERBUTTONUP 1618
		SDL_CONTROLLERDEVICEADDED 1619
		SDL_CONTROLLERDEVICEREMOVED 1620
		SDL_CONTROLLERDEVICEREMAPPED 1621
		SDL_FINGERDOWN 1792
		SDL_FINGERUP 1793
		SDL_FINGERMOTION 1794
		SDL_DOLLARGESTURE 2048
		SDL_DOLLARRECORD 2049
		SDL_MULTIGESTURE 2050
		SDL_CLIPBOARDUPDATE 2304
		SDL_DROPFILE 4096
		SDL_RENDER_TARGETS_RESET 8192
		SDL_USEREVENT 32768
		SDL_LASTEVENT 65535
	]

	SDL_eventaction: [
		SDL_ADDEVENT 0
		SDL_PEEKEVENT 1
		SDL_GETEVENT 2
	]

	SDL_HintPriority: [
		SDL_HINT_DEFAULT 0
		SDL_HINT_NORMAL 1
		SDL_HINT_OVERRIDE 2
	]

	SDL_LogPriority: [
		SDL_LOG_PRIORITY_VERBOSE 1
		SDL_LOG_PRIORITY_DEBUG 2
		SDL_LOG_PRIORITY_INFO 3
		SDL_LOG_PRIORITY_WARN 4
		SDL_LOG_PRIORITY_ERROR 5
		SDL_LOG_PRIORITY_CRITICAL 6
		SDL_NUM_LOG_PRIORITIES 7
	]

	SDL_MessageBoxFlags: [
		SDL_MESSAGEBOX_ERROR 16
		SDL_MESSAGEBOX_WARNING 32
		SDL_MESSAGEBOX_INFORMATION 64
	]

	SDL_MessageBoxButtonFlags: [
		SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT 1
		SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT 2
	]

	SDL_MessageBoxColorType: [
		SDL_MESSAGEBOX_COLOR_BACKGROUND 0
		SDL_MESSAGEBOX_COLOR_TEXT 1
		SDL_MESSAGEBOX_COLOR_BUTTON_BORDER 2
		SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND 3
		SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED 4
		SDL_MESSAGEBOX_COLOR_MAX 5
	]

	SDL_PowerState: [
		SDL_POWERSTATE_UNKNOWN 0
		SDL_POWERSTATE_ON_BATTERY 1
		SDL_POWERSTATE_NO_BATTERY 2
		SDL_POWERSTATE_CHARGING 3
		SDL_POWERSTATE_CHARGED 4
	]

	SDL_RendererFlags: [
		SDL_RENDERER_SOFTWARE 1
		SDL_RENDERER_ACCELERATED 2
		SDL_RENDERER_PRESENTVSYNC 4
		SDL_RENDERER_TARGETTEXTURE 8
	]

	SDL_TextureAccess: [
		SDL_TEXTUREACCESS_STATIC 0
		SDL_TEXTUREACCESS_STREAMING 1
		SDL_TEXTUREACCESS_TARGET 2
	]

	SDL_TextureModulate: [
		SDL_TEXTUREMODULATE_NONE 0
		SDL_TEXTUREMODULATE_COLOR 1
		SDL_TEXTUREMODULATE_ALPHA 2
	]

	SDL_RendererFlip: [
		SDL_FLIP_NONE 0
		SDL_FLIP_HORIZONTAL 1
		SDL_FLIP_VERTICAL 2
	]

	SDL_assert_data: make struct! compose/deep [
		always_ignore [int32]
		trigger_count [uint32]
		condition [pointer]
		filename [pointer]
		linenum [int32]
		padding5 [uint8 [4]]
		function [pointer]
		next [pointer]
	]
	SDL_atomic_t: make struct! compose/deep [
		value [int32]
	]
	SDL_RWops: make struct! compose/deep [
		;size, merged with the previous field
		;seek, merged with the previous field
		;size_t, merged with the previous field
		;close, merged with the previous field
		;type, merged with the previous field
	]
	SDL_AudioSpec: make struct! compose/deep [
		freq [int32]
		format [uint16]
		channels [uint8]
		silence [uint8]
		samples [uint16]
		padding [uint16]
		size [uint32]
		callback [pointer]
		userdata [pointer]
	]
	SDL_AudioCVT: make struct! compose/deep [
		needed [int32]
		src_format [uint16]
		dst_format [uint16]
		rate_incr [double]
		buf [pointer]
		len [int32]
		len_cvt [int32]
		len_mult [int32]
		len_ratio [double]
		filters [pointer [10]]
		filter_index [int32]
	]
	SDL_Color: make struct! compose/deep [
		r [uint8]
		g [uint8]
		b [uint8]
		a [uint8]
	]
	SDL_Palette: make struct! compose/deep [
		ncolors [int32]
		padding1 [uint8 [4]]
		colors [pointer]
		version [uint32]
		refcount [int32]
	]
	SDL_PixelFormat: make struct! compose/deep [
		format [uint32]
		padding1 [uint8 [4]]
		palette [pointer]
		BitsPerPixel [uint8]
		BytesPerPixel [uint8]
		padding [uint8 [2]]
		Rmask [uint32]
		Gmask [uint32]
		Bmask [uint32]
		Amask [uint32]
		Rloss [uint8]
		Gloss [uint8]
		Bloss [uint8]
		Aloss [uint8]
		Rshift [uint8]
		Gshift [uint8]
		Bshift [uint8]
		Ashift [uint8]
		refcount [int32]
		next [pointer]
	]
	SDL_Point: make struct! compose/deep [
		x [int32]
		y [int32]
	]
	SDL_Rect: make struct! compose/deep [
		x [int32]
		y [int32]
		w [int32]
		h [int32]
	]
	SDL_Surface: make struct! compose/deep [
		flags [uint32]
		padding1 [uint8 [4]]
		format [pointer]
		w [int32]
		h [int32]
		pitch [int32]
		padding5 [uint8 [4]]
		pixels [pointer]
		userdata [pointer]
		locked [int32]
		padding8 [uint8 [4]]
		lock_data [pointer]
		clip_rect [(SDL_Rect)]
		map [pointer]
		refcount [int32]
	]
	SDL_DisplayMode: make struct! compose/deep [
		format [uint32]
		w [int32]
		h [int32]
		refresh_rate [int32]
		driverdata [pointer]
	]
	SDL_Keysym: make struct! compose/deep [
		scancode [int32]
		sym [int32]
		mod [uint16]
		padding3 [uint8 [2]]
		unused [uint32]
	]
	SDL_JoystickGUID: make struct! compose/deep [
		data [uint8 [16]]
	]
	SDL_GameControllerButtonBind: make struct! compose/deep [
		bindType [int32]
	]
	SDL_Finger: make struct! compose/deep [
		id [int64]
		x [float]
		y [float]
		pressure [float]
	]
	SDL_CommonEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
	]
	SDL_WindowEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		event [uint8]
		padding1 [uint8]
		padding2 [uint8]
		padding3 [uint8]
		data1 [int32]
		data2 [int32]
	]
	SDL_KeyboardEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		state [uint8]
		repeat [uint8]
		padding2 [uint8]
		padding3 [uint8]
		keysym [(SDL_Keysym)]
	]
	SDL_TextEditingEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		text [int8 [32]]
		start [int32]
		length [int32]
	]
	SDL_TextInputEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		text [int8 [32]]
	]
	SDL_MouseMotionEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		which [uint32]
		state [uint32]
		x [int32]
		y [int32]
		xrel [int32]
		yrel [int32]
	]
	SDL_MouseButtonEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		which [uint32]
		button [uint8]
		state [uint8]
		clicks [uint8]
		padding1 [uint8]
		x [int32]
		y [int32]
	]
	SDL_MouseWheelEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		which [uint32]
		x [int32]
		y [int32]
	]
	SDL_JoyAxisEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
		axis [uint8]
		padding1 [uint8]
		padding2 [uint8]
		padding3 [uint8]
		value [int16]
		padding4 [uint16]
	]
	SDL_JoyBallEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
		ball [uint8]
		padding1 [uint8]
		padding2 [uint8]
		padding3 [uint8]
		xrel [int16]
		yrel [int16]
	]
	SDL_JoyHatEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
		hat [uint8]
		value [uint8]
		padding1 [uint8]
		padding2 [uint8]
	]
	SDL_JoyButtonEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
		button [uint8]
		state [uint8]
		padding1 [uint8]
		padding2 [uint8]
	]
	SDL_JoyDeviceEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
	]
	SDL_ControllerAxisEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
		axis [uint8]
		padding1 [uint8]
		padding2 [uint8]
		padding3 [uint8]
		value [int16]
		padding4 [uint16]
	]
	SDL_ControllerButtonEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
		button [uint8]
		state [uint8]
		padding1 [uint8]
		padding2 [uint8]
	]
	SDL_ControllerDeviceEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		which [int32]
	]
	SDL_TouchFingerEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		touchId [int64]
		fingerId [int64]
		x [float]
		y [float]
		dx [float]
		dy [float]
		pressure [float]
	]
	SDL_MultiGestureEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		touchId [int64]
		dTheta [float]
		dDist [float]
		x [float]
		y [float]
		numFingers [uint16]
		padding [uint16]
	]
	SDL_DollarGestureEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		touchId [int64]
		gestureId [int64]
		numFingers [uint32]
		error [float]
		x [float]
		y [float]
	]
	SDL_DropEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		file [pointer]
	]
	SDL_QuitEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
	]
	SDL_OSEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
	]
	SDL_UserEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		windowID [uint32]
		code [int32]
		data1 [pointer]
		data2 [pointer]
	]
	SDL_SysWMEvent: make struct! compose/deep [
		type [uint32]
		timestamp [uint32]
		msg [pointer]
	]
	SDL_Event: make struct! compose/deep [
		fake [uint8 [56]]
	]
	SDL_HapticDirection: make struct! compose/deep [
		type [uint8]
		padding1 [uint8 [3]]
		dir [int32 [3]]
	]
	SDL_HapticConstant: make struct! compose/deep [
		type [uint16]
		padding1 [uint8 [2]]
		direction [(SDL_HapticDirection)]
		length [uint32]
		delay [uint16]
		button [uint16]
		interval [uint16]
		level [int16]
		attack_length [uint16]
		attack_level [uint16]
		fade_length [uint16]
		fade_level [uint16]
	]
	SDL_HapticPeriodic: make struct! compose/deep [
		type [uint16]
		padding1 [uint8 [2]]
		direction [(SDL_HapticDirection)]
		length [uint32]
		delay [uint16]
		button [uint16]
		interval [uint16]
		period [uint16]
		magnitude [int16]
		offset [int16]
		phase [uint16]
		attack_length [uint16]
		attack_level [uint16]
		fade_length [uint16]
		fade_level [uint16]
	]
	SDL_HapticCondition: make struct! compose/deep [
		type [uint16]
		padding1 [uint8 [2]]
		direction [(SDL_HapticDirection)]
		length [uint32]
		delay [uint16]
		button [uint16]
		interval [uint16]
		right_sat [uint16 [3]]
		left_sat [uint16 [3]]
		right_coeff [int16 [3]]
		left_coeff [int16 [3]]
		deadband [uint16 [3]]
		center [int16 [3]]
	]
	SDL_HapticRamp: make struct! compose/deep [
		type [uint16]
		padding1 [uint8 [2]]
		direction [(SDL_HapticDirection)]
		length [uint32]
		delay [uint16]
		button [uint16]
		interval [uint16]
		start [int16]
		end [int16]
		attack_length [uint16]
		attack_level [uint16]
		fade_length [uint16]
		fade_level [uint16]
	]
	SDL_HapticLeftRight: make struct! compose/deep [
		type [uint16]
		padding1 [uint8 [2]]
		length [uint32]
		large_magnitude [uint16]
		small_magnitude [uint16]
	]
	SDL_HapticCustom: make struct! compose/deep [
		type [uint16]
		padding1 [uint8 [2]]
		direction [(SDL_HapticDirection)]
		length [uint32]
		delay [uint16]
		button [uint16]
		interval [uint16]
		channels [uint8]
		padding7 [uint8 [1]]
		period [uint16]
		samples [uint16]
		padding9 [uint8 [4]]
		data [pointer]
		attack_length [uint16]
		attack_level [uint16]
		fade_length [uint16]
		fade_level [uint16]
	]
	SDL_HapticEffect: make struct! compose/deep [
		fake [uint8 [72]]
	]
	SDL_MessageBoxButtonData: make struct! compose/deep [
		flags [uint32]
		buttonid [int32]
		text [pointer]
	]
	SDL_MessageBoxColor: make struct! compose/deep [
		r [uint8]
		g [uint8]
		b [uint8]
	]
	SDL_MessageBoxColorScheme: make struct! compose/deep [
		colors [(SDL_MessageBoxColor) [5]]
	]
	SDL_MessageBoxData: make struct! compose/deep [
		flags [uint32]
		padding1 [uint8 [4]]
		window [pointer]
		title [pointer]
		message [pointer]
		numbuttons [int32]
		padding5 [uint8 [4]]
		buttons [pointer]
		colorScheme [pointer]
	]
	SDL_RendererInfo: make struct! compose/deep [
		name [pointer]
		flags [uint32]
		num_texture_formats [uint32]
		texture_formats [uint32 [16]]
		max_texture_width [int32]
		max_texture_height [int32]
	]
	SDL_version: make struct! compose/deep [
		major [uint8]
		minor [uint8]
		patch [uint8]
	]
	sdl2: make library! %libSDL2.so
	GetPlatform: make-routine sdl2 "SDL_GetPlatform" compose/deep [
		return: [pointer]
	]

	malloc: make-routine sdl2 "SDL_malloc" compose/deep [
		size [int32]
		return: [pointer]
	]

	calloc: make-routine sdl2 "SDL_calloc" compose/deep [
		nmemb [int32]
		size [int32]
		return: [pointer]
	]

	realloc: make-routine sdl2 "SDL_realloc" compose/deep [
		mem [pointer]
		size [int32]
		return: [pointer]
	]

	free: make-routine sdl2 "SDL_free" compose/deep [
		mem [pointer]
		return: [void]
	]

	getenv: make-routine sdl2 "SDL_getenv" compose/deep [
		name [pointer]
		return: [pointer]
	]

	setenv: make-routine sdl2 "SDL_setenv" compose/deep [
		name [pointer]
		value [pointer]
		overwrite [int32]
		return: [int32]
	]

	qsort: make-routine sdl2 "SDL_qsort" compose/deep [
		base [pointer]
		nmemb [int32]
		size [int32]
		compare [pointer]
		return: [void]
	]

	abs: make-routine sdl2 "SDL_abs" compose/deep [
		x [int32]
		return: [int32]
	]

	isdigit: make-routine sdl2 "SDL_isdigit" compose/deep [
		x [int32]
		return: [int32]
	]

	isspace: make-routine sdl2 "SDL_isspace" compose/deep [
		x [int32]
		return: [int32]
	]

	toupper: make-routine sdl2 "SDL_toupper" compose/deep [
		x [int32]
		return: [int32]
	]

	tolower: make-routine sdl2 "SDL_tolower" compose/deep [
		x [int32]
		return: [int32]
	]

	memset: make-routine sdl2 "SDL_memset" compose/deep [
		dst [pointer]
		c [int32]
		len [int32]
		return: [pointer]
	]

	memcpy: make-routine sdl2 "SDL_memcpy" compose/deep [
		dst [pointer]
		src [pointer]
		len [int32]
		return: [pointer]
	]

	memmove: make-routine sdl2 "SDL_memmove" compose/deep [
		dst [pointer]
		src [pointer]
		len [int32]
		return: [pointer]
	]

	memcmp: make-routine sdl2 "SDL_memcmp" compose/deep [
		s1 [pointer]
		s2 [pointer]
		len [int32]
		return: [int32]
	]

	wcslen: make-routine sdl2 "SDL_wcslen" compose/deep [
		wstr [pointer]
		return: [int32]
	]

	wcslcpy: make-routine sdl2 "SDL_wcslcpy" compose/deep [
		dst [pointer]
		src [pointer]
		maxlen [int32]
		return: [int32]
	]

	wcslcat: make-routine sdl2 "SDL_wcslcat" compose/deep [
		dst [pointer]
		src [pointer]
		maxlen [int32]
		return: [int32]
	]

	strlen: make-routine sdl2 "SDL_strlen" compose/deep [
		str [pointer]
		return: [int32]
	]

	strlcpy: make-routine sdl2 "SDL_strlcpy" compose/deep [
		dst [pointer]
		src [pointer]
		maxlen [int32]
		return: [int32]
	]

	utf8strlcpy: make-routine sdl2 "SDL_utf8strlcpy" compose/deep [
		dst [pointer]
		src [pointer]
		dst_bytes [int32]
		return: [int32]
	]

	strlcat: make-routine sdl2 "SDL_strlcat" compose/deep [
		dst [pointer]
		src [pointer]
		maxlen [int32]
		return: [int32]
	]

	strdup: make-routine sdl2 "SDL_strdup" compose/deep [
		str [pointer]
		return: [pointer]
	]

	strrev: make-routine sdl2 "SDL_strrev" compose/deep [
		str [pointer]
		return: [pointer]
	]

	strupr: make-routine sdl2 "SDL_strupr" compose/deep [
		str [pointer]
		return: [pointer]
	]

	strlwr: make-routine sdl2 "SDL_strlwr" compose/deep [
		str [pointer]
		return: [pointer]
	]

	strchr: make-routine sdl2 "SDL_strchr" compose/deep [
		str [pointer]
		c [int32]
		return: [pointer]
	]

	strrchr: make-routine sdl2 "SDL_strrchr" compose/deep [
		str [pointer]
		c [int32]
		return: [pointer]
	]

	strstr: make-routine sdl2 "SDL_strstr" compose/deep [
		haystack [pointer]
		needle [pointer]
		return: [pointer]
	]

	itoa: make-routine sdl2 "SDL_itoa" compose/deep [
		value [int32]
		str [pointer]
		radix [int32]
		return: [pointer]
	]

	uitoa: make-routine sdl2 "SDL_uitoa" compose/deep [
		value [uint32]
		str [pointer]
		radix [int32]
		return: [pointer]
	]

	ltoa: make-routine sdl2 "SDL_ltoa" compose/deep [
		value [int64]
		str [pointer]
		radix [int32]
		return: [pointer]
	]

	ultoa: make-routine sdl2 "SDL_ultoa" compose/deep [
		value [uint64]
		str [pointer]
		radix [int32]
		return: [pointer]
	]

	lltoa: make-routine sdl2 "SDL_lltoa" compose/deep [
		value [int64]
		str [pointer]
		radix [int32]
		return: [pointer]
	]

	ulltoa: make-routine sdl2 "SDL_ulltoa" compose/deep [
		value [uint64]
		str [pointer]
		radix [int32]
		return: [pointer]
	]

	atoi: make-routine sdl2 "SDL_atoi" compose/deep [
		str [pointer]
		return: [int32]
	]

	atof: make-routine sdl2 "SDL_atof" compose/deep [
		str [pointer]
		return: [double]
	]

	strtol: make-routine sdl2 "SDL_strtol" compose/deep [
		str [pointer]
		endp [pointer]
		base [int32]
		return: [int64]
	]

	strtoul: make-routine sdl2 "SDL_strtoul" compose/deep [
		str [pointer]
		endp [pointer]
		base [int32]
		return: [uint64]
	]

	strtoll: make-routine sdl2 "SDL_strtoll" compose/deep [
		str [pointer]
		endp [pointer]
		base [int32]
		return: [int64]
	]

	strtoull: make-routine sdl2 "SDL_strtoull" compose/deep [
		str [pointer]
		endp [pointer]
		base [int32]
		return: [uint64]
	]

	strtod: make-routine sdl2 "SDL_strtod" compose/deep [
		str [pointer]
		endp [pointer]
		return: [double]
	]

	strcmp: make-routine sdl2 "SDL_strcmp" compose/deep [
		str1 [pointer]
		str2 [pointer]
		return: [int32]
	]

	strncmp: make-routine sdl2 "SDL_strncmp" compose/deep [
		str1 [pointer]
		str2 [pointer]
		maxlen [int32]
		return: [int32]
	]

	strcasecmp: make-routine sdl2 "SDL_strcasecmp" compose/deep [
		str1 [pointer]
		str2 [pointer]
		return: [int32]
	]

	strncasecmp: make-routine sdl2 "SDL_strncasecmp" compose/deep [
		str1 [pointer]
		str2 [pointer]
		len [int32]
		return: [int32]
	]

	sscanf: make-routine sdl2 "SDL_sscanf" compose/deep [
		text [pointer]
		fmt [pointer]
		...
		return: [int32]
	]

	vsscanf: make-routine sdl2 "SDL_vsscanf" compose/deep [
		text [pointer]
		fmt [pointer]
		ap [int32]
		return: [int32]
	]

	snprintf: make-routine sdl2 "SDL_snprintf" compose/deep [
		text [pointer]
		maxlen [int32]
		fmt [pointer]
		...
		return: [int32]
	]

	vsnprintf: make-routine sdl2 "SDL_vsnprintf" compose/deep [
		text [pointer]
		maxlen [int32]
		fmt [pointer]
		ap [int32]
		return: [int32]
	]

	acos: make-routine sdl2 "SDL_acos" compose/deep [
		x [double]
		return: [double]
	]

	asin: make-routine sdl2 "SDL_asin" compose/deep [
		x [double]
		return: [double]
	]

	atan: make-routine sdl2 "SDL_atan" compose/deep [
		x [double]
		return: [double]
	]

	atan2: make-routine sdl2 "SDL_atan2" compose/deep [
		x [double]
		y [double]
		return: [double]
	]

	ceil: make-routine sdl2 "SDL_ceil" compose/deep [
		x [double]
		return: [double]
	]

	copysign: make-routine sdl2 "SDL_copysign" compose/deep [
		x [double]
		y [double]
		return: [double]
	]

	cos: make-routine sdl2 "SDL_cos" compose/deep [
		x [double]
		return: [double]
	]

	cosf: make-routine sdl2 "SDL_cosf" compose/deep [
		x [float]
		return: [float]
	]

	fabs: make-routine sdl2 "SDL_fabs" compose/deep [
		x [double]
		return: [double]
	]

	floor: make-routine sdl2 "SDL_floor" compose/deep [
		x [double]
		return: [double]
	]

	log: make-routine sdl2 "SDL_log" compose/deep [
		x [double]
		return: [double]
	]

	pow: make-routine sdl2 "SDL_pow" compose/deep [
		x [double]
		y [double]
		return: [double]
	]

	scalbn: make-routine sdl2 "SDL_scalbn" compose/deep [
		x [double]
		n [int32]
		return: [double]
	]

	sin: make-routine sdl2 "SDL_sin" compose/deep [
		x [double]
		return: [double]
	]

	sinf: make-routine sdl2 "SDL_sinf" compose/deep [
		x [float]
		return: [float]
	]

	sqrt: make-routine sdl2 "SDL_sqrt" compose/deep [
		x [double]
		return: [double]
	]

	iconv_open: make-routine sdl2 "SDL_iconv_open" compose/deep [
		tocode [pointer]
		fromcode [pointer]
		return: [pointer]
	]

	iconv_close: make-routine sdl2 "SDL_iconv_close" compose/deep [
		cd [pointer]
		return: [int32]
	]

	iconv: make-routine sdl2 "SDL_iconv" compose/deep [
		cd [pointer]
		inbuf [pointer]
		inbytesleft [pointer]
		outbuf [pointer]
		outbytesleft [pointer]
		return: [int32]
	]

	iconv_string: make-routine sdl2 "SDL_iconv_string" compose/deep [
		tocode [pointer]
		fromcode [pointer]
		inbuf [pointer]
		inbytesleft [int32]
		return: [pointer]
	]

	SetMainReady: make-routine sdl2 "SDL_SetMainReady" compose/deep [
		return: [void]
	]

	ReportAssertion: make-routine sdl2 "SDL_ReportAssertion" compose/deep [
		arg1 [pointer]
		arg2 [pointer]
		arg3 [pointer]
		arg4 [int32]
		return: [int32]
	]

	SetAssertionHandler: make-routine sdl2 "SDL_SetAssertionHandler" compose/deep [
		handler [pointer]
		userdata [pointer]
		return: [void]
	]

	GetDefaultAssertionHandler: make-routine sdl2 "SDL_GetDefaultAssertionHandler" compose/deep [
		return: [pointer]
	]

	GetAssertionHandler: make-routine sdl2 "SDL_GetAssertionHandler" compose/deep [
		puserdata [pointer]
		return: [pointer]
	]

	GetAssertionReport: make-routine sdl2 "SDL_GetAssertionReport" compose/deep [
		return: [pointer]
	]

	ResetAssertionReport: make-routine sdl2 "SDL_ResetAssertionReport" compose/deep [
		return: [void]
	]

	AtomicTryLock: make-routine sdl2 "SDL_AtomicTryLock" compose/deep [
		lock [pointer]
		return: [int32]
	]

	AtomicLock: make-routine sdl2 "SDL_AtomicLock" compose/deep [
		lock [pointer]
		return: [void]
	]

	AtomicUnlock: make-routine sdl2 "SDL_AtomicUnlock" compose/deep [
		lock [pointer]
		return: [void]
	]

	AtomicCAS: make-routine sdl2 "SDL_AtomicCAS" compose/deep [
		a [pointer]
		oldval [int32]
		newval [int32]
		return: [int32]
	]

	AtomicSet: make-routine sdl2 "SDL_AtomicSet" compose/deep [
		a [pointer]
		v [int32]
		return: [int32]
	]

	AtomicGet: make-routine sdl2 "SDL_AtomicGet" compose/deep [
		a [pointer]
		return: [int32]
	]

	AtomicAdd: make-routine sdl2 "SDL_AtomicAdd" compose/deep [
		a [pointer]
		v [int32]
		return: [int32]
	]

	AtomicCASPtr: make-routine sdl2 "SDL_AtomicCASPtr" compose/deep [
		a [pointer]
		oldval [pointer]
		newval [pointer]
		return: [int32]
	]

	AtomicSetPtr: make-routine sdl2 "SDL_AtomicSetPtr" compose/deep [
		a [pointer]
		v [pointer]
		return: [pointer]
	]

	AtomicGetPtr: make-routine sdl2 "SDL_AtomicGetPtr" compose/deep [
		a [pointer]
		return: [pointer]
	]

	SetError: make-routine sdl2 "SDL_SetError" compose/deep [
		fmt [pointer]
		...
		return: [int32]
	]

	GetError: make-routine sdl2 "SDL_GetError" compose/deep [
		return: [pointer]
	]

	ClearError: make-routine sdl2 "SDL_ClearError" compose/deep [
		return: [void]
	]

	Error: make-routine sdl2 "SDL_Error" compose/deep [
		code [int32]
		return: [int32]
	]

	CreateMutex: make-routine sdl2 "SDL_CreateMutex" compose/deep [
		return: [pointer]
	]

	LockMutex: make-routine sdl2 "SDL_LockMutex" compose/deep [
		mutex [pointer]
		return: [int32]
	]

	TryLockMutex: make-routine sdl2 "SDL_TryLockMutex" compose/deep [
		mutex [pointer]
		return: [int32]
	]

	UnlockMutex: make-routine sdl2 "SDL_UnlockMutex" compose/deep [
		mutex [pointer]
		return: [int32]
	]

	DestroyMutex: make-routine sdl2 "SDL_DestroyMutex" compose/deep [
		mutex [pointer]
		return: [void]
	]

	CreateSemaphore: make-routine sdl2 "SDL_CreateSemaphore" compose/deep [
		initial_value [uint32]
		return: [pointer]
	]

	DestroySemaphore: make-routine sdl2 "SDL_DestroySemaphore" compose/deep [
		sem [pointer]
		return: [void]
	]

	SemWait: make-routine sdl2 "SDL_SemWait" compose/deep [
		sem [pointer]
		return: [int32]
	]

	SemTryWait: make-routine sdl2 "SDL_SemTryWait" compose/deep [
		sem [pointer]
		return: [int32]
	]

	SemWaitTimeout: make-routine sdl2 "SDL_SemWaitTimeout" compose/deep [
		sem [pointer]
		ms [uint32]
		return: [int32]
	]

	SemPost: make-routine sdl2 "SDL_SemPost" compose/deep [
		sem [pointer]
		return: [int32]
	]

	SemValue: make-routine sdl2 "SDL_SemValue" compose/deep [
		sem [pointer]
		return: [uint32]
	]

	CreateCond: make-routine sdl2 "SDL_CreateCond" compose/deep [
		return: [pointer]
	]

	DestroyCond: make-routine sdl2 "SDL_DestroyCond" compose/deep [
		cond [pointer]
		return: [void]
	]

	CondSignal: make-routine sdl2 "SDL_CondSignal" compose/deep [
		cond [pointer]
		return: [int32]
	]

	CondBroadcast: make-routine sdl2 "SDL_CondBroadcast" compose/deep [
		cond [pointer]
		return: [int32]
	]

	CondWait: make-routine sdl2 "SDL_CondWait" compose/deep [
		cond [pointer]
		mutex [pointer]
		return: [int32]
	]

	CondWaitTimeout: make-routine sdl2 "SDL_CondWaitTimeout" compose/deep [
		cond [pointer]
		mutex [pointer]
		ms [uint32]
		return: [int32]
	]

	CreateThread: make-routine sdl2 "SDL_CreateThread" compose/deep [
		fn [pointer]
		name [pointer]
		data [pointer]
		return: [pointer]
	]

	GetThreadName: make-routine sdl2 "SDL_GetThreadName" compose/deep [
		thread [pointer]
		return: [pointer]
	]

	ThreadID: make-routine sdl2 "SDL_ThreadID" compose/deep [
		return: [uint64]
	]

	GetThreadID: make-routine sdl2 "SDL_GetThreadID" compose/deep [
		thread [pointer]
		return: [uint64]
	]

	SetThreadPriority: make-routine sdl2 "SDL_SetThreadPriority" compose/deep [
		priority [int32]
		return: [int32]
	]

	WaitThread: make-routine sdl2 "SDL_WaitThread" compose/deep [
		thread [pointer]
		status [pointer]
		return: [void]
	]

	DetachThread: make-routine sdl2 "SDL_DetachThread" compose/deep [
		thread [pointer]
		return: [void]
	]

	TLSCreate: make-routine sdl2 "SDL_TLSCreate" compose/deep [
		return: [uint32]
	]

	TLSGet: make-routine sdl2 "SDL_TLSGet" compose/deep [
		id [uint32]
		return: [pointer]
	]

	TLSSet: make-routine sdl2 "SDL_TLSSet" compose/deep [
		id [uint32]
		value [pointer]
		destructor [pointer]
		return: [int32]
	]

	RWFromFile: make-routine sdl2 "SDL_RWFromFile" compose/deep [
		file [pointer]
		mode [pointer]
		return: [pointer]
	]

	RWFromFP: make-routine sdl2 "SDL_RWFromFP" compose/deep [
		fp [pointer]
		autoclose [int32]
		return: [pointer]
	]

	RWFromMem: make-routine sdl2 "SDL_RWFromMem" compose/deep [
		mem [pointer]
		size [int32]
		return: [pointer]
	]

	RWFromConstMem: make-routine sdl2 "SDL_RWFromConstMem" compose/deep [
		mem [pointer]
		size [int32]
		return: [pointer]
	]

	AllocRW: make-routine sdl2 "SDL_AllocRW" compose/deep [
		return: [pointer]
	]

	FreeRW: make-routine sdl2 "SDL_FreeRW" compose/deep [
		area [pointer]
		return: [void]
	]

	ReadU8: make-routine sdl2 "SDL_ReadU8" compose/deep [
		src [pointer]
		return: [uint8]
	]

	ReadLE16: make-routine sdl2 "SDL_ReadLE16" compose/deep [
		src [pointer]
		return: [uint16]
	]

	ReadBE16: make-routine sdl2 "SDL_ReadBE16" compose/deep [
		src [pointer]
		return: [uint16]
	]

	ReadLE32: make-routine sdl2 "SDL_ReadLE32" compose/deep [
		src [pointer]
		return: [uint32]
	]

	ReadBE32: make-routine sdl2 "SDL_ReadBE32" compose/deep [
		src [pointer]
		return: [uint32]
	]

	ReadLE64: make-routine sdl2 "SDL_ReadLE64" compose/deep [
		src [pointer]
		return: [uint64]
	]

	ReadBE64: make-routine sdl2 "SDL_ReadBE64" compose/deep [
		src [pointer]
		return: [uint64]
	]

	WriteU8: make-routine sdl2 "SDL_WriteU8" compose/deep [
		dst [pointer]
		value [uint8]
		return: [int32]
	]

	WriteLE16: make-routine sdl2 "SDL_WriteLE16" compose/deep [
		dst [pointer]
		value [uint16]
		return: [int32]
	]

	WriteBE16: make-routine sdl2 "SDL_WriteBE16" compose/deep [
		dst [pointer]
		value [uint16]
		return: [int32]
	]

	WriteLE32: make-routine sdl2 "SDL_WriteLE32" compose/deep [
		dst [pointer]
		value [uint32]
		return: [int32]
	]

	WriteBE32: make-routine sdl2 "SDL_WriteBE32" compose/deep [
		dst [pointer]
		value [uint32]
		return: [int32]
	]

	WriteLE64: make-routine sdl2 "SDL_WriteLE64" compose/deep [
		dst [pointer]
		value [uint64]
		return: [int32]
	]

	WriteBE64: make-routine sdl2 "SDL_WriteBE64" compose/deep [
		dst [pointer]
		value [uint64]
		return: [int32]
	]

	GetNumAudioDrivers: make-routine sdl2 "SDL_GetNumAudioDrivers" compose/deep [
		return: [int32]
	]

	GetAudioDriver: make-routine sdl2 "SDL_GetAudioDriver" compose/deep [
		index [int32]
		return: [pointer]
	]

	AudioInit: make-routine sdl2 "SDL_AudioInit" compose/deep [
		driver_name [pointer]
		return: [int32]
	]

	AudioQuit: make-routine sdl2 "SDL_AudioQuit" compose/deep [
		return: [void]
	]

	GetCurrentAudioDriver: make-routine sdl2 "SDL_GetCurrentAudioDriver" compose/deep [
		return: [pointer]
	]

	OpenAudio: make-routine sdl2 "SDL_OpenAudio" compose/deep [
		desired [pointer]
		obtained [pointer]
		return: [int32]
	]

	GetNumAudioDevices: make-routine sdl2 "SDL_GetNumAudioDevices" compose/deep [
		iscapture [int32]
		return: [int32]
	]

	GetAudioDeviceName: make-routine sdl2 "SDL_GetAudioDeviceName" compose/deep [
		index [int32]
		iscapture [int32]
		return: [pointer]
	]

	OpenAudioDevice: make-routine sdl2 "SDL_OpenAudioDevice" compose/deep [
		device [pointer]
		iscapture [int32]
		desired [pointer]
		obtained [pointer]
		allowed_changes [int32]
		return: [uint32]
	]

	GetAudioStatus: make-routine sdl2 "SDL_GetAudioStatus" compose/deep [
		return: [int32]
	]

	GetAudioDeviceStatus: make-routine sdl2 "SDL_GetAudioDeviceStatus" compose/deep [
		dev [uint32]
		return: [int32]
	]

	PauseAudio: make-routine sdl2 "SDL_PauseAudio" compose/deep [
		pause_on [int32]
		return: [void]
	]

	PauseAudioDevice: make-routine sdl2 "SDL_PauseAudioDevice" compose/deep [
		dev [uint32]
		pause_on [int32]
		return: [void]
	]

	LoadWAV_RW: make-routine sdl2 "SDL_LoadWAV_RW" compose/deep [
		src [pointer]
		freesrc [int32]
		spec [pointer]
		audio_buf [pointer]
		audio_len [pointer]
		return: [pointer]
	]

	FreeWAV: make-routine sdl2 "SDL_FreeWAV" compose/deep [
		audio_buf [pointer]
		return: [void]
	]

	BuildAudioCVT: make-routine sdl2 "SDL_BuildAudioCVT" compose/deep [
		cvt [pointer]
		src_format [uint16]
		src_channels [uint8]
		src_rate [int32]
		dst_format [uint16]
		dst_channels [uint8]
		dst_rate [int32]
		return: [int32]
	]

	ConvertAudio: make-routine sdl2 "SDL_ConvertAudio" compose/deep [
		cvt [pointer]
		return: [int32]
	]

	MixAudio: make-routine sdl2 "SDL_MixAudio" compose/deep [
		dst [pointer]
		src [pointer]
		len [uint32]
		volume [int32]
		return: [void]
	]

	MixAudioFormat: make-routine sdl2 "SDL_MixAudioFormat" compose/deep [
		dst [pointer]
		src [pointer]
		format [uint16]
		len [uint32]
		volume [int32]
		return: [void]
	]

	LockAudio: make-routine sdl2 "SDL_LockAudio" compose/deep [
		return: [void]
	]

	LockAudioDevice: make-routine sdl2 "SDL_LockAudioDevice" compose/deep [
		dev [uint32]
		return: [void]
	]

	UnlockAudio: make-routine sdl2 "SDL_UnlockAudio" compose/deep [
		return: [void]
	]

	UnlockAudioDevice: make-routine sdl2 "SDL_UnlockAudioDevice" compose/deep [
		dev [uint32]
		return: [void]
	]

	CloseAudio: make-routine sdl2 "SDL_CloseAudio" compose/deep [
		return: [void]
	]

	CloseAudioDevice: make-routine sdl2 "SDL_CloseAudioDevice" compose/deep [
		dev [uint32]
		return: [void]
	]

	SetClipboardText: make-routine sdl2 "SDL_SetClipboardText" compose/deep [
		text [pointer]
		return: [int32]
	]

	GetClipboardText: make-routine sdl2 "SDL_GetClipboardText" compose/deep [
		return: [pointer]
	]

	HasClipboardText: make-routine sdl2 "SDL_HasClipboardText" compose/deep [
		return: [int32]
	]

	GetCPUCount: make-routine sdl2 "SDL_GetCPUCount" compose/deep [
		return: [int32]
	]

	GetCPUCacheLineSize: make-routine sdl2 "SDL_GetCPUCacheLineSize" compose/deep [
		return: [int32]
	]

	HasRDTSC: make-routine sdl2 "SDL_HasRDTSC" compose/deep [
		return: [int32]
	]

	HasAltiVec: make-routine sdl2 "SDL_HasAltiVec" compose/deep [
		return: [int32]
	]

	HasMMX: make-routine sdl2 "SDL_HasMMX" compose/deep [
		return: [int32]
	]

	Has3DNow: make-routine sdl2 "SDL_Has3DNow" compose/deep [
		return: [int32]
	]

	HasSSE: make-routine sdl2 "SDL_HasSSE" compose/deep [
		return: [int32]
	]

	HasSSE2: make-routine sdl2 "SDL_HasSSE2" compose/deep [
		return: [int32]
	]

	HasSSE3: make-routine sdl2 "SDL_HasSSE3" compose/deep [
		return: [int32]
	]

	HasSSE41: make-routine sdl2 "SDL_HasSSE41" compose/deep [
		return: [int32]
	]

	HasSSE42: make-routine sdl2 "SDL_HasSSE42" compose/deep [
		return: [int32]
	]

	HasAVX: make-routine sdl2 "SDL_HasAVX" compose/deep [
		return: [int32]
	]

	GetSystemRAM: make-routine sdl2 "SDL_GetSystemRAM" compose/deep [
		return: [int32]
	]

	GetPixelFormatName: make-routine sdl2 "SDL_GetPixelFormatName" compose/deep [
		format [uint32]
		return: [pointer]
	]

	PixelFormatEnumToMasks: make-routine sdl2 "SDL_PixelFormatEnumToMasks" compose/deep [
		format [uint32]
		bpp [pointer]
		Rmask [pointer]
		Gmask [pointer]
		Bmask [pointer]
		Amask [pointer]
		return: [int32]
	]

	MasksToPixelFormatEnum: make-routine sdl2 "SDL_MasksToPixelFormatEnum" compose/deep [
		bpp [int32]
		Rmask [uint32]
		Gmask [uint32]
		Bmask [uint32]
		Amask [uint32]
		return: [uint32]
	]

	AllocFormat: make-routine sdl2 "SDL_AllocFormat" compose/deep [
		pixel_format [uint32]
		return: [pointer]
	]

	FreeFormat: make-routine sdl2 "SDL_FreeFormat" compose/deep [
		format [pointer]
		return: [void]
	]

	AllocPalette: make-routine sdl2 "SDL_AllocPalette" compose/deep [
		ncolors [int32]
		return: [pointer]
	]

	SetPixelFormatPalette: make-routine sdl2 "SDL_SetPixelFormatPalette" compose/deep [
		format [pointer]
		palette [pointer]
		return: [int32]
	]

	SetPaletteColors: make-routine sdl2 "SDL_SetPaletteColors" compose/deep [
		palette [pointer]
		colors [pointer]
		firstcolor [int32]
		ncolors [int32]
		return: [int32]
	]

	FreePalette: make-routine sdl2 "SDL_FreePalette" compose/deep [
		palette [pointer]
		return: [void]
	]

	MapRGB: make-routine sdl2 "SDL_MapRGB" compose/deep [
		format [pointer]
		r [uint8]
		g [uint8]
		b [uint8]
		return: [uint32]
	]

	MapRGBA: make-routine sdl2 "SDL_MapRGBA" compose/deep [
		format [pointer]
		r [uint8]
		g [uint8]
		b [uint8]
		a [uint8]
		return: [uint32]
	]

	GetRGB: make-routine sdl2 "SDL_GetRGB" compose/deep [
		pixel [uint32]
		format [pointer]
		r [pointer]
		g [pointer]
		b [pointer]
		return: [void]
	]

	GetRGBA: make-routine sdl2 "SDL_GetRGBA" compose/deep [
		pixel [uint32]
		format [pointer]
		r [pointer]
		g [pointer]
		b [pointer]
		a [pointer]
		return: [void]
	]

	CalculateGammaRamp: make-routine sdl2 "SDL_CalculateGammaRamp" compose/deep [
		gamma [float]
		ramp [pointer]
		return: [void]
	]

	HasIntersection: make-routine sdl2 "SDL_HasIntersection" compose/deep [
		A [pointer]
		B [pointer]
		return: [int32]
	]

	IntersectRect: make-routine sdl2 "SDL_IntersectRect" compose/deep [
		A [pointer]
		B [pointer]
		result [pointer]
		return: [int32]
	]

	UnionRect: make-routine sdl2 "SDL_UnionRect" compose/deep [
		A [pointer]
		B [pointer]
		result [pointer]
		return: [void]
	]

	EnclosePoints: make-routine sdl2 "SDL_EnclosePoints" compose/deep [
		points [pointer]
		count [int32]
		clip [pointer]
		result [pointer]
		return: [int32]
	]

	IntersectRectAndLine: make-routine sdl2 "SDL_IntersectRectAndLine" compose/deep [
		rect [pointer]
		X1 [pointer]
		Y1 [pointer]
		X2 [pointer]
		Y2 [pointer]
		return: [int32]
	]

	CreateRGBSurface: make-routine sdl2 "SDL_CreateRGBSurface" compose/deep [
		flags [uint32]
		width [int32]
		height [int32]
		depth [int32]
		Rmask [uint32]
		Gmask [uint32]
		Bmask [uint32]
		Amask [uint32]
		return: [pointer]
	]

	CreateRGBSurfaceFrom: make-routine sdl2 "SDL_CreateRGBSurfaceFrom" compose/deep [
		pixels [pointer]
		width [int32]
		height [int32]
		depth [int32]
		pitch [int32]
		Rmask [uint32]
		Gmask [uint32]
		Bmask [uint32]
		Amask [uint32]
		return: [pointer]
	]

	FreeSurface: make-routine sdl2 "SDL_FreeSurface" compose/deep [
		surface [pointer]
		return: [void]
	]

	SetSurfacePalette: make-routine sdl2 "SDL_SetSurfacePalette" compose/deep [
		surface [pointer]
		palette [pointer]
		return: [int32]
	]

	LockSurface: make-routine sdl2 "SDL_LockSurface" compose/deep [
		surface [pointer]
		return: [int32]
	]

	UnlockSurface: make-routine sdl2 "SDL_UnlockSurface" compose/deep [
		surface [pointer]
		return: [void]
	]

	LoadBMP_RW: make-routine sdl2 "SDL_LoadBMP_RW" compose/deep [
		src [pointer]
		freesrc [int32]
		return: [pointer]
	]

	SaveBMP_RW: make-routine sdl2 "SDL_SaveBMP_RW" compose/deep [
		surface [pointer]
		dst [pointer]
		freedst [int32]
		return: [int32]
	]

	SetSurfaceRLE: make-routine sdl2 "SDL_SetSurfaceRLE" compose/deep [
		surface [pointer]
		flag [int32]
		return: [int32]
	]

	SetColorKey: make-routine sdl2 "SDL_SetColorKey" compose/deep [
		surface [pointer]
		flag [int32]
		key [uint32]
		return: [int32]
	]

	GetColorKey: make-routine sdl2 "SDL_GetColorKey" compose/deep [
		surface [pointer]
		key [pointer]
		return: [int32]
	]

	SetSurfaceColorMod: make-routine sdl2 "SDL_SetSurfaceColorMod" compose/deep [
		surface [pointer]
		r [uint8]
		g [uint8]
		b [uint8]
		return: [int32]
	]

	GetSurfaceColorMod: make-routine sdl2 "SDL_GetSurfaceColorMod" compose/deep [
		surface [pointer]
		r [pointer]
		g [pointer]
		b [pointer]
		return: [int32]
	]

	SetSurfaceAlphaMod: make-routine sdl2 "SDL_SetSurfaceAlphaMod" compose/deep [
		surface [pointer]
		alpha [uint8]
		return: [int32]
	]

	GetSurfaceAlphaMod: make-routine sdl2 "SDL_GetSurfaceAlphaMod" compose/deep [
		surface [pointer]
		alpha [pointer]
		return: [int32]
	]

	SetSurfaceBlendMode: make-routine sdl2 "SDL_SetSurfaceBlendMode" compose/deep [
		surface [pointer]
		blendMode [int32]
		return: [int32]
	]

	GetSurfaceBlendMode: make-routine sdl2 "SDL_GetSurfaceBlendMode" compose/deep [
		surface [pointer]
		blendMode [pointer]
		return: [int32]
	]

	SetClipRect: make-routine sdl2 "SDL_SetClipRect" compose/deep [
		surface [pointer]
		rect [pointer]
		return: [int32]
	]

	GetClipRect: make-routine sdl2 "SDL_GetClipRect" compose/deep [
		surface [pointer]
		rect [pointer]
		return: [void]
	]

	ConvertSurface: make-routine sdl2 "SDL_ConvertSurface" compose/deep [
		src [pointer]
		fmt [pointer]
		flags [uint32]
		return: [pointer]
	]

	ConvertSurfaceFormat: make-routine sdl2 "SDL_ConvertSurfaceFormat" compose/deep [
		src [pointer]
		pixel_format [uint32]
		flags [uint32]
		return: [pointer]
	]

	ConvertPixels: make-routine sdl2 "SDL_ConvertPixels" compose/deep [
		width [int32]
		height [int32]
		src_format [uint32]
		src [pointer]
		src_pitch [int32]
		dst_format [uint32]
		dst [pointer]
		dst_pitch [int32]
		return: [int32]
	]

	FillRect: make-routine sdl2 "SDL_FillRect" compose/deep [
		dst [pointer]
		rect [pointer]
		color [uint32]
		return: [int32]
	]

	FillRects: make-routine sdl2 "SDL_FillRects" compose/deep [
		dst [pointer]
		rects [pointer]
		count [int32]
		color [uint32]
		return: [int32]
	]

	UpperBlit: make-routine sdl2 "SDL_UpperBlit" compose/deep [
		src [pointer]
		srcrect [pointer]
		dst [pointer]
		dstrect [pointer]
		return: [int32]
	]

	LowerBlit: make-routine sdl2 "SDL_LowerBlit" compose/deep [
		src [pointer]
		srcrect [pointer]
		dst [pointer]
		dstrect [pointer]
		return: [int32]
	]

	SoftStretch: make-routine sdl2 "SDL_SoftStretch" compose/deep [
		src [pointer]
		srcrect [pointer]
		dst [pointer]
		dstrect [pointer]
		return: [int32]
	]

	UpperBlitScaled: make-routine sdl2 "SDL_UpperBlitScaled" compose/deep [
		src [pointer]
		srcrect [pointer]
		dst [pointer]
		dstrect [pointer]
		return: [int32]
	]

	LowerBlitScaled: make-routine sdl2 "SDL_LowerBlitScaled" compose/deep [
		src [pointer]
		srcrect [pointer]
		dst [pointer]
		dstrect [pointer]
		return: [int32]
	]

	GetNumVideoDrivers: make-routine sdl2 "SDL_GetNumVideoDrivers" compose/deep [
		return: [int32]
	]

	GetVideoDriver: make-routine sdl2 "SDL_GetVideoDriver" compose/deep [
		index [int32]
		return: [pointer]
	]

	VideoInit: make-routine sdl2 "SDL_VideoInit" compose/deep [
		driver_name [pointer]
		return: [int32]
	]

	VideoQuit: make-routine sdl2 "SDL_VideoQuit" compose/deep [
		return: [void]
	]

	GetCurrentVideoDriver: make-routine sdl2 "SDL_GetCurrentVideoDriver" compose/deep [
		return: [pointer]
	]

	GetNumVideoDisplays: make-routine sdl2 "SDL_GetNumVideoDisplays" compose/deep [
		return: [int32]
	]

	GetDisplayName: make-routine sdl2 "SDL_GetDisplayName" compose/deep [
		displayIndex [int32]
		return: [pointer]
	]

	GetDisplayBounds: make-routine sdl2 "SDL_GetDisplayBounds" compose/deep [
		displayIndex [int32]
		rect [pointer]
		return: [int32]
	]

	GetNumDisplayModes: make-routine sdl2 "SDL_GetNumDisplayModes" compose/deep [
		displayIndex [int32]
		return: [int32]
	]

	GetDisplayMode: make-routine sdl2 "SDL_GetDisplayMode" compose/deep [
		displayIndex [int32]
		modeIndex [int32]
		mode [pointer]
		return: [int32]
	]

	GetDesktopDisplayMode: make-routine sdl2 "SDL_GetDesktopDisplayMode" compose/deep [
		displayIndex [int32]
		mode [pointer]
		return: [int32]
	]

	GetCurrentDisplayMode: make-routine sdl2 "SDL_GetCurrentDisplayMode" compose/deep [
		displayIndex [int32]
		mode [pointer]
		return: [int32]
	]

	GetClosestDisplayMode: make-routine sdl2 "SDL_GetClosestDisplayMode" compose/deep [
		displayIndex [int32]
		mode [pointer]
		closest [pointer]
		return: [pointer]
	]

	GetWindowDisplayIndex: make-routine sdl2 "SDL_GetWindowDisplayIndex" compose/deep [
		window [pointer]
		return: [int32]
	]

	SetWindowDisplayMode: make-routine sdl2 "SDL_SetWindowDisplayMode" compose/deep [
		window [pointer]
		mode [pointer]
		return: [int32]
	]

	GetWindowDisplayMode: make-routine sdl2 "SDL_GetWindowDisplayMode" compose/deep [
		window [pointer]
		mode [pointer]
		return: [int32]
	]

	GetWindowPixelFormat: make-routine sdl2 "SDL_GetWindowPixelFormat" compose/deep [
		window [pointer]
		return: [uint32]
	]

	CreateWindow: make-routine sdl2 "SDL_CreateWindow" compose/deep [
		title [pointer]
		x [int32]
		y [int32]
		w [int32]
		h [int32]
		flags [uint32]
		return: [pointer]
	]

	CreateWindowFrom: make-routine sdl2 "SDL_CreateWindowFrom" compose/deep [
		data [pointer]
		return: [pointer]
	]

	GetWindowID: make-routine sdl2 "SDL_GetWindowID" compose/deep [
		window [pointer]
		return: [uint32]
	]

	GetWindowFromID: make-routine sdl2 "SDL_GetWindowFromID" compose/deep [
		id [uint32]
		return: [pointer]
	]

	GetWindowFlags: make-routine sdl2 "SDL_GetWindowFlags" compose/deep [
		window [pointer]
		return: [uint32]
	]

	SetWindowTitle: make-routine sdl2 "SDL_SetWindowTitle" compose/deep [
		window [pointer]
		title [pointer]
		return: [void]
	]

	GetWindowTitle: make-routine sdl2 "SDL_GetWindowTitle" compose/deep [
		window [pointer]
		return: [pointer]
	]

	SetWindowIcon: make-routine sdl2 "SDL_SetWindowIcon" compose/deep [
		window [pointer]
		icon [pointer]
		return: [void]
	]

	SetWindowData: make-routine sdl2 "SDL_SetWindowData" compose/deep [
		window [pointer]
		name [pointer]
		userdata [pointer]
		return: [pointer]
	]

	GetWindowData: make-routine sdl2 "SDL_GetWindowData" compose/deep [
		window [pointer]
		name [pointer]
		return: [pointer]
	]

	SetWindowPosition: make-routine sdl2 "SDL_SetWindowPosition" compose/deep [
		window [pointer]
		x [int32]
		y [int32]
		return: [void]
	]

	GetWindowPosition: make-routine sdl2 "SDL_GetWindowPosition" compose/deep [
		window [pointer]
		x [pointer]
		y [pointer]
		return: [void]
	]

	SetWindowSize: make-routine sdl2 "SDL_SetWindowSize" compose/deep [
		window [pointer]
		w [int32]
		h [int32]
		return: [void]
	]

	GetWindowSize: make-routine sdl2 "SDL_GetWindowSize" compose/deep [
		window [pointer]
		w [pointer]
		h [pointer]
		return: [void]
	]

	SetWindowMinimumSize: make-routine sdl2 "SDL_SetWindowMinimumSize" compose/deep [
		window [pointer]
		min_w [int32]
		min_h [int32]
		return: [void]
	]

	GetWindowMinimumSize: make-routine sdl2 "SDL_GetWindowMinimumSize" compose/deep [
		window [pointer]
		w [pointer]
		h [pointer]
		return: [void]
	]

	SetWindowMaximumSize: make-routine sdl2 "SDL_SetWindowMaximumSize" compose/deep [
		window [pointer]
		max_w [int32]
		max_h [int32]
		return: [void]
	]

	GetWindowMaximumSize: make-routine sdl2 "SDL_GetWindowMaximumSize" compose/deep [
		window [pointer]
		w [pointer]
		h [pointer]
		return: [void]
	]

	SetWindowBordered: make-routine sdl2 "SDL_SetWindowBordered" compose/deep [
		window [pointer]
		bordered [int32]
		return: [void]
	]

	ShowWindow: make-routine sdl2 "SDL_ShowWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	HideWindow: make-routine sdl2 "SDL_HideWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	RaiseWindow: make-routine sdl2 "SDL_RaiseWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	MaximizeWindow: make-routine sdl2 "SDL_MaximizeWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	MinimizeWindow: make-routine sdl2 "SDL_MinimizeWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	RestoreWindow: make-routine sdl2 "SDL_RestoreWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	SetWindowFullscreen: make-routine sdl2 "SDL_SetWindowFullscreen" compose/deep [
		window [pointer]
		flags [uint32]
		return: [int32]
	]

	GetWindowSurface: make-routine sdl2 "SDL_GetWindowSurface" compose/deep [
		window [pointer]
		return: [pointer]
	]

	UpdateWindowSurface: make-routine sdl2 "SDL_UpdateWindowSurface" compose/deep [
		window [pointer]
		return: [int32]
	]

	UpdateWindowSurfaceRects: make-routine sdl2 "SDL_UpdateWindowSurfaceRects" compose/deep [
		window [pointer]
		rects [pointer]
		numrects [int32]
		return: [int32]
	]

	SetWindowGrab: make-routine sdl2 "SDL_SetWindowGrab" compose/deep [
		window [pointer]
		grabbed [int32]
		return: [void]
	]

	GetWindowGrab: make-routine sdl2 "SDL_GetWindowGrab" compose/deep [
		window [pointer]
		return: [int32]
	]

	SetWindowBrightness: make-routine sdl2 "SDL_SetWindowBrightness" compose/deep [
		window [pointer]
		brightness [float]
		return: [int32]
	]

	GetWindowBrightness: make-routine sdl2 "SDL_GetWindowBrightness" compose/deep [
		window [pointer]
		return: [float]
	]

	SetWindowGammaRamp: make-routine sdl2 "SDL_SetWindowGammaRamp" compose/deep [
		window [pointer]
		red [pointer]
		green [pointer]
		blue [pointer]
		return: [int32]
	]

	GetWindowGammaRamp: make-routine sdl2 "SDL_GetWindowGammaRamp" compose/deep [
		window [pointer]
		red [pointer]
		green [pointer]
		blue [pointer]
		return: [int32]
	]

	DestroyWindow: make-routine sdl2 "SDL_DestroyWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	IsScreenSaverEnabled: make-routine sdl2 "SDL_IsScreenSaverEnabled" compose/deep [
		return: [int32]
	]

	EnableScreenSaver: make-routine sdl2 "SDL_EnableScreenSaver" compose/deep [
		return: [void]
	]

	DisableScreenSaver: make-routine sdl2 "SDL_DisableScreenSaver" compose/deep [
		return: [void]
	]

	GL_LoadLibrary: make-routine sdl2 "SDL_GL_LoadLibrary" compose/deep [
		path [pointer]
		return: [int32]
	]

	GL_GetProcAddress: make-routine sdl2 "SDL_GL_GetProcAddress" compose/deep [
		proc [pointer]
		return: [pointer]
	]

	GL_UnloadLibrary: make-routine sdl2 "SDL_GL_UnloadLibrary" compose/deep [
		return: [void]
	]

	GL_ExtensionSupported: make-routine sdl2 "SDL_GL_ExtensionSupported" compose/deep [
		extension [pointer]
		return: [int32]
	]

	GL_ResetAttributes: make-routine sdl2 "SDL_GL_ResetAttributes" compose/deep [
		return: [void]
	]

	GL_SetAttribute: make-routine sdl2 "SDL_GL_SetAttribute" compose/deep [
		attr [int32]
		value [int32]
		return: [int32]
	]

	GL_GetAttribute: make-routine sdl2 "SDL_GL_GetAttribute" compose/deep [
		attr [int32]
		value [pointer]
		return: [int32]
	]

	GL_CreateContext: make-routine sdl2 "SDL_GL_CreateContext" compose/deep [
		window [pointer]
		return: [pointer]
	]

	GL_MakeCurrent: make-routine sdl2 "SDL_GL_MakeCurrent" compose/deep [
		window [pointer]
		context [pointer]
		return: [int32]
	]

	GL_GetCurrentWindow: make-routine sdl2 "SDL_GL_GetCurrentWindow" compose/deep [
		return: [pointer]
	]

	GL_GetCurrentContext: make-routine sdl2 "SDL_GL_GetCurrentContext" compose/deep [
		return: [pointer]
	]

	GL_GetDrawableSize: make-routine sdl2 "SDL_GL_GetDrawableSize" compose/deep [
		window [pointer]
		w [pointer]
		h [pointer]
		return: [void]
	]

	GL_SetSwapInterval: make-routine sdl2 "SDL_GL_SetSwapInterval" compose/deep [
		interval [int32]
		return: [int32]
	]

	GL_GetSwapInterval: make-routine sdl2 "SDL_GL_GetSwapInterval" compose/deep [
		return: [int32]
	]

	GL_SwapWindow: make-routine sdl2 "SDL_GL_SwapWindow" compose/deep [
		window [pointer]
		return: [void]
	]

	GL_DeleteContext: make-routine sdl2 "SDL_GL_DeleteContext" compose/deep [
		context [pointer]
		return: [void]
	]

	GetKeyboardFocus: make-routine sdl2 "SDL_GetKeyboardFocus" compose/deep [
		return: [pointer]
	]

	GetKeyboardState: make-routine sdl2 "SDL_GetKeyboardState" compose/deep [
		numkeys [pointer]
		return: [pointer]
	]

	GetModState: make-routine sdl2 "SDL_GetModState" compose/deep [
		return: [int32]
	]

	SetModState: make-routine sdl2 "SDL_SetModState" compose/deep [
		modstate [int32]
		return: [void]
	]

	GetKeyFromScancode: make-routine sdl2 "SDL_GetKeyFromScancode" compose/deep [
		scancode [int32]
		return: [int32]
	]

	GetScancodeFromKey: make-routine sdl2 "SDL_GetScancodeFromKey" compose/deep [
		key [int32]
		return: [int32]
	]

	GetScancodeName: make-routine sdl2 "SDL_GetScancodeName" compose/deep [
		scancode [int32]
		return: [pointer]
	]

	GetScancodeFromName: make-routine sdl2 "SDL_GetScancodeFromName" compose/deep [
		name [pointer]
		return: [int32]
	]

	GetKeyName: make-routine sdl2 "SDL_GetKeyName" compose/deep [
		key [int32]
		return: [pointer]
	]

	GetKeyFromName: make-routine sdl2 "SDL_GetKeyFromName" compose/deep [
		name [pointer]
		return: [int32]
	]

	StartTextInput: make-routine sdl2 "SDL_StartTextInput" compose/deep [
		return: [void]
	]

	IsTextInputActive: make-routine sdl2 "SDL_IsTextInputActive" compose/deep [
		return: [int32]
	]

	StopTextInput: make-routine sdl2 "SDL_StopTextInput" compose/deep [
		return: [void]
	]

	SetTextInputRect: make-routine sdl2 "SDL_SetTextInputRect" compose/deep [
		rect [pointer]
		return: [void]
	]

	HasScreenKeyboardSupport: make-routine sdl2 "SDL_HasScreenKeyboardSupport" compose/deep [
		return: [int32]
	]

	IsScreenKeyboardShown: make-routine sdl2 "SDL_IsScreenKeyboardShown" compose/deep [
		window [pointer]
		return: [int32]
	]

	GetMouseFocus: make-routine sdl2 "SDL_GetMouseFocus" compose/deep [
		return: [pointer]
	]

	GetMouseState: make-routine sdl2 "SDL_GetMouseState" compose/deep [
		x [pointer]
		y [pointer]
		return: [uint32]
	]

	GetRelativeMouseState: make-routine sdl2 "SDL_GetRelativeMouseState" compose/deep [
		x [pointer]
		y [pointer]
		return: [uint32]
	]

	WarpMouseInWindow: make-routine sdl2 "SDL_WarpMouseInWindow" compose/deep [
		window [pointer]
		x [int32]
		y [int32]
		return: [void]
	]

	SetRelativeMouseMode: make-routine sdl2 "SDL_SetRelativeMouseMode" compose/deep [
		enabled [int32]
		return: [int32]
	]

	GetRelativeMouseMode: make-routine sdl2 "SDL_GetRelativeMouseMode" compose/deep [
		return: [int32]
	]

	CreateCursor: make-routine sdl2 "SDL_CreateCursor" compose/deep [
		data [pointer]
		mask [pointer]
		w [int32]
		h [int32]
		hot_x [int32]
		hot_y [int32]
		return: [pointer]
	]

	CreateColorCursor: make-routine sdl2 "SDL_CreateColorCursor" compose/deep [
		surface [pointer]
		hot_x [int32]
		hot_y [int32]
		return: [pointer]
	]

	CreateSystemCursor: make-routine sdl2 "SDL_CreateSystemCursor" compose/deep [
		id [int32]
		return: [pointer]
	]

	SetCursor: make-routine sdl2 "SDL_SetCursor" compose/deep [
		cursor [pointer]
		return: [void]
	]

	GetCursor: make-routine sdl2 "SDL_GetCursor" compose/deep [
		return: [pointer]
	]

	GetDefaultCursor: make-routine sdl2 "SDL_GetDefaultCursor" compose/deep [
		return: [pointer]
	]

	FreeCursor: make-routine sdl2 "SDL_FreeCursor" compose/deep [
		cursor [pointer]
		return: [void]
	]

	ShowCursor: make-routine sdl2 "SDL_ShowCursor" compose/deep [
		toggle [int32]
		return: [int32]
	]

	NumJoysticks: make-routine sdl2 "SDL_NumJoysticks" compose/deep [
		return: [int32]
	]

	JoystickNameForIndex: make-routine sdl2 "SDL_JoystickNameForIndex" compose/deep [
		device_index [int32]
		return: [pointer]
	]

	JoystickOpen: make-routine sdl2 "SDL_JoystickOpen" compose/deep [
		device_index [int32]
		return: [pointer]
	]

	JoystickName: make-routine sdl2 "SDL_JoystickName" compose/deep [
		joystick [pointer]
		return: [pointer]
	]

	JoystickGetDeviceGUID: make-routine sdl2 "SDL_JoystickGetDeviceGUID" compose/deep [
		device_index [int32]
		return: [(SDL_JoystickGUID)]
	]

	JoystickGetGUID: make-routine sdl2 "SDL_JoystickGetGUID" compose/deep [
		joystick [pointer]
		return: [(SDL_JoystickGUID)]
	]

	JoystickGetGUIDString: make-routine sdl2 "SDL_JoystickGetGUIDString" compose/deep [
		guid [(SDL_JoystickGUID)]
		pszGUID [pointer]
		cbGUID [int32]
		return: [void]
	]

	JoystickGetGUIDFromString: make-routine sdl2 "SDL_JoystickGetGUIDFromString" compose/deep [
		pchGUID [pointer]
		return: [(SDL_JoystickGUID)]
	]

	JoystickGetAttached: make-routine sdl2 "SDL_JoystickGetAttached" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	JoystickInstanceID: make-routine sdl2 "SDL_JoystickInstanceID" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	JoystickNumAxes: make-routine sdl2 "SDL_JoystickNumAxes" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	JoystickNumBalls: make-routine sdl2 "SDL_JoystickNumBalls" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	JoystickNumHats: make-routine sdl2 "SDL_JoystickNumHats" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	JoystickNumButtons: make-routine sdl2 "SDL_JoystickNumButtons" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	JoystickUpdate: make-routine sdl2 "SDL_JoystickUpdate" compose/deep [
		return: [void]
	]

	JoystickEventState: make-routine sdl2 "SDL_JoystickEventState" compose/deep [
		state [int32]
		return: [int32]
	]

	JoystickGetAxis: make-routine sdl2 "SDL_JoystickGetAxis" compose/deep [
		joystick [pointer]
		axis [int32]
		return: [int16]
	]

	JoystickGetHat: make-routine sdl2 "SDL_JoystickGetHat" compose/deep [
		joystick [pointer]
		hat [int32]
		return: [uint8]
	]

	JoystickGetBall: make-routine sdl2 "SDL_JoystickGetBall" compose/deep [
		joystick [pointer]
		ball [int32]
		dx [pointer]
		dy [pointer]
		return: [int32]
	]

	JoystickGetButton: make-routine sdl2 "SDL_JoystickGetButton" compose/deep [
		joystick [pointer]
		button [int32]
		return: [uint8]
	]

	JoystickClose: make-routine sdl2 "SDL_JoystickClose" compose/deep [
		joystick [pointer]
		return: [void]
	]

	GameControllerAddMappingsFromRW: make-routine sdl2 "SDL_GameControllerAddMappingsFromRW" compose/deep [
		rw [pointer]
		freerw [int32]
		return: [int32]
	]

	GameControllerAddMapping: make-routine sdl2 "SDL_GameControllerAddMapping" compose/deep [
		mappingString [pointer]
		return: [int32]
	]

	GameControllerMappingForGUID: make-routine sdl2 "SDL_GameControllerMappingForGUID" compose/deep [
		guid [(SDL_JoystickGUID)]
		return: [pointer]
	]

	GameControllerMapping: make-routine sdl2 "SDL_GameControllerMapping" compose/deep [
		gamecontroller [pointer]
		return: [pointer]
	]

	IsGameController: make-routine sdl2 "SDL_IsGameController" compose/deep [
		joystick_index [int32]
		return: [int32]
	]

	GameControllerNameForIndex: make-routine sdl2 "SDL_GameControllerNameForIndex" compose/deep [
		joystick_index [int32]
		return: [pointer]
	]

	GameControllerOpen: make-routine sdl2 "SDL_GameControllerOpen" compose/deep [
		joystick_index [int32]
		return: [pointer]
	]

	GameControllerName: make-routine sdl2 "SDL_GameControllerName" compose/deep [
		gamecontroller [pointer]
		return: [pointer]
	]

	GameControllerGetAttached: make-routine sdl2 "SDL_GameControllerGetAttached" compose/deep [
		gamecontroller [pointer]
		return: [int32]
	]

	GameControllerGetJoystick: make-routine sdl2 "SDL_GameControllerGetJoystick" compose/deep [
		gamecontroller [pointer]
		return: [pointer]
	]

	GameControllerEventState: make-routine sdl2 "SDL_GameControllerEventState" compose/deep [
		state [int32]
		return: [int32]
	]

	GameControllerUpdate: make-routine sdl2 "SDL_GameControllerUpdate" compose/deep [
		return: [void]
	]

	GameControllerGetAxisFromString: make-routine sdl2 "SDL_GameControllerGetAxisFromString" compose/deep [
		pchString [pointer]
		return: [int32]
	]

	GameControllerGetStringForAxis: make-routine sdl2 "SDL_GameControllerGetStringForAxis" compose/deep [
		axis [int32]
		return: [pointer]
	]

	GameControllerGetBindForAxis: make-routine sdl2 "SDL_GameControllerGetBindForAxis" compose/deep [
		gamecontroller [pointer]
		axis [int32]
		return: [(SDL_GameControllerButtonBind)]
	]

	GameControllerGetAxis: make-routine sdl2 "SDL_GameControllerGetAxis" compose/deep [
		gamecontroller [pointer]
		axis [int32]
		return: [int16]
	]

	GameControllerGetButtonFromString: make-routine sdl2 "SDL_GameControllerGetButtonFromString" compose/deep [
		pchString [pointer]
		return: [int32]
	]

	GameControllerGetStringForButton: make-routine sdl2 "SDL_GameControllerGetStringForButton" compose/deep [
		button [int32]
		return: [pointer]
	]

	GameControllerGetBindForButton: make-routine sdl2 "SDL_GameControllerGetBindForButton" compose/deep [
		gamecontroller [pointer]
		button [int32]
		return: [(SDL_GameControllerButtonBind)]
	]

	GameControllerGetButton: make-routine sdl2 "SDL_GameControllerGetButton" compose/deep [
		gamecontroller [pointer]
		button [int32]
		return: [uint8]
	]

	GameControllerClose: make-routine sdl2 "SDL_GameControllerClose" compose/deep [
		gamecontroller [pointer]
		return: [void]
	]

	GetNumTouchDevices: make-routine sdl2 "SDL_GetNumTouchDevices" compose/deep [
		return: [int32]
	]

	GetTouchDevice: make-routine sdl2 "SDL_GetTouchDevice" compose/deep [
		index [int32]
		return: [int64]
	]

	GetNumTouchFingers: make-routine sdl2 "SDL_GetNumTouchFingers" compose/deep [
		touchID [int64]
		return: [int32]
	]

	GetTouchFinger: make-routine sdl2 "SDL_GetTouchFinger" compose/deep [
		touchID [int64]
		index [int32]
		return: [pointer]
	]

	RecordGesture: make-routine sdl2 "SDL_RecordGesture" compose/deep [
		touchId [int64]
		return: [int32]
	]

	SaveAllDollarTemplates: make-routine sdl2 "SDL_SaveAllDollarTemplates" compose/deep [
		dst [pointer]
		return: [int32]
	]

	SaveDollarTemplate: make-routine sdl2 "SDL_SaveDollarTemplate" compose/deep [
		gestureId [int64]
		dst [pointer]
		return: [int32]
	]

	LoadDollarTemplates: make-routine sdl2 "SDL_LoadDollarTemplates" compose/deep [
		touchId [int64]
		src [pointer]
		return: [int32]
	]

	PumpEvents: make-routine sdl2 "SDL_PumpEvents" compose/deep [
		return: [void]
	]

	PeepEvents: make-routine sdl2 "SDL_PeepEvents" compose/deep [
		events [pointer]
		numevents [int32]
		action [int32]
		minType [uint32]
		maxType [uint32]
		return: [int32]
	]

	HasEvent: make-routine sdl2 "SDL_HasEvent" compose/deep [
		type [uint32]
		return: [int32]
	]

	HasEvents: make-routine sdl2 "SDL_HasEvents" compose/deep [
		minType [uint32]
		maxType [uint32]
		return: [int32]
	]

	FlushEvent: make-routine sdl2 "SDL_FlushEvent" compose/deep [
		type [uint32]
		return: [void]
	]

	FlushEvents: make-routine sdl2 "SDL_FlushEvents" compose/deep [
		minType [uint32]
		maxType [uint32]
		return: [void]
	]

	PollEvent: make-routine sdl2 "SDL_PollEvent" compose/deep [
		event [pointer]
		return: [int32]
	]

	WaitEvent: make-routine sdl2 "SDL_WaitEvent" compose/deep [
		event [pointer]
		return: [int32]
	]

	WaitEventTimeout: make-routine sdl2 "SDL_WaitEventTimeout" compose/deep [
		event [pointer]
		timeout [int32]
		return: [int32]
	]

	PushEvent: make-routine sdl2 "SDL_PushEvent" compose/deep [
		event [pointer]
		return: [int32]
	]

	SetEventFilter: make-routine sdl2 "SDL_SetEventFilter" compose/deep [
		filter [pointer]
		userdata [pointer]
		return: [void]
	]

	GetEventFilter: make-routine sdl2 "SDL_GetEventFilter" compose/deep [
		filter [pointer]
		userdata [pointer]
		return: [int32]
	]

	AddEventWatch: make-routine sdl2 "SDL_AddEventWatch" compose/deep [
		filter [pointer]
		userdata [pointer]
		return: [void]
	]

	DelEventWatch: make-routine sdl2 "SDL_DelEventWatch" compose/deep [
		filter [pointer]
		userdata [pointer]
		return: [void]
	]

	FilterEvents: make-routine sdl2 "SDL_FilterEvents" compose/deep [
		filter [pointer]
		userdata [pointer]
		return: [void]
	]

	EventState: make-routine sdl2 "SDL_EventState" compose/deep [
		type [uint32]
		state [int32]
		return: [uint8]
	]

	RegisterEvents: make-routine sdl2 "SDL_RegisterEvents" compose/deep [
		numevents [int32]
		return: [uint32]
	]

	GetBasePath: make-routine sdl2 "SDL_GetBasePath" compose/deep [
		return: [pointer]
	]

	GetPrefPath: make-routine sdl2 "SDL_GetPrefPath" compose/deep [
		org [pointer]
		app [pointer]
		return: [pointer]
	]

	NumHaptics: make-routine sdl2 "SDL_NumHaptics" compose/deep [
		return: [int32]
	]

	HapticName: make-routine sdl2 "SDL_HapticName" compose/deep [
		device_index [int32]
		return: [pointer]
	]

	HapticOpen: make-routine sdl2 "SDL_HapticOpen" compose/deep [
		device_index [int32]
		return: [pointer]
	]

	HapticOpened: make-routine sdl2 "SDL_HapticOpened" compose/deep [
		device_index [int32]
		return: [int32]
	]

	HapticIndex: make-routine sdl2 "SDL_HapticIndex" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	MouseIsHaptic: make-routine sdl2 "SDL_MouseIsHaptic" compose/deep [
		return: [int32]
	]

	HapticOpenFromMouse: make-routine sdl2 "SDL_HapticOpenFromMouse" compose/deep [
		return: [pointer]
	]

	JoystickIsHaptic: make-routine sdl2 "SDL_JoystickIsHaptic" compose/deep [
		joystick [pointer]
		return: [int32]
	]

	HapticOpenFromJoystick: make-routine sdl2 "SDL_HapticOpenFromJoystick" compose/deep [
		joystick [pointer]
		return: [pointer]
	]

	HapticClose: make-routine sdl2 "SDL_HapticClose" compose/deep [
		haptic [pointer]
		return: [void]
	]

	HapticNumEffects: make-routine sdl2 "SDL_HapticNumEffects" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticNumEffectsPlaying: make-routine sdl2 "SDL_HapticNumEffectsPlaying" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticQuery: make-routine sdl2 "SDL_HapticQuery" compose/deep [
		haptic [pointer]
		return: [uint32]
	]

	HapticNumAxes: make-routine sdl2 "SDL_HapticNumAxes" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticEffectSupported: make-routine sdl2 "SDL_HapticEffectSupported" compose/deep [
		haptic [pointer]
		effect [pointer]
		return: [int32]
	]

	HapticNewEffect: make-routine sdl2 "SDL_HapticNewEffect" compose/deep [
		haptic [pointer]
		effect [pointer]
		return: [int32]
	]

	HapticUpdateEffect: make-routine sdl2 "SDL_HapticUpdateEffect" compose/deep [
		haptic [pointer]
		effect [int32]
		data [pointer]
		return: [int32]
	]

	HapticRunEffect: make-routine sdl2 "SDL_HapticRunEffect" compose/deep [
		haptic [pointer]
		effect [int32]
		iterations [uint32]
		return: [int32]
	]

	HapticStopEffect: make-routine sdl2 "SDL_HapticStopEffect" compose/deep [
		haptic [pointer]
		effect [int32]
		return: [int32]
	]

	HapticDestroyEffect: make-routine sdl2 "SDL_HapticDestroyEffect" compose/deep [
		haptic [pointer]
		effect [int32]
		return: [void]
	]

	HapticGetEffectStatus: make-routine sdl2 "SDL_HapticGetEffectStatus" compose/deep [
		haptic [pointer]
		effect [int32]
		return: [int32]
	]

	HapticSetGain: make-routine sdl2 "SDL_HapticSetGain" compose/deep [
		haptic [pointer]
		gain [int32]
		return: [int32]
	]

	HapticSetAutocenter: make-routine sdl2 "SDL_HapticSetAutocenter" compose/deep [
		haptic [pointer]
		autocenter [int32]
		return: [int32]
	]

	HapticPause: make-routine sdl2 "SDL_HapticPause" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticUnpause: make-routine sdl2 "SDL_HapticUnpause" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticStopAll: make-routine sdl2 "SDL_HapticStopAll" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticRumbleSupported: make-routine sdl2 "SDL_HapticRumbleSupported" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticRumbleInit: make-routine sdl2 "SDL_HapticRumbleInit" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	HapticRumblePlay: make-routine sdl2 "SDL_HapticRumblePlay" compose/deep [
		haptic [pointer]
		strength [float]
		length [uint32]
		return: [int32]
	]

	HapticRumbleStop: make-routine sdl2 "SDL_HapticRumbleStop" compose/deep [
		haptic [pointer]
		return: [int32]
	]

	SetHintWithPriority: make-routine sdl2 "SDL_SetHintWithPriority" compose/deep [
		name [pointer]
		value [pointer]
		priority [int32]
		return: [int32]
	]

	SetHint: make-routine sdl2 "SDL_SetHint" compose/deep [
		name [pointer]
		value [pointer]
		return: [int32]
	]

	GetHint: make-routine sdl2 "SDL_GetHint" compose/deep [
		name [pointer]
		return: [pointer]
	]

	AddHintCallback: make-routine sdl2 "SDL_AddHintCallback" compose/deep [
		name [pointer]
		callback [pointer]
		userdata [pointer]
		return: [void]
	]

	DelHintCallback: make-routine sdl2 "SDL_DelHintCallback" compose/deep [
		name [pointer]
		callback [pointer]
		userdata [pointer]
		return: [void]
	]

	ClearHints: make-routine sdl2 "SDL_ClearHints" compose/deep [
		return: [void]
	]

	LoadObject: make-routine sdl2 "SDL_LoadObject" compose/deep [
		sofile [pointer]
		return: [pointer]
	]

	LoadFunction: make-routine sdl2 "SDL_LoadFunction" compose/deep [
		handle [pointer]
		name [pointer]
		return: [pointer]
	]

	UnloadObject: make-routine sdl2 "SDL_UnloadObject" compose/deep [
		handle [pointer]
		return: [void]
	]

	LogSetAllPriority: make-routine sdl2 "SDL_LogSetAllPriority" compose/deep [
		priority [int32]
		return: [void]
	]

	LogSetPriority: make-routine sdl2 "SDL_LogSetPriority" compose/deep [
		category [int32]
		priority [int32]
		return: [void]
	]

	LogGetPriority: make-routine sdl2 "SDL_LogGetPriority" compose/deep [
		category [int32]
		return: [int32]
	]

	LogResetPriorities: make-routine sdl2 "SDL_LogResetPriorities" compose/deep [
		return: [void]
	]

	LogVerbose: make-routine sdl2 "SDL_LogVerbose" compose/deep [
		category [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogDebug: make-routine sdl2 "SDL_LogDebug" compose/deep [
		category [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogInfo: make-routine sdl2 "SDL_LogInfo" compose/deep [
		category [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogWarn: make-routine sdl2 "SDL_LogWarn" compose/deep [
		category [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogError: make-routine sdl2 "SDL_LogError" compose/deep [
		category [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogCritical: make-routine sdl2 "SDL_LogCritical" compose/deep [
		category [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogMessage: make-routine sdl2 "SDL_LogMessage" compose/deep [
		category [int32]
		priority [int32]
		fmt [pointer]
		...
		return: [void]
	]

	LogMessageV: make-routine sdl2 "SDL_LogMessageV" compose/deep [
		category [int32]
		priority [int32]
		fmt [pointer]
		ap [int32]
		return: [void]
	]

	LogGetOutputFunction: make-routine sdl2 "SDL_LogGetOutputFunction" compose/deep [
		callback [pointer]
		userdata [pointer]
		return: [void]
	]

	LogSetOutputFunction: make-routine sdl2 "SDL_LogSetOutputFunction" compose/deep [
		callback [pointer]
		userdata [pointer]
		return: [void]
	]

	ShowMessageBox: make-routine sdl2 "SDL_ShowMessageBox" compose/deep [
		messageboxdata [pointer]
		buttonid [pointer]
		return: [int32]
	]

	ShowSimpleMessageBox: make-routine sdl2 "SDL_ShowSimpleMessageBox" compose/deep [
		flags [uint32]
		title [pointer]
		message [pointer]
		window [pointer]
		return: [int32]
	]

	GetPowerInfo: make-routine sdl2 "SDL_GetPowerInfo" compose/deep [
		secs [pointer]
		pct [pointer]
		return: [int32]
	]

	GetNumRenderDrivers: make-routine sdl2 "SDL_GetNumRenderDrivers" compose/deep [
		return: [int32]
	]

	GetRenderDriverInfo: make-routine sdl2 "SDL_GetRenderDriverInfo" compose/deep [
		index [int32]
		info [pointer]
		return: [int32]
	]

	CreateWindowAndRenderer: make-routine sdl2 "SDL_CreateWindowAndRenderer" compose/deep [
		width [int32]
		height [int32]
		window_flags [uint32]
		window [pointer]
		renderer [pointer]
		return: [int32]
	]

	CreateRenderer: make-routine sdl2 "SDL_CreateRenderer" compose/deep [
		window [pointer]
		index [int32]
		flags [uint32]
		return: [pointer]
	]

	CreateSoftwareRenderer: make-routine sdl2 "SDL_CreateSoftwareRenderer" compose/deep [
		surface [pointer]
		return: [pointer]
	]

	GetRenderer: make-routine sdl2 "SDL_GetRenderer" compose/deep [
		window [pointer]
		return: [pointer]
	]

	GetRendererInfo: make-routine sdl2 "SDL_GetRendererInfo" compose/deep [
		renderer [pointer]
		info [pointer]
		return: [int32]
	]

	GetRendererOutputSize: make-routine sdl2 "SDL_GetRendererOutputSize" compose/deep [
		renderer [pointer]
		w [pointer]
		h [pointer]
		return: [int32]
	]

	CreateTexture: make-routine sdl2 "SDL_CreateTexture" compose/deep [
		renderer [pointer]
		format [uint32]
		access [int32]
		w [int32]
		h [int32]
		return: [pointer]
	]

	CreateTextureFromSurface: make-routine sdl2 "SDL_CreateTextureFromSurface" compose/deep [
		renderer [pointer]
		surface [pointer]
		return: [pointer]
	]

	QueryTexture: make-routine sdl2 "SDL_QueryTexture" compose/deep [
		texture [pointer]
		format [pointer]
		access [pointer]
		w [pointer]
		h [pointer]
		return: [int32]
	]

	SetTextureColorMod: make-routine sdl2 "SDL_SetTextureColorMod" compose/deep [
		texture [pointer]
		r [uint8]
		g [uint8]
		b [uint8]
		return: [int32]
	]

	GetTextureColorMod: make-routine sdl2 "SDL_GetTextureColorMod" compose/deep [
		texture [pointer]
		r [pointer]
		g [pointer]
		b [pointer]
		return: [int32]
	]

	SetTextureAlphaMod: make-routine sdl2 "SDL_SetTextureAlphaMod" compose/deep [
		texture [pointer]
		alpha [uint8]
		return: [int32]
	]

	GetTextureAlphaMod: make-routine sdl2 "SDL_GetTextureAlphaMod" compose/deep [
		texture [pointer]
		alpha [pointer]
		return: [int32]
	]

	SetTextureBlendMode: make-routine sdl2 "SDL_SetTextureBlendMode" compose/deep [
		texture [pointer]
		blendMode [int32]
		return: [int32]
	]

	GetTextureBlendMode: make-routine sdl2 "SDL_GetTextureBlendMode" compose/deep [
		texture [pointer]
		blendMode [pointer]
		return: [int32]
	]

	UpdateTexture: make-routine sdl2 "SDL_UpdateTexture" compose/deep [
		texture [pointer]
		rect [pointer]
		pixels [pointer]
		pitch [int32]
		return: [int32]
	]

	UpdateYUVTexture: make-routine sdl2 "SDL_UpdateYUVTexture" compose/deep [
		texture [pointer]
		rect [pointer]
		Yplane [pointer]
		Ypitch [int32]
		Uplane [pointer]
		Upitch [int32]
		Vplane [pointer]
		Vpitch [int32]
		return: [int32]
	]

	LockTexture: make-routine sdl2 "SDL_LockTexture" compose/deep [
		texture [pointer]
		rect [pointer]
		pixels [pointer]
		pitch [pointer]
		return: [int32]
	]

	UnlockTexture: make-routine sdl2 "SDL_UnlockTexture" compose/deep [
		texture [pointer]
		return: [void]
	]

	RenderTargetSupported: make-routine sdl2 "SDL_RenderTargetSupported" compose/deep [
		renderer [pointer]
		return: [int32]
	]

	SetRenderTarget: make-routine sdl2 "SDL_SetRenderTarget" compose/deep [
		renderer [pointer]
		texture [pointer]
		return: [int32]
	]

	GetRenderTarget: make-routine sdl2 "SDL_GetRenderTarget" compose/deep [
		renderer [pointer]
		return: [pointer]
	]

	RenderSetLogicalSize: make-routine sdl2 "SDL_RenderSetLogicalSize" compose/deep [
		renderer [pointer]
		w [int32]
		h [int32]
		return: [int32]
	]

	RenderGetLogicalSize: make-routine sdl2 "SDL_RenderGetLogicalSize" compose/deep [
		renderer [pointer]
		w [pointer]
		h [pointer]
		return: [void]
	]

	RenderSetViewport: make-routine sdl2 "SDL_RenderSetViewport" compose/deep [
		renderer [pointer]
		rect [pointer]
		return: [int32]
	]

	RenderGetViewport: make-routine sdl2 "SDL_RenderGetViewport" compose/deep [
		renderer [pointer]
		rect [pointer]
		return: [void]
	]

	RenderSetClipRect: make-routine sdl2 "SDL_RenderSetClipRect" compose/deep [
		renderer [pointer]
		rect [pointer]
		return: [int32]
	]

	RenderGetClipRect: make-routine sdl2 "SDL_RenderGetClipRect" compose/deep [
		renderer [pointer]
		rect [pointer]
		return: [void]
	]

	RenderSetScale: make-routine sdl2 "SDL_RenderSetScale" compose/deep [
		renderer [pointer]
		scaleX [float]
		scaleY [float]
		return: [int32]
	]

	RenderGetScale: make-routine sdl2 "SDL_RenderGetScale" compose/deep [
		renderer [pointer]
		scaleX [pointer]
		scaleY [pointer]
		return: [void]
	]

	SetRenderDrawColor: make-routine sdl2 "SDL_SetRenderDrawColor" compose/deep [
		renderer [pointer]
		r [uint8]
		g [uint8]
		b [uint8]
		a [uint8]
		return: [int32]
	]

	GetRenderDrawColor: make-routine sdl2 "SDL_GetRenderDrawColor" compose/deep [
		renderer [pointer]
		r [pointer]
		g [pointer]
		b [pointer]
		a [pointer]
		return: [int32]
	]

	SetRenderDrawBlendMode: make-routine sdl2 "SDL_SetRenderDrawBlendMode" compose/deep [
		renderer [pointer]
		blendMode [int32]
		return: [int32]
	]

	GetRenderDrawBlendMode: make-routine sdl2 "SDL_GetRenderDrawBlendMode" compose/deep [
		renderer [pointer]
		blendMode [pointer]
		return: [int32]
	]

	RenderClear: make-routine sdl2 "SDL_RenderClear" compose/deep [
		renderer [pointer]
		return: [int32]
	]

	RenderDrawPoint: make-routine sdl2 "SDL_RenderDrawPoint" compose/deep [
		renderer [pointer]
		x [int32]
		y [int32]
		return: [int32]
	]

	RenderDrawPoints: make-routine sdl2 "SDL_RenderDrawPoints" compose/deep [
		renderer [pointer]
		points [pointer]
		count [int32]
		return: [int32]
	]

	RenderDrawLine: make-routine sdl2 "SDL_RenderDrawLine" compose/deep [
		renderer [pointer]
		x1 [int32]
		y1 [int32]
		x2 [int32]
		y2 [int32]
		return: [int32]
	]

	RenderDrawLines: make-routine sdl2 "SDL_RenderDrawLines" compose/deep [
		renderer [pointer]
		points [pointer]
		count [int32]
		return: [int32]
	]

	RenderDrawRect: make-routine sdl2 "SDL_RenderDrawRect" compose/deep [
		renderer [pointer]
		rect [pointer]
		return: [int32]
	]

	RenderDrawRects: make-routine sdl2 "SDL_RenderDrawRects" compose/deep [
		renderer [pointer]
		rects [pointer]
		count [int32]
		return: [int32]
	]

	RenderFillRect: make-routine sdl2 "SDL_RenderFillRect" compose/deep [
		renderer [pointer]
		rect [pointer]
		return: [int32]
	]

	RenderFillRects: make-routine sdl2 "SDL_RenderFillRects" compose/deep [
		renderer [pointer]
		rects [pointer]
		count [int32]
		return: [int32]
	]

	RenderCopy: make-routine sdl2 "SDL_RenderCopy" compose/deep [
		renderer [pointer]
		texture [pointer]
		srcrect [pointer]
		dstrect [pointer]
		return: [int32]
	]

	RenderCopyEx: make-routine sdl2 "SDL_RenderCopyEx" compose/deep [
		renderer [pointer]
		texture [pointer]
		srcrect [pointer]
		dstrect [pointer]
		angle [double]
		center [pointer]
		flip [int32]
		return: [int32]
	]

	RenderReadPixels: make-routine sdl2 "SDL_RenderReadPixels" compose/deep [
		renderer [pointer]
		rect [pointer]
		format [uint32]
		pixels [pointer]
		pitch [int32]
		return: [int32]
	]

	RenderPresent: make-routine sdl2 "SDL_RenderPresent" compose/deep [
		renderer [pointer]
		return: [void]
	]

	DestroyTexture: make-routine sdl2 "SDL_DestroyTexture" compose/deep [
		texture [pointer]
		return: [void]
	]

	DestroyRenderer: make-routine sdl2 "SDL_DestroyRenderer" compose/deep [
		renderer [pointer]
		return: [void]
	]

	GL_BindTexture: make-routine sdl2 "SDL_GL_BindTexture" compose/deep [
		texture [pointer]
		texw [pointer]
		texh [pointer]
		return: [int32]
	]

	GL_UnbindTexture: make-routine sdl2 "SDL_GL_UnbindTexture" compose/deep [
		texture [pointer]
		return: [int32]
	]

	GetTicks: make-routine sdl2 "SDL_GetTicks" compose/deep [
		return: [uint32]
	]

	GetPerformanceCounter: make-routine sdl2 "SDL_GetPerformanceCounter" compose/deep [
		return: [uint64]
	]

	GetPerformanceFrequency: make-routine sdl2 "SDL_GetPerformanceFrequency" compose/deep [
		return: [uint64]
	]

	Delay: make-routine sdl2 "SDL_Delay" compose/deep [
		ms [uint32]
		return: [void]
	]

	AddTimer: make-routine sdl2 "SDL_AddTimer" compose/deep [
		interval [uint32]
		callback [pointer]
		param [pointer]
		return: [int32]
	]

	RemoveTimer: make-routine sdl2 "SDL_RemoveTimer" compose/deep [
		id [int32]
		return: [int32]
	]

	GetVersion: make-routine sdl2 "SDL_GetVersion" compose/deep [
		ver [pointer]
		return: [void]
	]

	GetRevision: make-routine sdl2 "SDL_GetRevision" compose/deep [
		return: [pointer]
	]

	GetRevisionNumber: make-routine sdl2 "SDL_GetRevisionNumber" compose/deep [
		return: [int32]
	]

	Init: make-routine sdl2 "SDL_Init" compose/deep [
		flags [uint32]
		return: [int32]
	]

	InitSubSystem: make-routine sdl2 "SDL_InitSubSystem" compose/deep [
		flags [uint32]
		return: [int32]
	]

	QuitSubSystem: make-routine sdl2 "SDL_QuitSubSystem" compose/deep [
		flags [uint32]
		return: [void]
	]

	WasInit: make-routine sdl2 "SDL_WasInit" compose/deep [
		flags [uint32]
		return: [uint32]
	]

	Quit: make-routine sdl2 "SDL_Quit" compose/deep [
		return: [void]
	]



	SDL_INIT_TIMER:          to integer! #00000001
	SDL_INIT_AUDIO:          to integer! #00000010
	SDL_INIT_VIDEO:          to integer! #00000020  ;/**< SDL_INIT_VIDEO implies SDL_INIT_EVENTS */
	SDL_INIT_JOYSTICK:       to integer! #00000200  ;/**< SDL_INIT_JOYSTICK implies SDL_INIT_EVENTS */
	SDL_INIT_HAPTIC:         to integer! #00001000
	SDL_INIT_GAMECONTROLLER: to integer! #00002000  ;/**< SDL_INIT_GAMECONTROLLER implies SDL_INIT_JOYSTICK */
	SDL_INIT_EVENTS:         to integer! #00004000
	SDL_INIT_NOPARACHUTE:    to integer! #00100000  ;/**< Don't catch fatal signals */
	SDL_INIT_EVERYTHING: (
					SDL_INIT_TIMER or SDL_INIT_AUDIO or SDL_INIT_VIDEO or SDL_INIT_EVENTS or
					SDL_INIT_JOYSTICK or SDL_INIT_HAPTIC or SDL_INIT_GAMECONTROLLER
				)

	SDL_WINDOWPOS_UNDEFINED_MASK:    to integer! #1FFF0000
	SDL_WINDOWPOS_UNDEFINED_DISPLAY: function [X]  [SDL_WINDOWPOS_UNDEFINED_MASK or X]
	SDL_WINDOWPOS_UNDEFINED:         SDL_WINDOWPOS_UNDEFINED_DISPLAY 0
	SDL_WINDOWPOS_ISUNDEFINED: function [X] [(X and (to integer! #FFFF0000)) == SDL_WINDOWPOS_UNDEFINED_MASK]

	SDL_WINDOWPOS_CENTERED_MASK:    to integer! #2FFF0000
	SDL_WINDOWPOS_CENTERED_DISPLAY: function [X]  [SDL_WINDOWPOS_CENTERED_MASK or X]
	SDL_WINDOWPOS_CENTERED:         SDL_WINDOWPOS_CENTERED_DISPLAY 0
	SDL_WINDOWPOS_ISCENTERED: function [X] [(X and (to integer! #FFFF0000)) == SDL_WINDOWPOS_CENTERED_MASK]
]
