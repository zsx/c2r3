REBOL [
	Date: 6-Feb-2015
	comment: "Generated by c2r3.reb, DO NOT EDIT"
]
make object! [
	GThreadError: [
		G_THREAD_ERROR_AGAIN 0
	]

	GOnceStatus: [
		G_ONCE_STATUS_NOTCALLED 0
		G_ONCE_STATUS_PROGRESS 1
		G_ONCE_STATUS_READY 2
	]

	GBookmarkFileError: [
		G_BOOKMARK_FILE_ERROR_INVALID_URI 0
		G_BOOKMARK_FILE_ERROR_INVALID_VALUE 1
		G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED 2
		G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND 3
		G_BOOKMARK_FILE_ERROR_READ 4
		G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING 5
		G_BOOKMARK_FILE_ERROR_WRITE 6
		G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND 7
	]

	GChecksumType: [
		G_CHECKSUM_MD5 0
		G_CHECKSUM_SHA1 1
		G_CHECKSUM_SHA256 2
		G_CHECKSUM_SHA512 3
	]

	GConvertError: [
		G_CONVERT_ERROR_NO_CONVERSION 0
		G_CONVERT_ERROR_ILLEGAL_SEQUENCE 1
		G_CONVERT_ERROR_FAILED 2
		G_CONVERT_ERROR_PARTIAL_INPUT 3
		G_CONVERT_ERROR_BAD_URI 4
		G_CONVERT_ERROR_NOT_ABSOLUTE_PATH 5
		G_CONVERT_ERROR_NO_MEMORY 6
	]

	GDateDMY: [
		G_DATE_DAY 0
		G_DATE_MONTH 1
		G_DATE_YEAR 2
	]

	GDateWeekday: [
		G_DATE_BAD_WEEKDAY 0
		G_DATE_MONDAY 1
		G_DATE_TUESDAY 2
		G_DATE_WEDNESDAY 3
		G_DATE_THURSDAY 4
		G_DATE_FRIDAY 5
		G_DATE_SATURDAY 6
		G_DATE_SUNDAY 7
	]

	GDateMonth: [
		G_DATE_BAD_MONTH 0
		G_DATE_JANUARY 1
		G_DATE_FEBRUARY 2
		G_DATE_MARCH 3
		G_DATE_APRIL 4
		G_DATE_MAY 5
		G_DATE_JUNE 6
		G_DATE_JULY 7
		G_DATE_AUGUST 8
		G_DATE_SEPTEMBER 9
		G_DATE_OCTOBER 10
		G_DATE_NOVEMBER 11
		G_DATE_DECEMBER 12
	]

	GTimeType: [
		G_TIME_TYPE_STANDARD 0
		G_TIME_TYPE_DAYLIGHT 1
		G_TIME_TYPE_UNIVERSAL 2
	]

	GFileError: [
		G_FILE_ERROR_EXIST 0
		G_FILE_ERROR_ISDIR 1
		G_FILE_ERROR_ACCES 2
		G_FILE_ERROR_NAMETOOLONG 3
		G_FILE_ERROR_NOENT 4
		G_FILE_ERROR_NOTDIR 5
		G_FILE_ERROR_NXIO 6
		G_FILE_ERROR_NODEV 7
		G_FILE_ERROR_ROFS 8
		G_FILE_ERROR_TXTBSY 9
		G_FILE_ERROR_FAULT 10
		G_FILE_ERROR_LOOP 11
		G_FILE_ERROR_NOSPC 12
		G_FILE_ERROR_NOMEM 13
		G_FILE_ERROR_MFILE 14
		G_FILE_ERROR_NFILE 15
		G_FILE_ERROR_BADF 16
		G_FILE_ERROR_INVAL 17
		G_FILE_ERROR_PIPE 18
		G_FILE_ERROR_AGAIN 19
		G_FILE_ERROR_INTR 20
		G_FILE_ERROR_IO 21
		G_FILE_ERROR_PERM 22
		G_FILE_ERROR_NOSYS 23
		G_FILE_ERROR_FAILED 24
	]

	GFileTest: [
		G_FILE_TEST_IS_REGULAR 1
		G_FILE_TEST_IS_SYMLINK 2
		G_FILE_TEST_IS_DIR 4
		G_FILE_TEST_IS_EXECUTABLE 8
		G_FILE_TEST_EXISTS 16
	]

	GTraverseFlags: [
		G_TRAVERSE_LEAVES 1
		G_TRAVERSE_NON_LEAVES 2
		G_TRAVERSE_ALL 3
		G_TRAVERSE_MASK 3
		G_TRAVERSE_LEAFS 1
		G_TRAVERSE_NON_LEAFS 2
	]

	GTraverseType: [
		G_IN_ORDER 0
		G_PRE_ORDER 1
		G_POST_ORDER 2
		G_LEVEL_ORDER 3
	]

	GHookFlagMask: [
		G_HOOK_FLAG_ACTIVE 1
		G_HOOK_FLAG_IN_CALL 2
		G_HOOK_FLAG_MASK 15
	]

	GIOCondition: [
		G_IO_IN 1
		G_IO_OUT 4
		G_IO_PRI 2
		G_IO_ERR 8
		G_IO_HUP 16
		G_IO_NVAL 32
	]

	GUnicodeType: [
		G_UNICODE_CONTROL 0
		G_UNICODE_FORMAT 1
		G_UNICODE_UNASSIGNED 2
		G_UNICODE_PRIVATE_USE 3
		G_UNICODE_SURROGATE 4
		G_UNICODE_LOWERCASE_LETTER 5
		G_UNICODE_MODIFIER_LETTER 6
		G_UNICODE_OTHER_LETTER 7
		G_UNICODE_TITLECASE_LETTER 8
		G_UNICODE_UPPERCASE_LETTER 9
		G_UNICODE_SPACING_MARK 10
		G_UNICODE_ENCLOSING_MARK 11
		G_UNICODE_NON_SPACING_MARK 12
		G_UNICODE_DECIMAL_NUMBER 13
		G_UNICODE_LETTER_NUMBER 14
		G_UNICODE_OTHER_NUMBER 15
		G_UNICODE_CONNECT_PUNCTUATION 16
		G_UNICODE_DASH_PUNCTUATION 17
		G_UNICODE_CLOSE_PUNCTUATION 18
		G_UNICODE_FINAL_PUNCTUATION 19
		G_UNICODE_INITIAL_PUNCTUATION 20
		G_UNICODE_OTHER_PUNCTUATION 21
		G_UNICODE_OPEN_PUNCTUATION 22
		G_UNICODE_CURRENCY_SYMBOL 23
		G_UNICODE_MODIFIER_SYMBOL 24
		G_UNICODE_MATH_SYMBOL 25
		G_UNICODE_OTHER_SYMBOL 26
		G_UNICODE_LINE_SEPARATOR 27
		G_UNICODE_PARAGRAPH_SEPARATOR 28
		G_UNICODE_SPACE_SEPARATOR 29
	]

	GUnicodeBreakType: [
		G_UNICODE_BREAK_MANDATORY 0
		G_UNICODE_BREAK_CARRIAGE_RETURN 1
		G_UNICODE_BREAK_LINE_FEED 2
		G_UNICODE_BREAK_COMBINING_MARK 3
		G_UNICODE_BREAK_SURROGATE 4
		G_UNICODE_BREAK_ZERO_WIDTH_SPACE 5
		G_UNICODE_BREAK_INSEPARABLE 6
		G_UNICODE_BREAK_NON_BREAKING_GLUE 7
		G_UNICODE_BREAK_CONTINGENT 8
		G_UNICODE_BREAK_SPACE 9
		G_UNICODE_BREAK_AFTER 10
		G_UNICODE_BREAK_BEFORE 11
		G_UNICODE_BREAK_BEFORE_AND_AFTER 12
		G_UNICODE_BREAK_HYPHEN 13
		G_UNICODE_BREAK_NON_STARTER 14
		G_UNICODE_BREAK_OPEN_PUNCTUATION 15
		G_UNICODE_BREAK_CLOSE_PUNCTUATION 16
		G_UNICODE_BREAK_QUOTATION 17
		G_UNICODE_BREAK_EXCLAMATION 18
		G_UNICODE_BREAK_IDEOGRAPHIC 19
		G_UNICODE_BREAK_NUMERIC 20
		G_UNICODE_BREAK_INFIX_SEPARATOR 21
		G_UNICODE_BREAK_SYMBOL 22
		G_UNICODE_BREAK_ALPHABETIC 23
		G_UNICODE_BREAK_PREFIX 24
		G_UNICODE_BREAK_POSTFIX 25
		G_UNICODE_BREAK_COMPLEX_CONTEXT 26
		G_UNICODE_BREAK_AMBIGUOUS 27
		G_UNICODE_BREAK_UNKNOWN 28
		G_UNICODE_BREAK_NEXT_LINE 29
		G_UNICODE_BREAK_WORD_JOINER 30
		G_UNICODE_BREAK_HANGUL_L_JAMO 31
		G_UNICODE_BREAK_HANGUL_V_JAMO 32
		G_UNICODE_BREAK_HANGUL_T_JAMO 33
		G_UNICODE_BREAK_HANGUL_LV_SYLLABLE 34
		G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE 35
		G_UNICODE_BREAK_CLOSE_PARANTHESIS 36
		G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER 37
		G_UNICODE_BREAK_HEBREW_LETTER 38
		G_UNICODE_BREAK_REGIONAL_INDICATOR 39
	]

	GUnicodeScript: [
		G_UNICODE_SCRIPT_INVALID_CODE -1
		G_UNICODE_SCRIPT_COMMON 0
		G_UNICODE_SCRIPT_INHERITED 1
		G_UNICODE_SCRIPT_ARABIC 2
		G_UNICODE_SCRIPT_ARMENIAN 3
		G_UNICODE_SCRIPT_BENGALI 4
		G_UNICODE_SCRIPT_BOPOMOFO 5
		G_UNICODE_SCRIPT_CHEROKEE 6
		G_UNICODE_SCRIPT_COPTIC 7
		G_UNICODE_SCRIPT_CYRILLIC 8
		G_UNICODE_SCRIPT_DESERET 9
		G_UNICODE_SCRIPT_DEVANAGARI 10
		G_UNICODE_SCRIPT_ETHIOPIC 11
		G_UNICODE_SCRIPT_GEORGIAN 12
		G_UNICODE_SCRIPT_GOTHIC 13
		G_UNICODE_SCRIPT_GREEK 14
		G_UNICODE_SCRIPT_GUJARATI 15
		G_UNICODE_SCRIPT_GURMUKHI 16
		G_UNICODE_SCRIPT_HAN 17
		G_UNICODE_SCRIPT_HANGUL 18
		G_UNICODE_SCRIPT_HEBREW 19
		G_UNICODE_SCRIPT_HIRAGANA 20
		G_UNICODE_SCRIPT_KANNADA 21
		G_UNICODE_SCRIPT_KATAKANA 22
		G_UNICODE_SCRIPT_KHMER 23
		G_UNICODE_SCRIPT_LAO 24
		G_UNICODE_SCRIPT_LATIN 25
		G_UNICODE_SCRIPT_MALAYALAM 26
		G_UNICODE_SCRIPT_MONGOLIAN 27
		G_UNICODE_SCRIPT_MYANMAR 28
		G_UNICODE_SCRIPT_OGHAM 29
		G_UNICODE_SCRIPT_OLD_ITALIC 30
		G_UNICODE_SCRIPT_ORIYA 31
		G_UNICODE_SCRIPT_RUNIC 32
		G_UNICODE_SCRIPT_SINHALA 33
		G_UNICODE_SCRIPT_SYRIAC 34
		G_UNICODE_SCRIPT_TAMIL 35
		G_UNICODE_SCRIPT_TELUGU 36
		G_UNICODE_SCRIPT_THAANA 37
		G_UNICODE_SCRIPT_THAI 38
		G_UNICODE_SCRIPT_TIBETAN 39
		G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL 40
		G_UNICODE_SCRIPT_YI 41
		G_UNICODE_SCRIPT_TAGALOG 42
		G_UNICODE_SCRIPT_HANUNOO 43
		G_UNICODE_SCRIPT_BUHID 44
		G_UNICODE_SCRIPT_TAGBANWA 45
		G_UNICODE_SCRIPT_BRAILLE 46
		G_UNICODE_SCRIPT_CYPRIOT 47
		G_UNICODE_SCRIPT_LIMBU 48
		G_UNICODE_SCRIPT_OSMANYA 49
		G_UNICODE_SCRIPT_SHAVIAN 50
		G_UNICODE_SCRIPT_LINEAR_B 51
		G_UNICODE_SCRIPT_TAI_LE 52
		G_UNICODE_SCRIPT_UGARITIC 53
		G_UNICODE_SCRIPT_NEW_TAI_LUE 54
		G_UNICODE_SCRIPT_BUGINESE 55
		G_UNICODE_SCRIPT_GLAGOLITIC 56
		G_UNICODE_SCRIPT_TIFINAGH 57
		G_UNICODE_SCRIPT_SYLOTI_NAGRI 58
		G_UNICODE_SCRIPT_OLD_PERSIAN 59
		G_UNICODE_SCRIPT_KHAROSHTHI 60
		G_UNICODE_SCRIPT_UNKNOWN 61
		G_UNICODE_SCRIPT_BALINESE 62
		G_UNICODE_SCRIPT_CUNEIFORM 63
		G_UNICODE_SCRIPT_PHOENICIAN 64
		G_UNICODE_SCRIPT_PHAGS_PA 65
		G_UNICODE_SCRIPT_NKO 66
		G_UNICODE_SCRIPT_KAYAH_LI 67
		G_UNICODE_SCRIPT_LEPCHA 68
		G_UNICODE_SCRIPT_REJANG 69
		G_UNICODE_SCRIPT_SUNDANESE 70
		G_UNICODE_SCRIPT_SAURASHTRA 71
		G_UNICODE_SCRIPT_CHAM 72
		G_UNICODE_SCRIPT_OL_CHIKI 73
		G_UNICODE_SCRIPT_VAI 74
		G_UNICODE_SCRIPT_CARIAN 75
		G_UNICODE_SCRIPT_LYCIAN 76
		G_UNICODE_SCRIPT_LYDIAN 77
		G_UNICODE_SCRIPT_AVESTAN 78
		G_UNICODE_SCRIPT_BAMUM 79
		G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS 80
		G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC 81
		G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI 82
		G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN 83
		G_UNICODE_SCRIPT_JAVANESE 84
		G_UNICODE_SCRIPT_KAITHI 85
		G_UNICODE_SCRIPT_LISU 86
		G_UNICODE_SCRIPT_MEETEI_MAYEK 87
		G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN 88
		G_UNICODE_SCRIPT_OLD_TURKIC 89
		G_UNICODE_SCRIPT_SAMARITAN 90
		G_UNICODE_SCRIPT_TAI_THAM 91
		G_UNICODE_SCRIPT_TAI_VIET 92
		G_UNICODE_SCRIPT_BATAK 93
		G_UNICODE_SCRIPT_BRAHMI 94
		G_UNICODE_SCRIPT_MANDAIC 95
		G_UNICODE_SCRIPT_CHAKMA 96
		G_UNICODE_SCRIPT_MEROITIC_CURSIVE 97
		G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS 98
		G_UNICODE_SCRIPT_MIAO 99
		G_UNICODE_SCRIPT_SHARADA 100
		G_UNICODE_SCRIPT_SORA_SOMPENG 101
		G_UNICODE_SCRIPT_TAKRI 102
		G_UNICODE_SCRIPT_BASSA_VAH 103
		G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN 104
		G_UNICODE_SCRIPT_DUPLOYAN 105
		G_UNICODE_SCRIPT_ELBASAN 106
		G_UNICODE_SCRIPT_GRANTHA 107
		G_UNICODE_SCRIPT_KHOJKI 108
		G_UNICODE_SCRIPT_KHUDAWADI 109
		G_UNICODE_SCRIPT_LINEAR_A 110
		G_UNICODE_SCRIPT_MAHAJANI 111
		G_UNICODE_SCRIPT_MANICHAEAN 112
		G_UNICODE_SCRIPT_MENDE_KIKAKUI 113
		G_UNICODE_SCRIPT_MODI 114
		G_UNICODE_SCRIPT_MRO 115
		G_UNICODE_SCRIPT_NABATAEAN 116
		G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN 117
		G_UNICODE_SCRIPT_OLD_PERMIC 118
		G_UNICODE_SCRIPT_PAHAWH_HMONG 119
		G_UNICODE_SCRIPT_PALMYRENE 120
		G_UNICODE_SCRIPT_PAU_CIN_HAU 121
		G_UNICODE_SCRIPT_PSALTER_PAHLAVI 122
		G_UNICODE_SCRIPT_SIDDHAM 123
		G_UNICODE_SCRIPT_TIRHUTA 124
		G_UNICODE_SCRIPT_WARANG_CITI 125
	]

	GNormalizeMode: [
		G_NORMALIZE_DEFAULT 0
		G_NORMALIZE_NFD 0
		G_NORMALIZE_DEFAULT_COMPOSE 1
		G_NORMALIZE_NFC 1
		G_NORMALIZE_ALL 2
		G_NORMALIZE_NFKD 2
		G_NORMALIZE_ALL_COMPOSE 3
		G_NORMALIZE_NFKC 3
	]

	GUserDirectory: [
		G_USER_DIRECTORY_DESKTOP 0
		G_USER_DIRECTORY_DOCUMENTS 1
		G_USER_DIRECTORY_DOWNLOAD 2
		G_USER_DIRECTORY_MUSIC 3
		G_USER_DIRECTORY_PICTURES 4
		G_USER_DIRECTORY_PUBLIC_SHARE 5
		G_USER_DIRECTORY_TEMPLATES 6
		G_USER_DIRECTORY_VIDEOS 7
		G_USER_N_DIRECTORIES 8
	]

	GFormatSizeFlags: [
		G_FORMAT_SIZE_DEFAULT 0
		G_FORMAT_SIZE_LONG_FORMAT 1
		G_FORMAT_SIZE_IEC_UNITS 2
	]

	GIOError: [
		G_IO_ERROR_NONE 0
		G_IO_ERROR_AGAIN 1
		G_IO_ERROR_INVAL 2
		G_IO_ERROR_UNKNOWN 3
	]

	GIOChannelError: [
		G_IO_CHANNEL_ERROR_FBIG 0
		G_IO_CHANNEL_ERROR_INVAL 1
		G_IO_CHANNEL_ERROR_IO 2
		G_IO_CHANNEL_ERROR_ISDIR 3
		G_IO_CHANNEL_ERROR_NOSPC 4
		G_IO_CHANNEL_ERROR_NXIO 5
		G_IO_CHANNEL_ERROR_OVERFLOW 6
		G_IO_CHANNEL_ERROR_PIPE 7
		G_IO_CHANNEL_ERROR_FAILED 8
	]

	GIOStatus: [
		G_IO_STATUS_ERROR 0
		G_IO_STATUS_NORMAL 1
		G_IO_STATUS_EOF 2
		G_IO_STATUS_AGAIN 3
	]

	GSeekType: [
		G_SEEK_CUR 0
		G_SEEK_SET 1
		G_SEEK_END 2
	]

	GIOFlags: [
		G_IO_FLAG_APPEND 1
		G_IO_FLAG_NONBLOCK 2
		G_IO_FLAG_IS_READABLE 4
		G_IO_FLAG_IS_WRITABLE 8
		G_IO_FLAG_IS_WRITEABLE 8
		G_IO_FLAG_IS_SEEKABLE 16
		G_IO_FLAG_MASK 31
		G_IO_FLAG_GET_MASK 31
		G_IO_FLAG_SET_MASK 3
	]

	GKeyFileError: [
		G_KEY_FILE_ERROR_UNKNOWN_ENCODING 0
		G_KEY_FILE_ERROR_PARSE 1
		G_KEY_FILE_ERROR_NOT_FOUND 2
		G_KEY_FILE_ERROR_KEY_NOT_FOUND 3
		G_KEY_FILE_ERROR_GROUP_NOT_FOUND 4
		G_KEY_FILE_ERROR_INVALID_VALUE 5
	]

	GKeyFileFlags: [
		G_KEY_FILE_NONE 0
		G_KEY_FILE_KEEP_COMMENTS 1
		G_KEY_FILE_KEEP_TRANSLATIONS 2
	]

	GMarkupError: [
		G_MARKUP_ERROR_BAD_UTF8 0
		G_MARKUP_ERROR_EMPTY 1
		G_MARKUP_ERROR_PARSE 2
		G_MARKUP_ERROR_UNKNOWN_ELEMENT 3
		G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE 4
		G_MARKUP_ERROR_INVALID_CONTENT 5
		G_MARKUP_ERROR_MISSING_ATTRIBUTE 6
	]

	GMarkupParseFlags: [
		G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG 1
		G_MARKUP_TREAT_CDATA_AS_TEXT 2
		G_MARKUP_PREFIX_ERROR_POSITION 4
		G_MARKUP_IGNORE_QUALIFIED 8
	]

	GMarkupCollectType: [
		G_MARKUP_COLLECT_INVALID 0
		G_MARKUP_COLLECT_STRING 1
		G_MARKUP_COLLECT_STRDUP 2
		G_MARKUP_COLLECT_BOOLEAN 3
		G_MARKUP_COLLECT_TRISTATE 4
		G_MARKUP_COLLECT_OPTIONAL 65536
	]

	GLogLevelFlags: [
		G_LOG_FLAG_RECURSION 1
		G_LOG_FLAG_FATAL 2
		G_LOG_LEVEL_ERROR 4
		G_LOG_LEVEL_CRITICAL 8
		G_LOG_LEVEL_WARNING 16
		G_LOG_LEVEL_MESSAGE 32
		G_LOG_LEVEL_INFO 64
		G_LOG_LEVEL_DEBUG 128
		G_LOG_LEVEL_MASK -4
	]

	GOptionFlags: [
		G_OPTION_FLAG_NONE 0
		G_OPTION_FLAG_HIDDEN 1
		G_OPTION_FLAG_IN_MAIN 2
		G_OPTION_FLAG_REVERSE 4
		G_OPTION_FLAG_NO_ARG 8
		G_OPTION_FLAG_FILENAME 16
		G_OPTION_FLAG_OPTIONAL_ARG 32
		G_OPTION_FLAG_NOALIAS 64
	]

	GOptionArg: [
		G_OPTION_ARG_NONE 0
		G_OPTION_ARG_STRING 1
		G_OPTION_ARG_INT 2
		G_OPTION_ARG_CALLBACK 3
		G_OPTION_ARG_FILENAME 4
		G_OPTION_ARG_STRING_ARRAY 5
		G_OPTION_ARG_FILENAME_ARRAY 6
		G_OPTION_ARG_DOUBLE 7
		G_OPTION_ARG_INT64 8
	]

	GOptionError: [
		G_OPTION_ERROR_UNKNOWN_OPTION 0
		G_OPTION_ERROR_BAD_VALUE 1
		G_OPTION_ERROR_FAILED 2
	]

	GRegexError: [
		G_REGEX_ERROR_COMPILE 0
		G_REGEX_ERROR_OPTIMIZE 1
		G_REGEX_ERROR_REPLACE 2
		G_REGEX_ERROR_MATCH 3
		G_REGEX_ERROR_INTERNAL 4
		G_REGEX_ERROR_STRAY_BACKSLASH 101
		G_REGEX_ERROR_MISSING_CONTROL_CHAR 102
		G_REGEX_ERROR_UNRECOGNIZED_ESCAPE 103
		G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER 104
		G_REGEX_ERROR_QUANTIFIER_TOO_BIG 105
		G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS 106
		G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS 107
		G_REGEX_ERROR_RANGE_OUT_OF_ORDER 108
		G_REGEX_ERROR_NOTHING_TO_REPEAT 109
		G_REGEX_ERROR_UNRECOGNIZED_CHARACTER 112
		G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS 113
		G_REGEX_ERROR_UNMATCHED_PARENTHESIS 114
		G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE 115
		G_REGEX_ERROR_UNTERMINATED_COMMENT 118
		G_REGEX_ERROR_EXPRESSION_TOO_LARGE 120
		G_REGEX_ERROR_MEMORY_ERROR 121
		G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND 125
		G_REGEX_ERROR_MALFORMED_CONDITION 126
		G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES 127
		G_REGEX_ERROR_ASSERTION_EXPECTED 128
		G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME 130
		G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED 131
		G_REGEX_ERROR_HEX_CODE_TOO_LARGE 134
		G_REGEX_ERROR_INVALID_CONDITION 135
		G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND 136
		G_REGEX_ERROR_INFINITE_LOOP 140
		G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR 142
		G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME 143
		G_REGEX_ERROR_MALFORMED_PROPERTY 146
		G_REGEX_ERROR_UNKNOWN_PROPERTY 147
		G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG 148
		G_REGEX_ERROR_TOO_MANY_SUBPATTERNS 149
		G_REGEX_ERROR_INVALID_OCTAL_VALUE 151
		G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE 154
		G_REGEX_ERROR_DEFINE_REPETION 155
		G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS 156
		G_REGEX_ERROR_MISSING_BACK_REFERENCE 157
		G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE 158
		G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN 159
		G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB 160
		G_REGEX_ERROR_NUMBER_TOO_BIG 161
		G_REGEX_ERROR_MISSING_SUBPATTERN_NAME 162
		G_REGEX_ERROR_MISSING_DIGIT 163
		G_REGEX_ERROR_INVALID_DATA_CHARACTER 164
		G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME 165
		G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED 166
		G_REGEX_ERROR_INVALID_CONTROL_CHAR 168
		G_REGEX_ERROR_MISSING_NAME 169
		G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS 171
		G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES 172
		G_REGEX_ERROR_NAME_TOO_LONG 175
		G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE 176
	]

	GRegexCompileFlags: [
		G_REGEX_CASELESS 1
		G_REGEX_MULTILINE 2
		G_REGEX_DOTALL 4
		G_REGEX_EXTENDED 8
		G_REGEX_ANCHORED 16
		G_REGEX_DOLLAR_ENDONLY 32
		G_REGEX_UNGREEDY 512
		G_REGEX_RAW 2048
		G_REGEX_NO_AUTO_CAPTURE 4096
		G_REGEX_OPTIMIZE 8192
		G_REGEX_FIRSTLINE 262144
		G_REGEX_DUPNAMES 524288
		G_REGEX_NEWLINE_CR 1048576
		G_REGEX_NEWLINE_LF 2097152
		G_REGEX_NEWLINE_CRLF 3145728
		G_REGEX_NEWLINE_ANYCRLF 5242880
		G_REGEX_BSR_ANYCRLF 8388608
		G_REGEX_JAVASCRIPT_COMPAT 33554432
	]

	GRegexMatchFlags: [
		G_REGEX_MATCH_ANCHORED 16
		G_REGEX_MATCH_NOTBOL 128
		G_REGEX_MATCH_NOTEOL 256
		G_REGEX_MATCH_NOTEMPTY 1024
		G_REGEX_MATCH_PARTIAL 32768
		G_REGEX_MATCH_NEWLINE_CR 1048576
		G_REGEX_MATCH_NEWLINE_LF 2097152
		G_REGEX_MATCH_NEWLINE_CRLF 3145728
		G_REGEX_MATCH_NEWLINE_ANY 4194304
		G_REGEX_MATCH_NEWLINE_ANYCRLF 5242880
		G_REGEX_MATCH_BSR_ANYCRLF 8388608
		G_REGEX_MATCH_BSR_ANY 16777216
		G_REGEX_MATCH_PARTIAL_SOFT 32768
		G_REGEX_MATCH_PARTIAL_HARD 134217728
		G_REGEX_MATCH_NOTEMPTY_ATSTART 268435456
	]

	GErrorType: [
		G_ERR_UNKNOWN 0
		G_ERR_UNEXP_EOF 1
		G_ERR_UNEXP_EOF_IN_STRING 2
		G_ERR_UNEXP_EOF_IN_COMMENT 3
		G_ERR_NON_DIGIT_IN_CONST 4
		G_ERR_DIGIT_RADIX 5
		G_ERR_FLOAT_RADIX 6
		G_ERR_FLOAT_MALFORMED 7
	]

	GTokenType: [
		G_TOKEN_EOF 0
		G_TOKEN_LEFT_PAREN 40
		G_TOKEN_RIGHT_PAREN 41
		G_TOKEN_LEFT_CURLY 123
		G_TOKEN_RIGHT_CURLY 125
		G_TOKEN_LEFT_BRACE 91
		G_TOKEN_RIGHT_BRACE 93
		G_TOKEN_EQUAL_SIGN 61
		G_TOKEN_COMMA 44
		G_TOKEN_NONE 256
		G_TOKEN_ERROR 257
		G_TOKEN_CHAR 258
		G_TOKEN_BINARY 259
		G_TOKEN_OCTAL 260
		G_TOKEN_INT 261
		G_TOKEN_HEX 262
		G_TOKEN_FLOAT 263
		G_TOKEN_STRING 264
		G_TOKEN_SYMBOL 265
		G_TOKEN_IDENTIFIER 266
		G_TOKEN_IDENTIFIER_NULL 267
		G_TOKEN_COMMENT_SINGLE 268
		G_TOKEN_COMMENT_MULTI 269
		G_TOKEN_LAST 270
	]

	GShellError: [
		G_SHELL_ERROR_BAD_QUOTING 0
		G_SHELL_ERROR_EMPTY_STRING 1
		G_SHELL_ERROR_FAILED 2
	]

	GSliceConfig: [
		G_SLICE_CONFIG_ALWAYS_MALLOC 1
		G_SLICE_CONFIG_BYPASS_MAGAZINES 2
		G_SLICE_CONFIG_WORKING_SET_MSECS 3
		G_SLICE_CONFIG_COLOR_INCREMENT 4
		G_SLICE_CONFIG_CHUNK_SIZES 5
		G_SLICE_CONFIG_CONTENTION_COUNTER 6
	]

	GSpawnError: [
		G_SPAWN_ERROR_FORK 0
		G_SPAWN_ERROR_READ 1
		G_SPAWN_ERROR_CHDIR 2
		G_SPAWN_ERROR_ACCES 3
		G_SPAWN_ERROR_PERM 4
		G_SPAWN_ERROR_TOO_BIG 5
		G_SPAWN_ERROR_2BIG 5
		G_SPAWN_ERROR_NOEXEC 6
		G_SPAWN_ERROR_NAMETOOLONG 7
		G_SPAWN_ERROR_NOENT 8
		G_SPAWN_ERROR_NOMEM 9
		G_SPAWN_ERROR_NOTDIR 10
		G_SPAWN_ERROR_LOOP 11
		G_SPAWN_ERROR_TXTBUSY 12
		G_SPAWN_ERROR_IO 13
		G_SPAWN_ERROR_NFILE 14
		G_SPAWN_ERROR_MFILE 15
		G_SPAWN_ERROR_INVAL 16
		G_SPAWN_ERROR_ISDIR 17
		G_SPAWN_ERROR_LIBBAD 18
		G_SPAWN_ERROR_FAILED 19
	]

	GSpawnFlags: [
		G_SPAWN_DEFAULT 0
		G_SPAWN_LEAVE_DESCRIPTORS_OPEN 1
		G_SPAWN_DO_NOT_REAP_CHILD 2
		G_SPAWN_SEARCH_PATH 4
		G_SPAWN_STDOUT_TO_DEV_NULL 8
		G_SPAWN_STDERR_TO_DEV_NULL 16
		G_SPAWN_CHILD_INHERITS_STDIN 32
		G_SPAWN_FILE_AND_ARGV_ZERO 64
		G_SPAWN_SEARCH_PATH_FROM_ENVP 128
		G_SPAWN_CLOEXEC_PIPES 256
	]

	GAsciiType: [
		G_ASCII_ALNUM 1
		G_ASCII_ALPHA 2
		G_ASCII_CNTRL 4
		G_ASCII_DIGIT 8
		G_ASCII_GRAPH 16
		G_ASCII_LOWER 32
		G_ASCII_PRINT 64
		G_ASCII_PUNCT 128
		G_ASCII_SPACE 256
		G_ASCII_UPPER 512
		G_ASCII_XDIGIT 1024
	]

	GTestTrapFlags: [
		G_TEST_TRAP_SILENCE_STDOUT 128
		G_TEST_TRAP_SILENCE_STDERR 256
		G_TEST_TRAP_INHERIT_STDIN 512
	]

	GTestSubprocessFlags: [
		G_TEST_SUBPROCESS_INHERIT_STDIN 1
		G_TEST_SUBPROCESS_INHERIT_STDOUT 2
		G_TEST_SUBPROCESS_INHERIT_STDERR 4
	]

	GTestLogType: [
		G_TEST_LOG_NONE 0
		G_TEST_LOG_ERROR 1
		G_TEST_LOG_START_BINARY 2
		G_TEST_LOG_LIST_CASE 3
		G_TEST_LOG_SKIP_CASE 4
		G_TEST_LOG_START_CASE 5
		G_TEST_LOG_STOP_CASE 6
		G_TEST_LOG_MIN_RESULT 7
		G_TEST_LOG_MAX_RESULT 8
		G_TEST_LOG_MESSAGE 9
		G_TEST_LOG_START_SUITE 10
		G_TEST_LOG_STOP_SUITE 11
	]

	GTestFileType: [
		G_TEST_DIST 0
		G_TEST_BUILT 1
	]

	GVariantClass: [
		G_VARIANT_CLASS_BOOLEAN 98
		G_VARIANT_CLASS_BYTE 121
		G_VARIANT_CLASS_INT16 110
		G_VARIANT_CLASS_UINT16 113
		G_VARIANT_CLASS_INT32 105
		G_VARIANT_CLASS_UINT32 117
		G_VARIANT_CLASS_INT64 120
		G_VARIANT_CLASS_UINT64 116
		G_VARIANT_CLASS_HANDLE 104
		G_VARIANT_CLASS_DOUBLE 100
		G_VARIANT_CLASS_STRING 115
		G_VARIANT_CLASS_OBJECT_PATH 111
		G_VARIANT_CLASS_SIGNATURE 103
		G_VARIANT_CLASS_VARIANT 118
		G_VARIANT_CLASS_MAYBE 109
		G_VARIANT_CLASS_ARRAY 97
		G_VARIANT_CLASS_TUPLE 40
		G_VARIANT_CLASS_DICT_ENTRY 123
	]

	GVariantParseError: [
		G_VARIANT_PARSE_ERROR_FAILED 0
		G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED 1
		G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE 2
		G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED 3
		G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END 4
		G_VARIANT_PARSE_ERROR_INVALID_CHARACTER 5
		G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING 6
		G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH 7
		G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE 8
		G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING 9
		G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE 10
		G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE 11
		G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG 12
		G_VARIANT_PARSE_ERROR_TYPE_ERROR 13
		G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN 14
		G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD 15
		G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT 16
		G_VARIANT_PARSE_ERROR_VALUE_EXPECTED 17
	]

	GThreadPriority: [
		G_THREAD_PRIORITY_LOW 0
		G_THREAD_PRIORITY_NORMAL 1
		G_THREAD_PRIORITY_HIGH 2
		G_THREAD_PRIORITY_URGENT 3
	]

	GTypeDebugFlags: [
		G_TYPE_DEBUG_NONE 0
		G_TYPE_DEBUG_OBJECTS 1
		G_TYPE_DEBUG_SIGNALS 2
		G_TYPE_DEBUG_MASK 3
	]

	GTypeFundamentalFlags: [
		G_TYPE_FLAG_CLASSED 1
		G_TYPE_FLAG_INSTANTIATABLE 2
		G_TYPE_FLAG_DERIVABLE 4
		G_TYPE_FLAG_DEEP_DERIVABLE 8
	]

	GTypeFlags: [
		G_TYPE_FLAG_ABSTRACT 16
		G_TYPE_FLAG_VALUE_ABSTRACT 32
	]

	GParamFlags: [
		G_PARAM_READABLE 1
		G_PARAM_WRITABLE 2
		G_PARAM_READWRITE 3
		G_PARAM_CONSTRUCT 4
		G_PARAM_CONSTRUCT_ONLY 8
		G_PARAM_LAX_VALIDATION 16
		G_PARAM_STATIC_NAME 32
		G_PARAM_PRIVATE 32
		G_PARAM_STATIC_NICK 64
		G_PARAM_STATIC_BLURB 128
		G_PARAM_EXPLICIT_NOTIFY 1073741824
		G_PARAM_DEPRECATED -2147483648
	]

	GSignalFlags: [
		G_SIGNAL_RUN_FIRST 1
		G_SIGNAL_RUN_LAST 2
		G_SIGNAL_RUN_CLEANUP 4
		G_SIGNAL_NO_RECURSE 8
		G_SIGNAL_DETAILED 16
		G_SIGNAL_ACTION 32
		G_SIGNAL_NO_HOOKS 64
		G_SIGNAL_MUST_COLLECT 128
		G_SIGNAL_DEPRECATED 256
	]

	GConnectFlags: [
		G_CONNECT_AFTER 1
		G_CONNECT_SWAPPED 2
	]

	GSignalMatchType: [
		G_SIGNAL_MATCH_ID 1
		G_SIGNAL_MATCH_DETAIL 2
		G_SIGNAL_MATCH_CLOSURE 4
		G_SIGNAL_MATCH_FUNC 8
		G_SIGNAL_MATCH_DATA 16
		G_SIGNAL_MATCH_UNBLOCKED 32
	]

	GBindingFlags: [
		G_BINDING_DEFAULT 0
		G_BINDING_BIDIRECTIONAL 1
		G_BINDING_SYNC_CREATE 2
		G_BINDING_INVERT_BOOLEAN 4
	]

	GModuleFlags: [
		G_MODULE_BIND_LAZY 1
		G_MODULE_BIND_LOCAL 2
		G_MODULE_BIND_MASK 3
	]

	GAppInfoCreateFlags: [
		G_APP_INFO_CREATE_NONE 0
		G_APP_INFO_CREATE_NEEDS_TERMINAL 1
		G_APP_INFO_CREATE_SUPPORTS_URIS 2
		G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION 4
	]

	GConverterFlags: [
		G_CONVERTER_NO_FLAGS 0
		G_CONVERTER_INPUT_AT_END 1
		G_CONVERTER_FLUSH 2
	]

	GConverterResult: [
		G_CONVERTER_ERROR 0
		G_CONVERTER_CONVERTED 1
		G_CONVERTER_FINISHED 2
		G_CONVERTER_FLUSHED 3
	]

	GDataStreamByteOrder: [
		G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN 0
		G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN 1
		G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN 2
	]

	GDataStreamNewlineType: [
		G_DATA_STREAM_NEWLINE_TYPE_LF 0
		G_DATA_STREAM_NEWLINE_TYPE_CR 1
		G_DATA_STREAM_NEWLINE_TYPE_CR_LF 2
		G_DATA_STREAM_NEWLINE_TYPE_ANY 3
	]

	GFileAttributeType: [
		G_FILE_ATTRIBUTE_TYPE_INVALID 0
		G_FILE_ATTRIBUTE_TYPE_STRING 1
		G_FILE_ATTRIBUTE_TYPE_BYTE_STRING 2
		G_FILE_ATTRIBUTE_TYPE_BOOLEAN 3
		G_FILE_ATTRIBUTE_TYPE_UINT32 4
		G_FILE_ATTRIBUTE_TYPE_INT32 5
		G_FILE_ATTRIBUTE_TYPE_UINT64 6
		G_FILE_ATTRIBUTE_TYPE_INT64 7
		G_FILE_ATTRIBUTE_TYPE_OBJECT 8
		G_FILE_ATTRIBUTE_TYPE_STRINGV 9
	]

	GFileAttributeInfoFlags: [
		G_FILE_ATTRIBUTE_INFO_NONE 0
		G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE 1
		G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED 2
	]

	GFileAttributeStatus: [
		G_FILE_ATTRIBUTE_STATUS_UNSET 0
		G_FILE_ATTRIBUTE_STATUS_SET 1
		G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING 2
	]

	GFileQueryInfoFlags: [
		G_FILE_QUERY_INFO_NONE 0
		G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS 1
	]

	GFileCreateFlags: [
		G_FILE_CREATE_NONE 0
		G_FILE_CREATE_PRIVATE 1
		G_FILE_CREATE_REPLACE_DESTINATION 2
	]

	GFileMeasureFlags: [
		G_FILE_MEASURE_NONE 0
		G_FILE_MEASURE_REPORT_ANY_ERROR 2
		G_FILE_MEASURE_APPARENT_SIZE 4
		G_FILE_MEASURE_NO_XDEV 8
	]

	GMountMountFlags: [
		G_MOUNT_MOUNT_NONE 0
	]

	GMountUnmountFlags: [
		G_MOUNT_UNMOUNT_NONE 0
		G_MOUNT_UNMOUNT_FORCE 1
	]

	GDriveStartFlags: [
		G_DRIVE_START_NONE 0
	]

	GDriveStartStopType: [
		G_DRIVE_START_STOP_TYPE_UNKNOWN 0
		G_DRIVE_START_STOP_TYPE_SHUTDOWN 1
		G_DRIVE_START_STOP_TYPE_NETWORK 2
		G_DRIVE_START_STOP_TYPE_MULTIDISK 3
		G_DRIVE_START_STOP_TYPE_PASSWORD 4
	]

	GFileCopyFlags: [
		G_FILE_COPY_NONE 0
		G_FILE_COPY_OVERWRITE 1
		G_FILE_COPY_BACKUP 2
		G_FILE_COPY_NOFOLLOW_SYMLINKS 4
		G_FILE_COPY_ALL_METADATA 8
		G_FILE_COPY_NO_FALLBACK_FOR_MOVE 16
		G_FILE_COPY_TARGET_DEFAULT_PERMS 32
	]

	GFileMonitorFlags: [
		G_FILE_MONITOR_NONE 0
		G_FILE_MONITOR_WATCH_MOUNTS 1
		G_FILE_MONITOR_SEND_MOVED 2
		G_FILE_MONITOR_WATCH_HARD_LINKS 4
	]

	GFileType: [
		G_FILE_TYPE_UNKNOWN 0
		G_FILE_TYPE_REGULAR 1
		G_FILE_TYPE_DIRECTORY 2
		G_FILE_TYPE_SYMBOLIC_LINK 3
		G_FILE_TYPE_SPECIAL 4
		G_FILE_TYPE_SHORTCUT 5
		G_FILE_TYPE_MOUNTABLE 6
	]

	GFilesystemPreviewType: [
		G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS 0
		G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL 1
		G_FILESYSTEM_PREVIEW_TYPE_NEVER 2
	]

	GFileMonitorEvent: [
		G_FILE_MONITOR_EVENT_CHANGED 0
		G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT 1
		G_FILE_MONITOR_EVENT_DELETED 2
		G_FILE_MONITOR_EVENT_CREATED 3
		G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED 4
		G_FILE_MONITOR_EVENT_PRE_UNMOUNT 5
		G_FILE_MONITOR_EVENT_UNMOUNTED 6
		G_FILE_MONITOR_EVENT_MOVED 7
	]

	GIOErrorEnum: [
		G_IO_ERROR_FAILED 0
		G_IO_ERROR_NOT_FOUND 1
		G_IO_ERROR_EXISTS 2
		G_IO_ERROR_IS_DIRECTORY 3
		G_IO_ERROR_NOT_DIRECTORY 4
		G_IO_ERROR_NOT_EMPTY 5
		G_IO_ERROR_NOT_REGULAR_FILE 6
		G_IO_ERROR_NOT_SYMBOLIC_LINK 7
		G_IO_ERROR_NOT_MOUNTABLE_FILE 8
		G_IO_ERROR_FILENAME_TOO_LONG 9
		G_IO_ERROR_INVALID_FILENAME 10
		G_IO_ERROR_TOO_MANY_LINKS 11
		G_IO_ERROR_NO_SPACE 12
		G_IO_ERROR_INVALID_ARGUMENT 13
		G_IO_ERROR_PERMISSION_DENIED 14
		G_IO_ERROR_NOT_SUPPORTED 15
		G_IO_ERROR_NOT_MOUNTED 16
		G_IO_ERROR_ALREADY_MOUNTED 17
		G_IO_ERROR_CLOSED 18
		G_IO_ERROR_CANCELLED 19
		G_IO_ERROR_PENDING 20
		G_IO_ERROR_READ_ONLY 21
		G_IO_ERROR_CANT_CREATE_BACKUP 22
		G_IO_ERROR_WRONG_ETAG 23
		G_IO_ERROR_TIMED_OUT 24
		G_IO_ERROR_WOULD_RECURSE 25
		G_IO_ERROR_BUSY 26
		G_IO_ERROR_WOULD_BLOCK 27
		G_IO_ERROR_HOST_NOT_FOUND 28
		G_IO_ERROR_WOULD_MERGE 29
		G_IO_ERROR_FAILED_HANDLED 30
		G_IO_ERROR_TOO_MANY_OPEN_FILES 31
		G_IO_ERROR_NOT_INITIALIZED 32
		G_IO_ERROR_ADDRESS_IN_USE 33
		G_IO_ERROR_PARTIAL_INPUT 34
		G_IO_ERROR_INVALID_DATA 35
		G_IO_ERROR_DBUS_ERROR 36
		G_IO_ERROR_HOST_UNREACHABLE 37
		G_IO_ERROR_NETWORK_UNREACHABLE 38
		G_IO_ERROR_CONNECTION_REFUSED 39
		G_IO_ERROR_PROXY_FAILED 40
		G_IO_ERROR_PROXY_AUTH_FAILED 41
		G_IO_ERROR_PROXY_NEED_AUTH 42
		G_IO_ERROR_PROXY_NOT_ALLOWED 43
		G_IO_ERROR_BROKEN_PIPE 44
	]

	GAskPasswordFlags: [
		G_ASK_PASSWORD_NEED_PASSWORD 1
		G_ASK_PASSWORD_NEED_USERNAME 2
		G_ASK_PASSWORD_NEED_DOMAIN 4
		G_ASK_PASSWORD_SAVING_SUPPORTED 8
		G_ASK_PASSWORD_ANONYMOUS_SUPPORTED 16
	]

	GPasswordSave: [
		G_PASSWORD_SAVE_NEVER 0
		G_PASSWORD_SAVE_FOR_SESSION 1
		G_PASSWORD_SAVE_PERMANENTLY 2
	]

	GMountOperationResult: [
		G_MOUNT_OPERATION_HANDLED 0
		G_MOUNT_OPERATION_ABORTED 1
		G_MOUNT_OPERATION_UNHANDLED 2
	]

	GOutputStreamSpliceFlags: [
		G_OUTPUT_STREAM_SPLICE_NONE 0
		G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE 1
		G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET 2
	]

	GIOStreamSpliceFlags: [
		G_IO_STREAM_SPLICE_NONE 0
		G_IO_STREAM_SPLICE_CLOSE_STREAM1 1
		G_IO_STREAM_SPLICE_CLOSE_STREAM2 2
		G_IO_STREAM_SPLICE_WAIT_FOR_BOTH 4
	]

	GEmblemOrigin: [
		G_EMBLEM_ORIGIN_UNKNOWN 0
		G_EMBLEM_ORIGIN_DEVICE 1
		G_EMBLEM_ORIGIN_LIVEMETADATA 2
		G_EMBLEM_ORIGIN_TAG 3
	]

	GResolverError: [
		G_RESOLVER_ERROR_NOT_FOUND 0
		G_RESOLVER_ERROR_TEMPORARY_FAILURE 1
		G_RESOLVER_ERROR_INTERNAL 2
	]

	GResolverRecordType: [
		G_RESOLVER_RECORD_SRV 1
		G_RESOLVER_RECORD_MX 2
		G_RESOLVER_RECORD_TXT 3
		G_RESOLVER_RECORD_SOA 4
		G_RESOLVER_RECORD_NS 5
	]

	GResourceError: [
		G_RESOURCE_ERROR_NOT_FOUND 0
		G_RESOURCE_ERROR_INTERNAL 1
	]

	GResourceFlags: [
		G_RESOURCE_FLAGS_NONE 0
		G_RESOURCE_FLAGS_COMPRESSED 1
	]

	GResourceLookupFlags: [
		G_RESOURCE_LOOKUP_FLAGS_NONE 0
	]

	GSocketFamily: [
		G_SOCKET_FAMILY_INVALID 0
		G_SOCKET_FAMILY_UNIX 1
		G_SOCKET_FAMILY_IPV4 2
		G_SOCKET_FAMILY_IPV6 10
	]

	GSocketType: [
		G_SOCKET_TYPE_INVALID 0
		G_SOCKET_TYPE_STREAM 1
		G_SOCKET_TYPE_DATAGRAM 2
		G_SOCKET_TYPE_SEQPACKET 3
	]

	GSocketMsgFlags: [
		G_SOCKET_MSG_NONE 0
		G_SOCKET_MSG_OOB 1
		G_SOCKET_MSG_PEEK 2
		G_SOCKET_MSG_DONTROUTE 4
	]

	GSocketProtocol: [
		G_SOCKET_PROTOCOL_UNKNOWN -1
		G_SOCKET_PROTOCOL_DEFAULT 0
		G_SOCKET_PROTOCOL_TCP 6
		G_SOCKET_PROTOCOL_UDP 17
		G_SOCKET_PROTOCOL_SCTP 132
	]

	GZlibCompressorFormat: [
		G_ZLIB_COMPRESSOR_FORMAT_ZLIB 0
		G_ZLIB_COMPRESSOR_FORMAT_GZIP 1
		G_ZLIB_COMPRESSOR_FORMAT_RAW 2
	]

	GUnixSocketAddressType: [
		G_UNIX_SOCKET_ADDRESS_INVALID 0
		G_UNIX_SOCKET_ADDRESS_ANONYMOUS 1
		G_UNIX_SOCKET_ADDRESS_PATH 2
		G_UNIX_SOCKET_ADDRESS_ABSTRACT 3
		G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED 4
	]

	GBusType: [
		G_BUS_TYPE_STARTER -1
		G_BUS_TYPE_NONE 0
		G_BUS_TYPE_SYSTEM 1
		G_BUS_TYPE_SESSION 2
	]

	GBusNameOwnerFlags: [
		G_BUS_NAME_OWNER_FLAGS_NONE 0
		G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT 1
		G_BUS_NAME_OWNER_FLAGS_REPLACE 2
	]

	GBusNameWatcherFlags: [
		G_BUS_NAME_WATCHER_FLAGS_NONE 0
		G_BUS_NAME_WATCHER_FLAGS_AUTO_START 1
	]

	GDBusProxyFlags: [
		G_DBUS_PROXY_FLAGS_NONE 0
		G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES 1
		G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS 2
		G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START 4
		G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES 8
		G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION 16
	]

	GDBusError: [
		G_DBUS_ERROR_FAILED 0
		G_DBUS_ERROR_NO_MEMORY 1
		G_DBUS_ERROR_SERVICE_UNKNOWN 2
		G_DBUS_ERROR_NAME_HAS_NO_OWNER 3
		G_DBUS_ERROR_NO_REPLY 4
		G_DBUS_ERROR_IO_ERROR 5
		G_DBUS_ERROR_BAD_ADDRESS 6
		G_DBUS_ERROR_NOT_SUPPORTED 7
		G_DBUS_ERROR_LIMITS_EXCEEDED 8
		G_DBUS_ERROR_ACCESS_DENIED 9
		G_DBUS_ERROR_AUTH_FAILED 10
		G_DBUS_ERROR_NO_SERVER 11
		G_DBUS_ERROR_TIMEOUT 12
		G_DBUS_ERROR_NO_NETWORK 13
		G_DBUS_ERROR_ADDRESS_IN_USE 14
		G_DBUS_ERROR_DISCONNECTED 15
		G_DBUS_ERROR_INVALID_ARGS 16
		G_DBUS_ERROR_FILE_NOT_FOUND 17
		G_DBUS_ERROR_FILE_EXISTS 18
		G_DBUS_ERROR_UNKNOWN_METHOD 19
		G_DBUS_ERROR_TIMED_OUT 20
		G_DBUS_ERROR_MATCH_RULE_NOT_FOUND 21
		G_DBUS_ERROR_MATCH_RULE_INVALID 22
		G_DBUS_ERROR_SPAWN_EXEC_FAILED 23
		G_DBUS_ERROR_SPAWN_FORK_FAILED 24
		G_DBUS_ERROR_SPAWN_CHILD_EXITED 25
		G_DBUS_ERROR_SPAWN_CHILD_SIGNALED 26
		G_DBUS_ERROR_SPAWN_FAILED 27
		G_DBUS_ERROR_SPAWN_SETUP_FAILED 28
		G_DBUS_ERROR_SPAWN_CONFIG_INVALID 29
		G_DBUS_ERROR_SPAWN_SERVICE_INVALID 30
		G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND 31
		G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID 32
		G_DBUS_ERROR_SPAWN_FILE_INVALID 33
		G_DBUS_ERROR_SPAWN_NO_MEMORY 34
		G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN 35
		G_DBUS_ERROR_INVALID_SIGNATURE 36
		G_DBUS_ERROR_INVALID_FILE_CONTENT 37
		G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN 38
		G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN 39
		G_DBUS_ERROR_OBJECT_PATH_IN_USE 40
		G_DBUS_ERROR_UNKNOWN_OBJECT 41
		G_DBUS_ERROR_UNKNOWN_INTERFACE 42
		G_DBUS_ERROR_UNKNOWN_PROPERTY 43
		G_DBUS_ERROR_PROPERTY_READ_ONLY 44
	]

	GDBusConnectionFlags: [
		G_DBUS_CONNECTION_FLAGS_NONE 0
		G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT 1
		G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER 2
		G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 4
		G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION 8
		G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING 16
	]

	GDBusCapabilityFlags: [
		G_DBUS_CAPABILITY_FLAGS_NONE 0
		G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING 1
	]

	GDBusCallFlags: [
		G_DBUS_CALL_FLAGS_NONE 0
		G_DBUS_CALL_FLAGS_NO_AUTO_START 1
	]

	GDBusMessageType: [
		G_DBUS_MESSAGE_TYPE_INVALID 0
		G_DBUS_MESSAGE_TYPE_METHOD_CALL 1
		G_DBUS_MESSAGE_TYPE_METHOD_RETURN 2
		G_DBUS_MESSAGE_TYPE_ERROR 3
		G_DBUS_MESSAGE_TYPE_SIGNAL 4
	]

	GDBusMessageFlags: [
		G_DBUS_MESSAGE_FLAGS_NONE 0
		G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED 1
		G_DBUS_MESSAGE_FLAGS_NO_AUTO_START 2
	]

	GDBusMessageHeaderField: [
		G_DBUS_MESSAGE_HEADER_FIELD_INVALID 0
		G_DBUS_MESSAGE_HEADER_FIELD_PATH 1
		G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE 2
		G_DBUS_MESSAGE_HEADER_FIELD_MEMBER 3
		G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME 4
		G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL 5
		G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION 6
		G_DBUS_MESSAGE_HEADER_FIELD_SENDER 7
		G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE 8
		G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS 9
	]

	GDBusPropertyInfoFlags: [
		G_DBUS_PROPERTY_INFO_FLAGS_NONE 0
		G_DBUS_PROPERTY_INFO_FLAGS_READABLE 1
		G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE 2
	]

	GDBusSubtreeFlags: [
		G_DBUS_SUBTREE_FLAGS_NONE 0
		G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES 1
	]

	GDBusServerFlags: [
		G_DBUS_SERVER_FLAGS_NONE 0
		G_DBUS_SERVER_FLAGS_RUN_IN_THREAD 1
		G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 2
	]

	GDBusSignalFlags: [
		G_DBUS_SIGNAL_FLAGS_NONE 0
		G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE 1
		G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE 2
		G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH 4
	]

	GDBusSendMessageFlags: [
		G_DBUS_SEND_MESSAGE_FLAGS_NONE 0
		G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL 1
	]

	GCredentialsType: [
		G_CREDENTIALS_TYPE_INVALID 0
		G_CREDENTIALS_TYPE_LINUX_UCRED 1
		G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED 2
		G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED 3
		G_CREDENTIALS_TYPE_SOLARIS_UCRED 4
		G_CREDENTIALS_TYPE_NETBSD_UNPCBID 5
	]

	GDBusMessageByteOrder: [
		G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN 66
		G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN 108
	]

	GApplicationFlags: [
		G_APPLICATION_FLAGS_NONE 0
		G_APPLICATION_IS_SERVICE 1
		G_APPLICATION_IS_LAUNCHER 2
		G_APPLICATION_HANDLES_OPEN 4
		G_APPLICATION_HANDLES_COMMAND_LINE 8
		G_APPLICATION_SEND_ENVIRONMENT 16
		G_APPLICATION_NON_UNIQUE 32
	]

	GTlsError: [
		G_TLS_ERROR_UNAVAILABLE 0
		G_TLS_ERROR_MISC 1
		G_TLS_ERROR_BAD_CERTIFICATE 2
		G_TLS_ERROR_NOT_TLS 3
		G_TLS_ERROR_HANDSHAKE 4
		G_TLS_ERROR_CERTIFICATE_REQUIRED 5
		G_TLS_ERROR_EOF 6
	]

	GTlsCertificateFlags: [
		G_TLS_CERTIFICATE_UNKNOWN_CA 1
		G_TLS_CERTIFICATE_BAD_IDENTITY 2
		G_TLS_CERTIFICATE_NOT_ACTIVATED 4
		G_TLS_CERTIFICATE_EXPIRED 8
		G_TLS_CERTIFICATE_REVOKED 16
		G_TLS_CERTIFICATE_INSECURE 32
		G_TLS_CERTIFICATE_GENERIC_ERROR 64
		G_TLS_CERTIFICATE_VALIDATE_ALL 127
	]

	GTlsAuthenticationMode: [
		G_TLS_AUTHENTICATION_NONE 0
		G_TLS_AUTHENTICATION_REQUESTED 1
		G_TLS_AUTHENTICATION_REQUIRED 2
	]

	GTlsRehandshakeMode: [
		G_TLS_REHANDSHAKE_NEVER 0
		G_TLS_REHANDSHAKE_SAFELY 1
		G_TLS_REHANDSHAKE_UNSAFELY 2
	]

	GTlsInteractionResult: [
		G_TLS_INTERACTION_UNHANDLED 0
		G_TLS_INTERACTION_HANDLED 1
		G_TLS_INTERACTION_FAILED 2
	]

	GDBusInterfaceSkeletonFlags: [
		G_DBUS_INTERFACE_SKELETON_FLAGS_NONE 0
		G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD 1
	]

	GDBusObjectManagerClientFlags: [
		G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE 0
		G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START 1
	]

	GTlsDatabaseVerifyFlags: [
		G_TLS_DATABASE_VERIFY_NONE 0
	]

	GTlsDatabaseLookupFlags: [
		G_TLS_DATABASE_LOOKUP_NONE 0
		G_TLS_DATABASE_LOOKUP_KEYPAIR 1
	]

	GTlsCertificateRequestFlags: [
		G_TLS_CERTIFICATE_REQUEST_NONE 0
	]

	GIOModuleScopeFlags: [
		G_IO_MODULE_SCOPE_NONE 0
		G_IO_MODULE_SCOPE_BLOCK_DUPLICATES 1
	]

	GSocketClientEvent: [
		G_SOCKET_CLIENT_RESOLVING 0
		G_SOCKET_CLIENT_RESOLVED 1
		G_SOCKET_CLIENT_CONNECTING 2
		G_SOCKET_CLIENT_CONNECTED 3
		G_SOCKET_CLIENT_PROXY_NEGOTIATING 4
		G_SOCKET_CLIENT_PROXY_NEGOTIATED 5
		G_SOCKET_CLIENT_TLS_HANDSHAKING 6
		G_SOCKET_CLIENT_TLS_HANDSHAKED 7
		G_SOCKET_CLIENT_COMPLETE 8
	]

	GTestDBusFlags: [
		G_TEST_DBUS_NONE 0
	]

	GSubprocessFlags: [
		G_SUBPROCESS_FLAGS_NONE 0
		G_SUBPROCESS_FLAGS_STDIN_PIPE 1
		G_SUBPROCESS_FLAGS_STDIN_INHERIT 2
		G_SUBPROCESS_FLAGS_STDOUT_PIPE 4
		G_SUBPROCESS_FLAGS_STDOUT_SILENCE 8
		G_SUBPROCESS_FLAGS_STDERR_PIPE 16
		G_SUBPROCESS_FLAGS_STDERR_SILENCE 32
		G_SUBPROCESS_FLAGS_STDERR_MERGE 64
		G_SUBPROCESS_FLAGS_INHERIT_FDS 128
	]

	GNotificationPriority: [
		G_NOTIFICATION_PRIORITY_NORMAL 0
		G_NOTIFICATION_PRIORITY_LOW 1
		G_NOTIFICATION_PRIORITY_HIGH 2
		G_NOTIFICATION_PRIORITY_URGENT 3
	]

	GSettingsBindFlags: [
		G_SETTINGS_BIND_DEFAULT 0
		G_SETTINGS_BIND_GET 1
		G_SETTINGS_BIND_SET 2
		G_SETTINGS_BIND_NO_SENSITIVITY 4
		G_SETTINGS_BIND_GET_NO_CHANGES 8
		G_SETTINGS_BIND_INVERT_BOOLEAN 16
	]

	_GDoubleIEEE754: GDoubleIEEE754: make struct! compose/deep [
		fake [uint8 [8]]
	]
	_GFloatIEEE754: GFloatIEEE754: make struct! compose/deep [
		fake [uint8 [4]]
	]
	_GTimeVal: GTimeVal: make struct! compose/deep [
		tv_sec [int64]
		tv_usec [int64]
	]
	_GArray: GArray: make struct! compose/deep [
		data [pointer]
		len [uint32]
	]
	_GByteArray: GByteArray: make struct! compose/deep [
		data [pointer]
		len [uint32]
	]
	_GPtrArray: GPtrArray: make struct! compose/deep [
		pdata [pointer]
		len [uint32]
	]
	_GError: GError: make struct! compose/deep [
		domain [uint32]
		code [int32]
		message [pointer]
	]
	_GThread: GThread: make struct! compose/deep [
		func [pointer]
		data [pointer]
		joinable [int32]
		priority [int32]
	]
	_GMutex: GMutex: make struct! compose/deep [
		fake [uint8 [8]]
	]
	_GRecMutex: GRecMutex: make struct! compose/deep [
		p [pointer]
		i [uint32 [2]]
	]
	_GRWLock: GRWLock: make struct! compose/deep [
		p [pointer]
		i [uint32 [2]]
	]
	_GCond: GCond: make struct! compose/deep [
		p [pointer]
		i [uint32 [2]]
	]
	_GPrivate: GPrivate: make struct! compose/deep [
		p [pointer]
		notify [pointer]
		future [pointer [2]]
	]
	_GOnce: GOnce: make struct! compose/deep [
		status [int32]
		padding1 [uint8 [4]]
		retval [pointer]
	]
	_GDate: GDate: make struct! compose/deep [
		julian_days [uint32]
		julian [uint32]
		;dmy, merged with the previous field
		;day, merged with the previous field
		;month, merged with the previous field
		;year, merged with the previous field
	]
	_GMemVTable: GMemVTable: make struct! compose/deep [
		malloc [pointer]
		realloc [pointer]
		free [pointer]
		calloc [pointer]
		try_malloc [pointer]
		try_realloc [pointer]
	]
	_GNode: GNode: make struct! compose/deep [
		data [pointer]
		next [pointer]
		prev [pointer]
		parent [pointer]
		children [pointer]
	]
	_GList: GList: make struct! compose/deep [
		data [pointer]
		next [pointer]
		prev [pointer]
	]
	_GHashTableIter: GHashTableIter: make struct! compose/deep [
		dummy1 [pointer]
		dummy2 [pointer]
		dummy3 [pointer]
		dummy4 [int32]
		dummy5 [int32]
		dummy6 [pointer]
	]
	_GHook: GHook: make struct! compose/deep [
		data [pointer]
		next [pointer]
		prev [pointer]
		ref_count [uint32]
		padding4 [uint8 [4]]
		hook_id [uint64]
		flags [uint32]
		padding6 [uint8 [4]]
		func [pointer]
		destroy [pointer]
	]
	_GHookList: GHookList: make struct! compose/deep [
		seq_id [uint64]
		hook_size [uint32]
		;is_setup, merged with the previous field
		padding3 [uint8 [4]]
		hooks [pointer]
		dummy3 [pointer]
		finalize_hook [pointer]
		dummy [pointer [2]]
	]
	_GPollFD: GPollFD: make struct! compose/deep [
		fd [int32]
		events [uint16]
		revents [uint16]
	]
	_GSList: GSList: make struct! compose/deep [
		data [pointer]
		next [pointer]
	]
	_GSource: GSource: make struct! compose/deep [
		callback_data [pointer]
		callback_funcs [pointer]
		source_funcs [pointer]
		ref_count [uint32]
		padding4 [uint8 [4]]
		context [pointer]
		priority [int32]
		flags [uint32]
		source_id [uint32]
		padding8 [uint8 [4]]
		poll_fds [pointer]
		prev [pointer]
		next [pointer]
		name [pointer]
		priv [pointer]
	]
	_GSourceCallbackFuncs: GSourceCallbackFuncs: make struct! compose/deep [
		ref [pointer]
		unref [pointer]
		get [pointer]
	]
	_GSourceFuncs: GSourceFuncs: make struct! compose/deep [
		prepare [pointer]
		check [pointer]
		dispatch [pointer]
		finalize [pointer]
		closure_callback [pointer]
		closure_marshal [pointer]
	]
	_GDebugKey: GDebugKey: make struct! compose/deep [
		key [pointer]
		value [uint32]
	]
	_GString: GString: make struct! compose/deep [
		str [pointer]
		len [uint64]
		allocated_len [uint64]
	]
	_GIOChannel: GIOChannel: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		funcs [pointer]
		encoding [pointer]
		read_cd [pointer]
		write_cd [pointer]
		line_term [pointer]
		line_term_len [uint32]
		padding7 [uint8 [4]]
		buf_size [uint64]
		read_buf [pointer]
		encoded_read_buf [pointer]
		write_buf [pointer]
		partial_write_buf [int8 [6]]
		use_buffer [uint32]
		;do_encode, merged with the previous field
		;close_on_unref, merged with the previous field
		;is_readable, merged with the previous field
		;is_writeable, merged with the previous field
		;is_seekable, merged with the previous field
		;reserved1, merged with the previous field
		padding19 [uint8 [6]]
		reserved2 [pointer]
	]
	_GIOFuncs: GIOFuncs: make struct! compose/deep [
		io_read [pointer]
		io_write [pointer]
		io_seek [pointer]
		io_close [pointer]
		io_create_watch [pointer]
		io_free [pointer]
		io_set_flags [pointer]
		io_get_flags [pointer]
	]
	_GMarkupParser: GMarkupParser: make struct! compose/deep [
		start_element [pointer]
		end_element [pointer]
		text [pointer]
		passthrough [pointer]
		error [pointer]
	]
	_GOptionEntry: GOptionEntry: make struct! compose/deep [
		long_name [pointer]
		short_name [int8]
		padding2 [uint8 [3]]
		flags [int32]
		arg [int32]
		padding4 [uint8 [4]]
		arg_data [pointer]
		description [pointer]
		arg_description [pointer]
	]
	_GQueue: GQueue: make struct! compose/deep [
		head [pointer]
		tail [pointer]
		length [uint32]
	]
	_GScanner: GScanner: make struct! compose/deep [
		user_data [pointer]
		max_parse_errors [uint32]
		parse_errors [uint32]
		input_name [pointer]
		qdata [pointer]
		config [pointer]
		token [int32]
		padding7 [uint8 [12]]
		line [uint32]
		position [uint32]
		next_token [int32]
		padding10 [uint8 [12]]
		next_line [uint32]
		next_position [uint32]
		symbol_table [pointer]
		input_fd [int32]
		padding14 [uint8 [4]]
		text [pointer]
		text_end [pointer]
		buffer [pointer]
		scope_id [uint32]
		padding18 [uint8 [4]]
		msg_handler [pointer]
	]
	_GScannerConfig: GScannerConfig: make struct! compose/deep [
		cset_skip_characters [pointer]
		cset_identifier_first [pointer]
		cset_identifier_nth [pointer]
		cpair_comment_single [pointer]
		case_sensitive [uint32]
		;skip_comment_multi, merged with the previous field
		;skip_comment_single, merged with the previous field
		;scan_comment_multi, merged with the previous field
		;scan_identifier, merged with the previous field
		;scan_identifier_1char, merged with the previous field
		;scan_identifier_NULL, merged with the previous field
		;scan_symbols, merged with the previous field
		;scan_binary, merged with the previous field
		;scan_octal, merged with the previous field
		;scan_float, merged with the previous field
		;scan_hex, merged with the previous field
		;scan_hex_dollar, merged with the previous field
		;scan_string_sq, merged with the previous field
		;scan_string_dq, merged with the previous field
		;numbers_2_int, merged with the previous field
		;int_2_float, merged with the previous field
		;identifier_2_string, merged with the previous field
		;char_2_token, merged with the previous field
		;symbol_2_token, merged with the previous field
		;scope_0_fallback, merged with the previous field
		;store_int64, merged with the previous field
		padding_dummy [uint32]
	]
	_GTokenValue: GTokenValue: make struct! compose/deep [
		fake [uint8 [8]]
	]
	GTestConfig: make struct! compose/deep [
		test_initialized [int32]
		test_quick [int32]
		test_perf [int32]
		test_verbose [int32]
		test_quiet [int32]
		test_undefined [int32]
	]
	GTestLogMsg: make struct! compose/deep [
		log_type [int32]
		n_strings [uint32]
		strings [pointer]
		n_nums [uint32]
		padding4 [uint8 [4]]
		nums [pointer]
	]
	GTestLogBuffer: make struct! compose/deep [
		data [pointer]
		msgs [pointer]
	]
	_GThreadPool: GThreadPool: make struct! compose/deep [
		func [pointer]
		user_data [pointer]
		exclusive [int32]
	]
	_GTrashStack: GTrashStack: make struct! compose/deep [
		next [pointer]
	]
	_GVariantIter: GVariantIter: make struct! compose/deep [
		x [uint64 [16]]
	]
	_GVariantBuilder: GVariantBuilder: make struct! compose/deep [
		x [uint64 [16]]
	]
	_GVariantDict: GVariantDict: make struct! compose/deep [
		x [uint64 [16]]
	]
	_GCompletion: GCompletion: make struct! compose/deep [
		items [pointer]
		func [pointer]
		prefix [pointer]
		cache [pointer]
		strncmp_func [pointer]
	]
	_GTuples: GTuples: make struct! compose/deep [
		len [uint32]
	]
	_GThreadFunctions: GThreadFunctions: make struct! compose/deep [
		mutex_new [pointer]
		mutex_lock [pointer]
		mutex_trylock [pointer]
		mutex_unlock [pointer]
		mutex_free [pointer]
		cond_new [pointer]
		cond_signal [pointer]
		cond_broadcast [pointer]
		cond_wait [pointer]
		cond_timed_wait [pointer]
		cond_free [pointer]
		private_new [pointer]
		private_get [pointer]
		private_set [pointer]
		thread_create [pointer]
		thread_yield [pointer]
		thread_join [pointer]
		thread_exit [pointer]
		thread_set_priority [pointer]
		thread_self [pointer]
		thread_equal [pointer]
	]
	GStaticMutex: make struct! compose/deep [
		mutex [pointer]
	]
	_GStaticRecMutex: GStaticRecMutex: make struct! compose/deep [
		mutex [(GStaticMutex)]
		depth [uint32]
	]
	_GStaticRWLock: GStaticRWLock: make struct! compose/deep [
		mutex [(GStaticMutex)]
		read_cond [pointer]
		write_cond [pointer]
		read_counter [uint32]
		have_writer [int32]
		want_to_read [uint32]
		want_to_write [uint32]
	]
	_GStaticPrivate: GStaticPrivate: make struct! compose/deep [
		index [uint32]
	]
	_GValue: GValue: make struct! compose/deep [
		g_type [uint64]
	]
	_GTypeCValue: GTypeCValue: make struct! compose/deep [
		fake [uint8]
	]
	_GTypeClass: GTypeClass: make struct! compose/deep [
		g_type [uint64]
	]
	_GTypeInterface: GTypeInterface: make struct! compose/deep [
		g_type [uint64]
		g_instance_type [uint64]
	]
	_GTypeInstance: GTypeInstance: make struct! compose/deep [
		g_class [pointer]
	]
	_GTypeInfo: GTypeInfo: make struct! compose/deep [
		class_size [uint16]
		padding1 [uint8 [6]]
		base_init [pointer]
		base_finalize [pointer]
		class_init [pointer]
		class_finalize [pointer]
		class_data [pointer]
		instance_size [uint16]
		n_preallocs [uint16]
		padding8 [uint8 [4]]
		instance_init [pointer]
		value_table [pointer]
	]
	_GTypeFundamentalInfo: GTypeFundamentalInfo: make struct! compose/deep [
		type_flags [int32]
	]
	_GInterfaceInfo: GInterfaceInfo: make struct! compose/deep [
		interface_init [pointer]
		interface_finalize [pointer]
		interface_data [pointer]
	]
	_GTypeValueTable: GTypeValueTable: make struct! compose/deep [
		value_init [pointer]
		value_free [pointer]
		value_copy [pointer]
		value_peek_pointer [pointer]
		collect_format [pointer]
		collect_value [pointer]
		lcopy_format [pointer]
		lcopy_value [pointer]
	]
	_GTypeQuery: GTypeQuery: make struct! compose/deep [
		type [uint64]
		type_name [pointer]
		class_size [uint32]
		instance_size [uint32]
	]
	_GParamSpec: GParamSpec: make struct! compose/deep [
		g_type_instance [(GTypeInstance)]
		name [pointer]
		flags [int32]
		padding3 [uint8 [4]]
		value_type [uint64]
		owner_type [uint64]
		_nick [pointer]
		_blurb [pointer]
		qdata [pointer]
		ref_count [uint32]
		param_id [uint32]
	]
	_GParamSpecClass: GParamSpecClass: make struct! compose/deep [
		g_type_class [(GTypeClass)]
		value_type [uint64]
		finalize [pointer]
		value_set_default [pointer]
		value_validate [pointer]
		values_cmp [pointer]
		dummy [pointer [4]]
	]
	_GParameter: GParameter: make struct! compose/deep [
		name [pointer]
		value [(GValue)]
	]
	_GParamSpecTypeInfo: GParamSpecTypeInfo: make struct! compose/deep [
		instance_size [uint16]
		n_preallocs [uint16]
		padding2 [uint8 [4]]
		instance_init [pointer]
		value_type [uint64]
		finalize [pointer]
		value_set_default [pointer]
		value_validate [pointer]
		values_cmp [pointer]
	]
	_GClosure: GClosure: make struct! compose/deep [
		ref_count [uint32]
		;meta_marshal_nouse, merged with the previous field
		;n_guards, merged with the previous field
		;n_fnotifiers, merged with the previous field
		;n_inotifiers, merged with the previous field
		;in_inotify, merged with the previous field
		;floating, merged with the previous field
		;derivative_flag, merged with the previous field
		;in_marshal, merged with the previous field
		;is_invalid, merged with the previous field
		padding10 [uint8 [4]]
		marshal [pointer]
		data [pointer]
		notifiers [pointer]
	]
	_GClosureNotifyData: GClosureNotifyData: make struct! compose/deep [
		data [pointer]
		notify [pointer]
	]
	_GCClosure: GCClosure: make struct! compose/deep [
		closure [(GClosure)]
		callback [pointer]
	]
	_GSignalQuery: GSignalQuery: make struct! compose/deep [
		signal_id [uint32]
		padding1 [uint8 [4]]
		signal_name [pointer]
		itype [uint64]
		signal_flags [int32]
		padding4 [uint8 [4]]
		return_type [uint64]
		n_params [uint32]
		padding6 [uint8 [4]]
		param_types [pointer]
	]
	_GSignalInvocationHint: GSignalInvocationHint: make struct! compose/deep [
		signal_id [uint32]
		detail [uint32]
		run_type [int32]
	]
	_GObject: GObject: GInitiallyUnowned: make struct! compose/deep [
		g_type_instance [(GTypeInstance)]
		ref_count [uint32]
		padding2 [uint8 [4]]
		qdata [pointer]
	]
	_GObjectClass: GObjectClass: GInitiallyUnownedClass: make struct! compose/deep [
		g_type_class [(GTypeClass)]
		construct_properties [pointer]
		constructor [pointer]
		set_property [pointer]
		get_property [pointer]
		dispose [pointer]
		finalize [pointer]
		dispatch_properties_changed [pointer]
		notify [pointer]
		constructed [pointer]
		flags [uint64]
		pdummy [pointer [6]]
	]
	_GObjectConstructParam: GObjectConstructParam: make struct! compose/deep [
		pspec [pointer]
		value [pointer]
	]
	_GEnumClass: GEnumClass: make struct! compose/deep [
		g_type_class [(GTypeClass)]
		minimum [int32]
		maximum [int32]
		n_values [uint32]
		padding4 [uint8 [4]]
		values [pointer]
	]
	_GFlagsClass: GFlagsClass: make struct! compose/deep [
		g_type_class [(GTypeClass)]
		mask [uint32]
		n_values [uint32]
		values [pointer]
	]
	_GEnumValue: GEnumValue: make struct! compose/deep [
		value [int32]
		padding1 [uint8 [4]]
		value_name [pointer]
		value_nick [pointer]
	]
	_GFlagsValue: GFlagsValue: make struct! compose/deep [
		value [uint32]
		padding1 [uint8 [4]]
		value_name [pointer]
		value_nick [pointer]
	]
	_GParamSpecChar: GParamSpecChar: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [int8]
		maximum [int8]
		default_value [int8]
	]
	_GParamSpecUChar: GParamSpecUChar: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [uint8]
		maximum [uint8]
		default_value [uint8]
	]
	_GParamSpecBoolean: GParamSpecBoolean: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		default_value [int32]
	]
	_GParamSpecInt: GParamSpecInt: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [int32]
		maximum [int32]
		default_value [int32]
	]
	_GParamSpecUInt: GParamSpecUInt: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [uint32]
		maximum [uint32]
		default_value [uint32]
	]
	_GParamSpecLong: GParamSpecLong: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [int64]
		maximum [int64]
		default_value [int64]
	]
	_GParamSpecULong: GParamSpecULong: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [uint64]
		maximum [uint64]
		default_value [uint64]
	]
	_GParamSpecInt64: GParamSpecInt64: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [int64]
		maximum [int64]
		default_value [int64]
	]
	_GParamSpecUInt64: GParamSpecUInt64: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [uint64]
		maximum [uint64]
		default_value [uint64]
	]
	_GParamSpecUnichar: GParamSpecUnichar: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		default_value [uint32]
	]
	_GParamSpecEnum: GParamSpecEnum: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		enum_class [pointer]
		default_value [int32]
	]
	_GParamSpecFlags: GParamSpecFlags: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		flags_class [pointer]
		default_value [uint32]
	]
	_GParamSpecFloat: GParamSpecFloat: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [float]
		maximum [float]
		default_value [float]
		epsilon [float]
	]
	_GParamSpecDouble: GParamSpecDouble: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		minimum [double]
		maximum [double]
		default_value [double]
		epsilon [double]
	]
	_GParamSpecString: GParamSpecString: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		default_value [pointer]
		cset_first [pointer]
		cset_nth [pointer]
		substitutor [int8]
		null_fold_if_empty [uint32]
		;ensure_non_null, merged with the previous field
	]
	_GParamSpecParam: GParamSpecParam: make struct! compose/deep [
		parent_instance [(GParamSpec)]
	]
	_GParamSpecBoxed: GParamSpecBoxed: make struct! compose/deep [
		parent_instance [(GParamSpec)]
	]
	_GParamSpecPointer: GParamSpecPointer: make struct! compose/deep [
		parent_instance [(GParamSpec)]
	]
	_GParamSpecValueArray: GParamSpecValueArray: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		element_spec [pointer]
		fixed_n_elements [uint32]
	]
	_GParamSpecObject: GParamSpecObject: make struct! compose/deep [
		parent_instance [(GParamSpec)]
	]
	_GParamSpecOverride: GParamSpecOverride: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		overridden [pointer]
	]
	_GParamSpecGType: GParamSpecGType: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		is_a_type [uint64]
	]
	_GParamSpecVariant: GParamSpecVariant: make struct! compose/deep [
		parent_instance [(GParamSpec)]
		type [pointer]
		default_value [pointer]
		padding [pointer [4]]
	]
	_GTypeModule: GTypeModule: make struct! compose/deep [
		parent_instance [(GObject)]
		use_count [uint32]
		padding2 [uint8 [4]]
		type_infos [pointer]
		interface_infos [pointer]
		name [pointer]
	]
	_GTypeModuleClass: GTypeModuleClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		load [pointer]
		unload [pointer]
		reserved1 [pointer]
		reserved2 [pointer]
		reserved3 [pointer]
		reserved4 [pointer]
	]
	_GTypePluginClass: GTypePluginClass: make struct! compose/deep [
		base_iface [(GTypeInterface)]
		use_plugin [pointer]
		unuse_plugin [pointer]
		complete_type_info [pointer]
		complete_interface_info [pointer]
	]
	_GValueArray: GValueArray: make struct! compose/deep [
		n_values [uint32]
		padding1 [uint8 [4]]
		values [pointer]
		n_prealloced [uint32]
	]
	_GAppLaunchContext: GAppLaunchContext: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GInputStream: GInputStream: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GFilterInputStream: GFilterInputStream: make struct! compose/deep [
		parent_instance [(GInputStream)]
		base_stream [pointer]
	]
	_GBufferedInputStream: GBufferedInputStream: make struct! compose/deep [
		parent_instance [(GFilterInputStream)]
		priv [pointer]
	]
	_GOutputStream: GOutputStream: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GFilterOutputStream: GFilterOutputStream: make struct! compose/deep [
		parent_instance [(GOutputStream)]
		base_stream [pointer]
	]
	_GBufferedOutputStream: GBufferedOutputStream: make struct! compose/deep [
		parent_instance [(GFilterOutputStream)]
		priv [pointer]
	]
	_GCancellable: GCancellable: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GConverterInputStream: GConverterInputStream: make struct! compose/deep [
		parent_instance [(GFilterInputStream)]
		priv [pointer]
	]
	_GConverterOutputStream: GConverterOutputStream: make struct! compose/deep [
		parent_instance [(GFilterOutputStream)]
		priv [pointer]
	]
	_GDataInputStream: GDataInputStream: make struct! compose/deep [
		parent_instance [(GBufferedInputStream)]
		priv [pointer]
	]
	_GSimpleActionGroup: GSimpleActionGroup: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GApplication: GApplication: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GApplicationCommandLine: GApplicationCommandLine: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSettings: GSettings: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GPermission: GPermission: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GMenuModel: GMenuModel: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GFileEnumerator: GFileEnumerator: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GFileMonitor: GFileMonitor: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GFileAttributeInfo: GFileAttributeInfo: make struct! compose/deep [
		name [pointer]
		type [int32]
		flags [int32]
	]
	_GFileAttributeInfoList: GFileAttributeInfoList: make struct! compose/deep [
		infos [pointer]
		n_infos [int32]
	]
	_GFileInputStream: GFileInputStream: make struct! compose/deep [
		parent_instance [(GInputStream)]
		priv [pointer]
	]
	_GFileOutputStream: GFileOutputStream: make struct! compose/deep [
		parent_instance [(GOutputStream)]
		priv [pointer]
	]
	_GIOStream: GIOStream: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GFileIOStream: GFileIOStream: make struct! compose/deep [
		parent_instance [(GIOStream)]
		priv [pointer]
	]
	_GInetAddress: GInetAddress: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GInetAddressMask: GInetAddressMask: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSocketAddress: GSocketAddress: make struct! compose/deep [
		parent_instance [(GObject)]
	]
	_GInetSocketAddress: GInetSocketAddress: make struct! compose/deep [
		parent_instance [(GSocketAddress)]
		priv [pointer]
	]
	_GMemoryInputStream: GMemoryInputStream: make struct! compose/deep [
		parent_instance [(GInputStream)]
		priv [pointer]
	]
	_GMemoryOutputStream: GMemoryOutputStream: make struct! compose/deep [
		parent_instance [(GOutputStream)]
		priv [pointer]
	]
	_GMountOperation: GMountOperation: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GNetworkAddress: GNetworkAddress: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GNetworkService: GNetworkService: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GResolver: GResolver: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSocket: GSocket: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSocketControlMessage: GSocketControlMessage: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSocketClient: GSocketClient: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSocketConnection: GSocketConnection: make struct! compose/deep [
		parent_instance [(GIOStream)]
		priv [pointer]
	]
	_GSocketListener: GSocketListener: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSocketService: GSocketService: make struct! compose/deep [
		parent_instance [(GSocketListener)]
		priv [pointer]
	]
	_GSocketAddressEnumerator: GSocketAddressEnumerator: make struct! compose/deep [
		parent_instance [(GObject)]
	]
	_GTcpConnection: GTcpConnection: make struct! compose/deep [
		parent_instance [(GSocketConnection)]
		priv [pointer]
	]
	_GTcpWrapperConnection: GTcpWrapperConnection: make struct! compose/deep [
		parent_instance [(GTcpConnection)]
		priv [pointer]
	]
	_GThreadedSocketService: GThreadedSocketService: make struct! compose/deep [
		parent_instance [(GSocketService)]
		priv [pointer]
	]
	_GTlsCertificate: GTlsCertificate: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GTlsConnection: GTlsConnection: make struct! compose/deep [
		parent_instance [(GIOStream)]
		priv [pointer]
	]
	_GTlsDatabase: GTlsDatabase: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GTlsInteraction: GTlsInteraction: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GTlsPassword: GTlsPassword: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GVfs: GVfs: make struct! compose/deep [
		parent_instance [(GObject)]
	]
	_GProxyAddress: GProxyAddress: make struct! compose/deep [
		parent_instance [(GInetSocketAddress)]
		priv [pointer]
	]
	_GProxyAddressEnumerator: GProxyAddressEnumerator: make struct! compose/deep [
		parent_instance [(GSocketAddressEnumerator)]
		priv [pointer]
	]
	_GVolumeMonitor: GVolumeMonitor: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GInputVector: GInputVector: make struct! compose/deep [
		buffer [pointer]
		size [uint64]
	]
	_GOutputVector: GOutputVector: make struct! compose/deep [
		buffer [pointer]
		size [uint64]
	]
	_GDBusProxy: GDBusProxy: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GDBusErrorEntry: GDBusErrorEntry: make struct! compose/deep [
		error_code [int32]
		padding1 [uint8 [4]]
		dbus_error_name [pointer]
	]
	_GDBusInterfaceVTable: GDBusInterfaceVTable: make struct! compose/deep [
		method_call [pointer]
		get_property [pointer]
		set_property [pointer]
		padding [pointer [8]]
	]
	_GDBusSubtreeVTable: GDBusSubtreeVTable: make struct! compose/deep [
		enumerate [pointer]
		introspect [pointer]
		dispatch [pointer]
		padding [pointer [8]]
	]
	_GDBusAnnotationInfo: GDBusAnnotationInfo: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		key [pointer]
		value [pointer]
		annotations [pointer]
	]
	_GDBusArgInfo: GDBusArgInfo: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		name [pointer]
		signature [pointer]
		annotations [pointer]
	]
	_GDBusMethodInfo: GDBusMethodInfo: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		name [pointer]
		in_args [pointer]
		out_args [pointer]
		annotations [pointer]
	]
	_GDBusSignalInfo: GDBusSignalInfo: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		name [pointer]
		args [pointer]
		annotations [pointer]
	]
	_GDBusPropertyInfo: GDBusPropertyInfo: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		name [pointer]
		signature [pointer]
		flags [int32]
		padding4 [uint8 [4]]
		annotations [pointer]
	]
	_GDBusInterfaceInfo: GDBusInterfaceInfo: GDBusSubtreeIntrospectFunc: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		name [pointer]
		methods [pointer]
		signals [pointer]
		properties [pointer]
		annotations [pointer]
	]
	_GDBusNodeInfo: GDBusNodeInfo: make struct! compose/deep [
		ref_count [int32]
		padding1 [uint8 [4]]
		path [pointer]
		interfaces [pointer]
		nodes [pointer]
		annotations [pointer]
	]
	_GDBusInterfaceSkeleton: GDBusInterfaceSkeleton: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GDBusObjectSkeleton: GDBusObjectSkeleton: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GDBusObjectProxy: GDBusObjectProxy: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GDBusObjectManagerClient: GDBusObjectManagerClient: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GDBusObjectManagerServer: GDBusObjectManagerServer: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GActionInterface: GActionInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		get_name [pointer]
		get_parameter_type [pointer]
		get_state_type [pointer]
		get_state_hint [pointer]
		get_enabled [pointer]
		get_state [pointer]
		change_state [pointer]
		activate [pointer]
	]
	_GActionGroupInterface: GActionGroupInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		has_action [pointer]
		list_actions [pointer]
		get_action_enabled [pointer]
		get_action_parameter_type [pointer]
		get_action_state_type [pointer]
		get_action_state_hint [pointer]
		get_action_state [pointer]
		change_action_state [pointer]
		activate_action [pointer]
		action_added [pointer]
		action_removed [pointer]
		action_enabled_changed [pointer]
		action_state_changed [pointer]
		query_action [pointer]
	]
	_GActionMapInterface: GActionMapInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		lookup_action [pointer]
		add_action [pointer]
		remove_action [pointer]
	]
	_GActionEntry: GActionEntry: make struct! compose/deep [
		name [pointer]
		activate [pointer]
		parameter_type [pointer]
		state [pointer]
		change_state [pointer]
		padding [uint64 [3]]
	]
	_GAppLaunchContextClass: GAppLaunchContextClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_display [pointer]
		get_startup_notify_id [pointer]
		launch_failed [pointer]
		launched [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
	]
	_GAppInfoIface: GAppInfoIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		dup [pointer]
		equal [pointer]
		get_id [pointer]
		get_name [pointer]
		get_description [pointer]
		get_executable [pointer]
		get_icon [pointer]
		launch [pointer]
		supports_uris [pointer]
		supports_files [pointer]
		launch_uris [pointer]
		should_show [pointer]
		set_as_default_for_type [pointer]
		set_as_default_for_extension [pointer]
		add_supports_type [pointer]
		can_remove_supports_type [pointer]
		remove_supports_type [pointer]
		can_delete [pointer]
		do_delete [pointer]
		get_commandline [pointer]
		get_display_name [pointer]
		set_as_last_used_for_type [pointer]
		get_supported_types [pointer]
	]
	_GApplicationClass: GApplicationClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		startup [pointer]
		activate [pointer]
		open [pointer]
		command_line [pointer]
		local_command_line [pointer]
		before_emit [pointer]
		after_emit [pointer]
		add_platform_data [pointer]
		quit_mainloop [pointer]
		run_mainloop [pointer]
		shutdown [pointer]
		dbus_register [pointer]
		dbus_unregister [pointer]
		handle_local_options [pointer]
		padding [pointer [8]]
	]
	_GApplicationCommandLineClass: GApplicationCommandLineClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		print_literal [pointer]
		printerr_literal [pointer]
		get_stdin [pointer]
		padding [pointer [11]]
	]
	_GInitableIface: GInitableIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		init [pointer]
	]
	_GAsyncInitableIface: GAsyncInitableIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		init_async [pointer]
		init_finish [pointer]
	]
	_GAsyncResultIface: GAsyncResultIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		get_user_data [pointer]
		get_source_object [pointer]
		is_tagged [pointer]
	]
	_GInputStreamClass: GInputStreamClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		read_fn [pointer]
		skip [pointer]
		close_fn [pointer]
		read_async [pointer]
		read_finish [pointer]
		skip_async [pointer]
		skip_finish [pointer]
		close_async [pointer]
		close_finish [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GFilterInputStreamClass: GFilterInputStreamClass: make struct! compose/deep [
		parent_class [(GInputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
	]
	_GBufferedInputStreamClass: GBufferedInputStreamClass: make struct! compose/deep [
		parent_class [(GFilterInputStreamClass)]
		fill [pointer]
		fill_async [pointer]
		fill_finish [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GOutputStreamClass: GOutputStreamClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		write_fn [pointer]
		splice [pointer]
		flush [pointer]
		close_fn [pointer]
		write_async [pointer]
		write_finish [pointer]
		splice_async [pointer]
		splice_finish [pointer]
		flush_async [pointer]
		flush_finish [pointer]
		close_async [pointer]
		close_finish [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
		_g_reserved7 [pointer]
		_g_reserved8 [pointer]
	]
	_GFilterOutputStreamClass: GFilterOutputStreamClass: make struct! compose/deep [
		parent_class [(GOutputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
	]
	_GBufferedOutputStreamClass: GBufferedOutputStreamClass: make struct! compose/deep [
		parent_class [(GFilterOutputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
	]
	_GCancellableClass: GCancellableClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		cancelled [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GConverterIface: GConverterIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		convert [pointer]
		reset [pointer]
	]
	_GCharsetConverterClass: GCharsetConverterClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GConverterInputStreamClass: GConverterInputStreamClass: make struct! compose/deep [
		parent_class [(GFilterInputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GConverterOutputStreamClass: GConverterOutputStreamClass: make struct! compose/deep [
		parent_class [(GFilterOutputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GDataInputStreamClass: GDataInputStreamClass: make struct! compose/deep [
		parent_class [(GBufferedInputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GDataOutputStream: GDataOutputStream: make struct! compose/deep [
		parent_instance [(GFilterOutputStream)]
		priv [pointer]
	]
	_GDataOutputStreamClass: GDataOutputStreamClass: make struct! compose/deep [
		parent_class [(GFilterOutputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GDBusProxyClass: GDBusProxyClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		g_properties_changed [pointer]
		g_signal [pointer]
		padding [pointer [32]]
	]
	_GDriveIface: GDriveIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		changed [pointer]
		disconnected [pointer]
		eject_button [pointer]
		get_name [pointer]
		get_icon [pointer]
		has_volumes [pointer]
		get_volumes [pointer]
		is_media_removable [pointer]
		has_media [pointer]
		is_media_check_automatic [pointer]
		can_eject [pointer]
		can_poll_for_media [pointer]
		eject [pointer]
		eject_finish [pointer]
		poll_for_media [pointer]
		poll_for_media_finish [pointer]
		get_identifier [pointer]
		enumerate_identifiers [pointer]
		get_start_stop_type [pointer]
		can_start [pointer]
		can_start_degraded [pointer]
		start [pointer]
		start_finish [pointer]
		can_stop [pointer]
		stop [pointer]
		stop_finish [pointer]
		stop_button [pointer]
		eject_with_operation [pointer]
		eject_with_operation_finish [pointer]
		get_sort_key [pointer]
		get_symbolic_icon [pointer]
	]
	_GIconIface: GIconIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		hash [pointer]
		equal [pointer]
		to_tokens [pointer]
		from_tokens [pointer]
		serialize [pointer]
	]
	_GEmblemedIcon: GEmblemedIcon: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GEmblemedIconClass: GEmblemedIconClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GFileEnumeratorClass: GFileEnumeratorClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		next_file [pointer]
		close_fn [pointer]
		next_files_async [pointer]
		next_files_finish [pointer]
		close_async [pointer]
		close_finish [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
		_g_reserved7 [pointer]
	]
	_GFileIface: GFileIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		dup [pointer]
		hash [pointer]
		equal [pointer]
		is_native [pointer]
		has_uri_scheme [pointer]
		get_uri_scheme [pointer]
		get_basename [pointer]
		get_path [pointer]
		get_uri [pointer]
		get_parse_name [pointer]
		get_parent [pointer]
		prefix_matches [pointer]
		get_relative_path [pointer]
		resolve_relative_path [pointer]
		get_child_for_display_name [pointer]
		enumerate_children [pointer]
		enumerate_children_async [pointer]
		enumerate_children_finish [pointer]
		query_info [pointer]
		query_info_async [pointer]
		query_info_finish [pointer]
		query_filesystem_info [pointer]
		query_filesystem_info_async [pointer]
		query_filesystem_info_finish [pointer]
		find_enclosing_mount [pointer]
		find_enclosing_mount_async [pointer]
		find_enclosing_mount_finish [pointer]
		set_display_name [pointer]
		set_display_name_async [pointer]
		set_display_name_finish [pointer]
		query_settable_attributes [pointer]
		_query_settable_attributes_async [pointer]
		_query_settable_attributes_finish [pointer]
		query_writable_namespaces [pointer]
		_query_writable_namespaces_async [pointer]
		_query_writable_namespaces_finish [pointer]
		set_attribute [pointer]
		set_attributes_from_info [pointer]
		set_attributes_async [pointer]
		set_attributes_finish [pointer]
		read_fn [pointer]
		read_async [pointer]
		read_finish [pointer]
		append_to [pointer]
		append_to_async [pointer]
		append_to_finish [pointer]
		create [pointer]
		create_async [pointer]
		create_finish [pointer]
		replace [pointer]
		replace_async [pointer]
		replace_finish [pointer]
		delete_file [pointer]
		delete_file_async [pointer]
		delete_file_finish [pointer]
		trash [pointer]
		trash_async [pointer]
		trash_finish [pointer]
		make_directory [pointer]
		make_directory_async [pointer]
		make_directory_finish [pointer]
		make_symbolic_link [pointer]
		_make_symbolic_link_async [pointer]
		_make_symbolic_link_finish [pointer]
		copy [pointer]
		copy_async [pointer]
		copy_finish [pointer]
		move [pointer]
		_move_async [pointer]
		_move_finish [pointer]
		mount_mountable [pointer]
		mount_mountable_finish [pointer]
		unmount_mountable [pointer]
		unmount_mountable_finish [pointer]
		eject_mountable [pointer]
		eject_mountable_finish [pointer]
		mount_enclosing_volume [pointer]
		mount_enclosing_volume_finish [pointer]
		monitor_dir [pointer]
		monitor_file [pointer]
		open_readwrite [pointer]
		open_readwrite_async [pointer]
		open_readwrite_finish [pointer]
		create_readwrite [pointer]
		create_readwrite_async [pointer]
		create_readwrite_finish [pointer]
		replace_readwrite [pointer]
		replace_readwrite_async [pointer]
		replace_readwrite_finish [pointer]
		start_mountable [pointer]
		start_mountable_finish [pointer]
		stop_mountable [pointer]
		stop_mountable_finish [pointer]
		supports_thread_contexts [int32]
		padding95 [uint8 [4]]
		unmount_mountable_with_operation [pointer]
		unmount_mountable_with_operation_finish [pointer]
		eject_mountable_with_operation [pointer]
		eject_mountable_with_operation_finish [pointer]
		poll_mountable [pointer]
		poll_mountable_finish [pointer]
		measure_disk_usage [pointer]
		measure_disk_usage_async [pointer]
		measure_disk_usage_finish [pointer]
	]
	_GFileInputStreamClass: GFileInputStreamClass: make struct! compose/deep [
		parent_class [(GInputStreamClass)]
		tell [pointer]
		can_seek [pointer]
		seek [pointer]
		query_info [pointer]
		query_info_async [pointer]
		query_info_finish [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GIOStreamClass: GIOStreamClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_input_stream [pointer]
		get_output_stream [pointer]
		close_fn [pointer]
		close_async [pointer]
		close_finish [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
		_g_reserved7 [pointer]
		_g_reserved8 [pointer]
		_g_reserved9 [pointer]
		_g_reserved10 [pointer]
	]
	_GFileIOStreamClass: GFileIOStreamClass: make struct! compose/deep [
		parent_class [(GIOStreamClass)]
		tell [pointer]
		can_seek [pointer]
		seek [pointer]
		can_truncate [pointer]
		truncate_fn [pointer]
		query_info [pointer]
		query_info_async [pointer]
		query_info_finish [pointer]
		get_etag [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GFileMonitorClass: GFileMonitorClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		changed [pointer]
		cancel [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GFilenameCompleterClass: GFilenameCompleterClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		got_completion_data [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
	]
	_GFileOutputStreamClass: GFileOutputStreamClass: make struct! compose/deep [
		parent_class [(GOutputStreamClass)]
		tell [pointer]
		can_seek [pointer]
		seek [pointer]
		can_truncate [pointer]
		truncate_fn [pointer]
		query_info [pointer]
		query_info_async [pointer]
		query_info_finish [pointer]
		get_etag [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GInetAddressClass: GInetAddressClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		to_string [pointer]
		to_bytes [pointer]
	]
	_GInetAddressMaskClass: GInetAddressMaskClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GSocketAddressClass: GSocketAddressClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_family [pointer]
		get_native_size [pointer]
		to_native [pointer]
	]
	_GInetSocketAddressClass: GInetSocketAddressClass: make struct! compose/deep [
		parent_class [(GSocketAddressClass)]
	]
	_GLoadableIconIface: GLoadableIconIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		load [pointer]
		load_async [pointer]
		load_finish [pointer]
	]
	_GMemoryInputStreamClass: GMemoryInputStreamClass: make struct! compose/deep [
		parent_class [(GInputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GMemoryOutputStreamClass: GMemoryOutputStreamClass: make struct! compose/deep [
		parent_class [(GOutputStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GMountIface: GMountIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		changed [pointer]
		unmounted [pointer]
		get_root [pointer]
		get_name [pointer]
		get_icon [pointer]
		get_uuid [pointer]
		get_volume [pointer]
		get_drive [pointer]
		can_unmount [pointer]
		can_eject [pointer]
		unmount [pointer]
		unmount_finish [pointer]
		eject [pointer]
		eject_finish [pointer]
		remount [pointer]
		remount_finish [pointer]
		guess_content_type [pointer]
		guess_content_type_finish [pointer]
		guess_content_type_sync [pointer]
		pre_unmount [pointer]
		unmount_with_operation [pointer]
		unmount_with_operation_finish [pointer]
		eject_with_operation [pointer]
		eject_with_operation_finish [pointer]
		get_default_location [pointer]
		get_sort_key [pointer]
		get_symbolic_icon [pointer]
	]
	_GMountOperationClass: GMountOperationClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		ask_password [pointer]
		ask_question [pointer]
		reply [pointer]
		aborted [pointer]
		show_processes [pointer]
		show_unmount_progress [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
		_g_reserved7 [pointer]
		_g_reserved8 [pointer]
		_g_reserved9 [pointer]
	]
	_GVolumeMonitorClass: GVolumeMonitorClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		volume_added [pointer]
		volume_removed [pointer]
		volume_changed [pointer]
		mount_added [pointer]
		mount_removed [pointer]
		mount_pre_unmount [pointer]
		mount_changed [pointer]
		drive_connected [pointer]
		drive_disconnected [pointer]
		drive_changed [pointer]
		is_supported [pointer]
		get_connected_drives [pointer]
		get_volumes [pointer]
		get_mounts [pointer]
		get_volume_for_uuid [pointer]
		get_mount_for_uuid [pointer]
		adopt_orphan_mount [pointer]
		drive_eject_button [pointer]
		drive_stop_button [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
	]
	_GNativeVolumeMonitor: GNativeVolumeMonitor: make struct! compose/deep [
		parent_instance [(GVolumeMonitor)]
	]
	_GNativeVolumeMonitorClass: GNativeVolumeMonitorClass: make struct! compose/deep [
		parent_class [(GVolumeMonitorClass)]
		get_mount_for_mount_path [pointer]
	]
	_GNetworkAddressClass: GNetworkAddressClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GNetworkMonitorInterface: GNetworkMonitorInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		network_changed [pointer]
		can_reach [pointer]
		can_reach_async [pointer]
		can_reach_finish [pointer]
	]
	_GNetworkServiceClass: GNetworkServiceClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GPermissionClass: GPermissionClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		acquire [pointer]
		acquire_async [pointer]
		acquire_finish [pointer]
		release [pointer]
		release_async [pointer]
		release_finish [pointer]
		reserved [pointer [16]]
	]
	_GPollableInputStreamInterface: GPollableInputStreamInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		can_poll [pointer]
		is_readable [pointer]
		create_source [pointer]
		read_nonblocking [pointer]
	]
	_GPollableOutputStreamInterface: GPollableOutputStreamInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		can_poll [pointer]
		is_writable [pointer]
		create_source [pointer]
		write_nonblocking [pointer]
	]
	_GProxyInterface: GProxyInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		connect [pointer]
		connect_async [pointer]
		connect_finish [pointer]
		supports_hostname [pointer]
	]
	_GProxyAddressClass: GProxyAddressClass: make struct! compose/deep [
		parent_class [(GInetSocketAddressClass)]
	]
	_GSocketAddressEnumeratorClass: GSocketAddressEnumeratorClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		next [pointer]
		next_async [pointer]
		next_finish [pointer]
	]
	_GProxyAddressEnumeratorClass: GProxyAddressEnumeratorClass: make struct! compose/deep [
		parent_class [(GSocketAddressEnumeratorClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
		_g_reserved7 [pointer]
	]
	_GProxyResolverInterface: GProxyResolverInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		is_supported [pointer]
		lookup [pointer]
		lookup_async [pointer]
		lookup_finish [pointer]
	]
	_GResolverClass: GResolverClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		reload [pointer]
		lookup_by_name [pointer]
		lookup_by_name_async [pointer]
		lookup_by_name_finish [pointer]
		lookup_by_address [pointer]
		lookup_by_address_async [pointer]
		lookup_by_address_finish [pointer]
		lookup_service [pointer]
		lookup_service_async [pointer]
		lookup_service_finish [pointer]
		lookup_records [pointer]
		lookup_records_async [pointer]
		lookup_records_finish [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
	]
	_GStaticResource: GStaticResource: make struct! compose/deep [
		data [pointer]
		data_len [uint64]
		resource [pointer]
		next [pointer]
		padding [pointer]
	]
	_GSeekableIface: GSeekableIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		tell [pointer]
		can_seek [pointer]
		seek [pointer]
		can_truncate [pointer]
		truncate_fn [pointer]
	]
	_GSettingsClass: GSettingsClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		writable_changed [pointer]
		changed [pointer]
		writable_change_event [pointer]
		change_event [pointer]
		padding [pointer [20]]
	]
	_GSimpleActionGroupClass: GSimpleActionGroupClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		padding [pointer [12]]
	]
	_GSocketClientClass: GSocketClientClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		event [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
	]
	_GSocketConnectableIface: GSocketConnectableIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		enumerate [pointer]
		proxy_enumerate [pointer]
	]
	_GSocketClass: GSocketClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
		_g_reserved7 [pointer]
		_g_reserved8 [pointer]
		_g_reserved9 [pointer]
		_g_reserved10 [pointer]
	]
	_GSocketConnectionClass: GSocketConnectionClass: make struct! compose/deep [
		parent_class [(GIOStreamClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
	]
	_GSocketControlMessageClass: GSocketControlMessageClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_size [pointer]
		get_level [pointer]
		get_type [pointer]
		serialize [pointer]
		deserialize [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GSocketListenerClass: GSocketListenerClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		changed [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
	]
	_GSocketServiceClass: GSocketServiceClass: make struct! compose/deep [
		parent_class [(GSocketListenerClass)]
		incoming [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
	]
	_GSimpleProxyResolver: GSimpleProxyResolver: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GSimpleProxyResolverClass: GSimpleProxyResolverClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GTcpConnectionClass: GTcpConnectionClass: make struct! compose/deep [
		parent_class [(GSocketConnectionClass)]
	]
	_GTcpWrapperConnectionClass: GTcpWrapperConnectionClass: make struct! compose/deep [
		parent_class [(GTcpConnectionClass)]
	]
	_GThreadedSocketServiceClass: GThreadedSocketServiceClass: make struct! compose/deep [
		parent_class [(GSocketServiceClass)]
		run [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
	]
	_GTlsBackendInterface: GTlsBackendInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		supports_tls [pointer]
		get_certificate_type [pointer]
		get_client_connection_type [pointer]
		get_server_connection_type [pointer]
		get_file_database_type [pointer]
		get_default_database [pointer]
	]
	_GTlsCertificateClass: GTlsCertificateClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		verify [pointer]
		padding [pointer [8]]
	]
	_GTlsConnectionClass: GTlsConnectionClass: make struct! compose/deep [
		parent_class [(GIOStreamClass)]
		accept_certificate [pointer]
		handshake [pointer]
		handshake_async [pointer]
		handshake_finish [pointer]
		padding [pointer [8]]
	]
	_GTlsClientConnectionInterface: GTlsClientConnectionInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
	]
	_GTlsDatabaseClass: GTlsDatabaseClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		verify_chain [pointer]
		verify_chain_async [pointer]
		verify_chain_finish [pointer]
		create_certificate_handle [pointer]
		lookup_certificate_for_handle [pointer]
		lookup_certificate_for_handle_async [pointer]
		lookup_certificate_for_handle_finish [pointer]
		lookup_certificate_issuer [pointer]
		lookup_certificate_issuer_async [pointer]
		lookup_certificate_issuer_finish [pointer]
		lookup_certificates_issued_by [pointer]
		lookup_certificates_issued_by_async [pointer]
		lookup_certificates_issued_by_finish [pointer]
		padding [pointer [16]]
	]
	_GTlsFileDatabaseInterface: GTlsFileDatabaseInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		padding [pointer [8]]
	]
	_GTlsInteractionClass: GTlsInteractionClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		ask_password [pointer]
		ask_password_async [pointer]
		ask_password_finish [pointer]
		request_certificate [pointer]
		request_certificate_async [pointer]
		request_certificate_finish [pointer]
		padding [pointer [21]]
	]
	_GTlsServerConnectionInterface: GTlsServerConnectionInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
	]
	_GTlsPasswordClass: GTlsPasswordClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_value [pointer]
		set_value [pointer]
		get_default_warning [pointer]
		padding [pointer [4]]
	]
	_GVfsClass: GVfsClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		is_active [pointer]
		get_file_for_path [pointer]
		get_file_for_uri [pointer]
		get_supported_uri_schemes [pointer]
		parse_name [pointer]
		local_file_add_info [pointer]
		add_writable_namespaces [pointer]
		local_file_set_attributes [pointer]
		local_file_removed [pointer]
		local_file_moved [pointer]
		deserialize_icon [pointer]
		_g_reserved1 [pointer]
		_g_reserved2 [pointer]
		_g_reserved3 [pointer]
		_g_reserved4 [pointer]
		_g_reserved5 [pointer]
		_g_reserved6 [pointer]
	]
	_GVolumeIface: GVolumeIface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		changed [pointer]
		removed [pointer]
		get_name [pointer]
		get_icon [pointer]
		get_uuid [pointer]
		get_drive [pointer]
		get_mount [pointer]
		can_mount [pointer]
		can_eject [pointer]
		mount_fn [pointer]
		mount_finish [pointer]
		eject [pointer]
		eject_finish [pointer]
		get_identifier [pointer]
		enumerate_identifiers [pointer]
		should_automount [pointer]
		get_activation_root [pointer]
		eject_with_operation [pointer]
		eject_with_operation_finish [pointer]
		get_sort_key [pointer]
		get_symbolic_icon [pointer]
	]
	_GZlibCompressorClass: GZlibCompressorClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GZlibDecompressorClass: GZlibDecompressorClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
	]
	_GDBusInterfaceIface: GDBusInterfaceIface: make struct! compose/deep [
		parent_iface [(GTypeInterface)]
		get_info [pointer]
		get_object [pointer]
		set_object [pointer]
		dup_object [pointer]
	]
	_GDBusInterfaceSkeletonClass: GDBusInterfaceSkeletonClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_info [pointer]
		get_vtable [pointer]
		get_properties [pointer]
		flush [pointer]
		vfunc_padding [pointer [8]]
		g_authorize_method [pointer]
		signal_padding [pointer [8]]
	]
	_GDBusObjectIface: GDBusObjectIface: make struct! compose/deep [
		parent_iface [(GTypeInterface)]
		get_object_path [pointer]
		get_interfaces [pointer]
		get_interface [pointer]
		interface_added [pointer]
		interface_removed [pointer]
	]
	_GDBusObjectSkeletonClass: GDBusObjectSkeletonClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		authorize_method [pointer]
		padding [pointer [8]]
	]
	_GDBusObjectProxyClass: GDBusObjectProxyClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		padding [pointer [8]]
	]
	_GDBusObjectManagerIface: GDBusObjectManagerIface: make struct! compose/deep [
		parent_iface [(GTypeInterface)]
		get_object_path [pointer]
		get_objects [pointer]
		get_object [pointer]
		get_interface [pointer]
		object_added [pointer]
		object_removed [pointer]
		interface_added [pointer]
		interface_removed [pointer]
	]
	_GDBusObjectManagerClientClass: GDBusObjectManagerClientClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		interface_proxy_signal [pointer]
		interface_proxy_properties_changed [pointer]
		padding [pointer [8]]
	]
	_GDBusObjectManagerServerClass: GDBusObjectManagerServerClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		padding [pointer [8]]
	]
	_GRemoteActionGroupInterface: GRemoteActionGroupInterface: make struct! compose/deep [
		g_iface [(GTypeInterface)]
		activate_action_full [pointer]
		change_action_state_full [pointer]
	]
	_GMenuModelClass: GMenuModelClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		is_mutable [pointer]
		get_n_items [pointer]
		get_item_attributes [pointer]
		iterate_item_attributes [pointer]
		get_item_attribute_value [pointer]
		get_item_links [pointer]
		iterate_item_links [pointer]
		get_item_link [pointer]
	]
	_GMenuAttributeIterClass: GMenuAttributeIterClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_next [pointer]
	]
	_GMenuAttributeIter: GMenuAttributeIter: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	_GMenuLinkIterClass: GMenuLinkIterClass: make struct! compose/deep [
		parent_class [(GObjectClass)]
		get_next [pointer]
	]
	_GMenuLinkIter: GMenuLinkIter: make struct! compose/deep [
		parent_instance [(GObject)]
		priv [pointer]
	]
	glib: make library! %libglib-2.0.so
	gobject: make library! %libgobject-2.0.so
	gmodule: make library! %libgmodule-2.0.so
	gio: make library! %libgio-2.0.so


	signal_connect: func [
		instance 		[integer!]
		detailed-signal [integer! binary!]
		handler 		[integer!]
		data 			[integer!]
	][
    	signal_connect_data instance detailed-signal handler data 0 0
	]

	type-check-instance-type: function [
		obj [integer!]
		type [integer!]
	][
		if zero? obj [return false]
		inst: make GTypeInstance compose/deep [
			[raw-memory: (obj)]
		]

		if zero? inst/g_class [
			return not zero? type_check_instance_is_a obj type
		]

		class: make GTypeClass compose/deep [
			[raw-memory: (inst/g_class)]
		]
		if class/g_type = type [return true]

		return not zero? type_check_instance_is_a obj type
	]

    array_new: make-routine glib "g_array_new" [
        zero_terminated [int32]
        clear_ [int32]
        element_size [uint32]
        return: [pointer]
    ]

    array_sized_new: make-routine glib "g_array_sized_new" [
        zero_terminated [int32]
        clear_ [int32]
        element_size [uint32]
        reserved_size [uint32]
        return: [pointer]
    ]
    array_free: make-routine glib "g_array_free" [
        array [pointer]
        free_segment [int32]
        return: [pointer]
    ]
    array_ref: make-routine glib "g_array_ref" [
        array [pointer]
        return: [pointer]
    ]
    array_unref: make-routine glib "g_array_unref" [
        array [pointer]
        return: [void]
    ]
    array_get_element_size: make-routine glib "g_array_get_element_size" [
        array [pointer]
        return: [uint32]
    ]
    array_append_vals: make-routine glib "g_array_append_vals" [
        array [pointer]
        data [pointer]
        len [uint32]
        return: [pointer]
    ]
    array_prepend_vals: make-routine glib "g_array_prepend_vals" [
        array [pointer]
        data [pointer]
        len [uint32]
        return: [pointer]
    ]
    array_insert_vals: make-routine glib "g_array_insert_vals" [
        array [pointer]
        index_ [uint32]
        data [pointer]
        len [uint32]
        return: [pointer]
    ]
    array_set_size: make-routine glib "g_array_set_size" [
        array [pointer]
        length [uint32]
        return: [pointer]
    ]
    array_remove_index: make-routine glib "g_array_remove_index" [
        array [pointer]
        index_ [uint32]
        return: [pointer]
    ]
    array_remove_index_fast: make-routine glib "g_array_remove_index_fast" [
        array [pointer]
        index_ [uint32]
        return: [pointer]
    ]
    array_remove_range: make-routine glib "g_array_remove_range" [
        array [pointer]
        index_ [uint32]
        length [uint32]
        return: [pointer]
    ]
    array_sort: make-routine glib "g_array_sort" [
        array [pointer]
        compare_func [pointer]
        return: [void]
    ]
    array_sort_with_data: make-routine glib "g_array_sort_with_data" [
        array [pointer]
        compare_func [pointer]
        user_data [pointer]
        return: [void]
    ]
    array_set_clear_func: make-routine glib "g_array_set_clear_func" [
        array [pointer]
        clear_func [pointer]
        return: [void]
    ]
    ptr_array_new: make-routine glib "g_ptr_array_new" [
        return: [pointer]
    ]
    ptr_array_new_with_free_func: make-routine glib "g_ptr_array_new_with_free_func" [
        element_free_func [pointer]
        return: [pointer]
    ]
    ptr_array_sized_new: make-routine glib "g_ptr_array_sized_new" [
        reserved_size [uint32]
        return: [pointer]
    ]
    ptr_array_new_full: make-routine glib "g_ptr_array_new_full" [
        reserved_size [uint32]
        element_free_func [pointer]
        return: [pointer]
    ]
    ptr_array_free: make-routine glib "g_ptr_array_free" [
        array [pointer]
        free_seg [int32]
        return: [pointer]
    ]
    ptr_array_ref: make-routine glib "g_ptr_array_ref" [
        array [pointer]
        return: [pointer]
    ]
    ptr_array_unref: make-routine glib "g_ptr_array_unref" [
        array [pointer]
        return: [void]
    ]
    ptr_array_set_free_func: make-routine glib "g_ptr_array_set_free_func" [
        array [pointer]
        element_free_func [pointer]
        return: [void]
    ]
    ptr_array_set_size: make-routine glib "g_ptr_array_set_size" [
        array [pointer]
        length [int32]
        return: [void]
    ]
    ptr_array_remove_index: make-routine glib "g_ptr_array_remove_index" [
        array [pointer]
        index_ [uint32]
        return: [pointer]
    ]
    ptr_array_remove_index_fast: make-routine glib "g_ptr_array_remove_index_fast" [
        array [pointer]
        index_ [uint32]
        return: [pointer]
    ]
    ptr_array_remove: make-routine glib "g_ptr_array_remove" [
        array [pointer]
        data [pointer]
        return: [int32]
    ]
    ptr_array_remove_fast: make-routine glib "g_ptr_array_remove_fast" [
        array [pointer]
        data [pointer]
        return: [int32]
    ]
    ptr_array_remove_range: make-routine glib "g_ptr_array_remove_range" [
        array [pointer]
        index_ [uint32]
        length [uint32]
        return: [pointer]
    ]
    ptr_array_add: make-routine glib "g_ptr_array_add" [
        array [pointer]
        data [pointer]
        return: [void]
    ]
    ptr_array_insert: make-routine glib "g_ptr_array_insert" [
        array [pointer]
        index_ [int32]
        data [pointer]
        return: [void]
    ]
    ptr_array_sort: make-routine glib "g_ptr_array_sort" [
        array [pointer]
        compare_func [pointer]
        return: [void]
    ]
    ptr_array_sort_with_data: make-routine glib "g_ptr_array_sort_with_data" [
        array [pointer]
        compare_func [pointer]
        user_data [pointer]
        return: [void]
    ]
    ptr_array_foreach: make-routine glib "g_ptr_array_foreach" [
        array [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    byte_array_new: make-routine glib "g_byte_array_new" [
        return: [pointer]
    ]
    byte_array_new_take: make-routine glib "g_byte_array_new_take" [
        data [pointer]
        len [uint64]
        return: [pointer]
    ]
    byte_array_sized_new: make-routine glib "g_byte_array_sized_new" [
        reserved_size [uint32]
        return: [pointer]
    ]
    byte_array_free: make-routine glib "g_byte_array_free" [
        array [pointer]
        free_segment [int32]
        return: [pointer]
    ]
    byte_array_free_to_bytes: make-routine glib "g_byte_array_free_to_bytes" [
        array [pointer]
        return: [pointer]
    ]
    byte_array_ref: make-routine glib "g_byte_array_ref" [
        array [pointer]
        return: [pointer]
    ]
    byte_array_unref: make-routine glib "g_byte_array_unref" [
        array [pointer]
        return: [void]
    ]
    byte_array_append: make-routine glib "g_byte_array_append" [
        array [pointer]
        data [pointer]
        len [uint32]
        return: [pointer]
    ]
    byte_array_prepend: make-routine glib "g_byte_array_prepend" [
        array [pointer]
        data [pointer]
        len [uint32]
        return: [pointer]
    ]
    byte_array_set_size: make-routine glib "g_byte_array_set_size" [
        array [pointer]
        length [uint32]
        return: [pointer]
    ]
    byte_array_remove_index: make-routine glib "g_byte_array_remove_index" [
        array [pointer]
        index_ [uint32]
        return: [pointer]
    ]
    byte_array_remove_index_fast: make-routine glib "g_byte_array_remove_index_fast" [
        array [pointer]
        index_ [uint32]
        return: [pointer]
    ]
    byte_array_remove_range: make-routine glib "g_byte_array_remove_range" [
        array [pointer]
        index_ [uint32]
        length [uint32]
        return: [pointer]
    ]
    byte_array_sort: make-routine glib "g_byte_array_sort" [
        array [pointer]
        compare_func [pointer]
        return: [void]
    ]
    byte_array_sort_with_data: make-routine glib "g_byte_array_sort_with_data" [
        array [pointer]
        compare_func [pointer]
        user_data [pointer]
        return: [void]
    ]
    atomic_int_get: make-routine glib "g_atomic_int_get" [
        atomic [pointer]
        return: [int32]
    ]
    atomic_int_set: make-routine glib "g_atomic_int_set" [
        atomic [pointer]
        newval [int32]
        return: [void]
    ]
    atomic_int_inc: make-routine glib "g_atomic_int_inc" [
        atomic [pointer]
        return: [void]
    ]
    atomic_int_dec_and_test: make-routine glib "g_atomic_int_dec_and_test" [
        atomic [pointer]
        return: [int32]
    ]
    atomic_int_compare_and_exchange: make-routine glib "g_atomic_int_compare_and_exchange" [
        atomic [pointer]
        oldval [int32]
        newval [int32]
        return: [int32]
    ]
    atomic_int_add: make-routine glib "g_atomic_int_add" [
        atomic [pointer]
        val [int32]
        return: [int32]
    ]
    atomic_int_and: make-routine glib "g_atomic_int_and" [
        atomic [pointer]
        val [uint32]
        return: [uint32]
    ]
    atomic_int_or: make-routine glib "g_atomic_int_or" [
        atomic [pointer]
        val [uint32]
        return: [uint32]
    ]
    atomic_int_xor: make-routine glib "g_atomic_int_xor" [
        atomic [pointer]
        val [uint32]
        return: [uint32]
    ]
    atomic_pointer_get: make-routine glib "g_atomic_pointer_get" [
        atomic [pointer]
        return: [pointer]
    ]
    atomic_pointer_set: make-routine glib "g_atomic_pointer_set" [
        atomic [pointer]
        newval [pointer]
        return: [void]
    ]
    atomic_pointer_compare_and_exchange: make-routine glib "g_atomic_pointer_compare_and_exchange" [
        atomic [pointer]
        oldval [pointer]
        newval [pointer]
        return: [int32]
    ]
    atomic_pointer_add: make-routine glib "g_atomic_pointer_add" [
        atomic [pointer]
        val [int64]
        return: [int64]
    ]
    atomic_pointer_and: make-routine glib "g_atomic_pointer_and" [
        atomic [pointer]
        val [uint64]
        return: [uint64]
    ]
    atomic_pointer_or: make-routine glib "g_atomic_pointer_or" [
        atomic [pointer]
        val [uint64]
        return: [uint64]
    ]
    atomic_pointer_xor: make-routine glib "g_atomic_pointer_xor" [
        atomic [pointer]
        val [uint64]
        return: [uint64]
    ]
    quark_try_string: make-routine glib "g_quark_try_string" [
        string [pointer]
        return: [uint32]
    ]
    quark_from_static_string: make-routine glib "g_quark_from_static_string" [
        string [pointer]
        return: [uint32]
    ]
    quark_from_string: make-routine glib "g_quark_from_string" [
        string [pointer]
        return: [uint32]
    ]
    quark_to_string: make-routine glib "g_quark_to_string" [
        quark [uint32]
        return: [pointer]
    ]
    intern_string: make-routine glib "g_intern_string" [
        string [pointer]
        return: [pointer]
    ]
    intern_static_string: make-routine glib "g_intern_static_string" [
        string [pointer]
        return: [pointer]
    ]
    error_new: make-routine glib "g_error_new" [
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [pointer]
    ]
    error_new_literal: make-routine glib "g_error_new_literal" [
        domain [uint32]
        code [int32]
        message [pointer]
        return: [pointer]
    ]
    error_new_valist: make-routine glib "g_error_new_valist" [
        domain [uint32]
        code [int32]
        format [pointer]
        args [int32]
        return: [pointer]
    ]
    error_free: make-routine glib "g_error_free" [
        error [pointer]
        return: [void]
    ]
    error_copy: make-routine glib "g_error_copy" [
        error [pointer]
        return: [pointer]
    ]
    error_matches: make-routine glib "g_error_matches" [
        error [pointer]
        domain [uint32]
        code [int32]
        return: [int32]
    ]
    set_error: make-routine glib "g_set_error" [
        err [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [void]
    ]
    set_error_literal: make-routine glib "g_set_error_literal" [
        err [pointer]
        domain [uint32]
        code [int32]
        message [pointer]
        return: [void]
    ]
    propagate_error: make-routine glib "g_propagate_error" [
        dest [pointer]
        src [pointer]
        return: [void]
    ]
    clear_error: make-routine glib "g_clear_error" [
        err [pointer]
        return: [void]
    ]
    prefix_error: make-routine glib "g_prefix_error" [
        err [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    propagate_prefixed_error: make-routine glib "g_propagate_prefixed_error" [
        dest [pointer]
        src [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    thread_error_quark: make-routine glib "g_thread_error_quark" [
        return: [uint32]
    ]
    thread_ref: make-routine glib "g_thread_ref" [
        thread [pointer]
        return: [pointer]
    ]
    thread_unref: make-routine glib "g_thread_unref" [
        thread [pointer]
        return: [void]
    ]
    thread_new: make-routine glib "g_thread_new" [
        name [pointer]
        func [pointer]
        data [pointer]
        return: [pointer]
    ]
    thread_try_new: make-routine glib "g_thread_try_new" [
        name [pointer]
        func [pointer]
        data [pointer]
        error [pointer]
        return: [pointer]
    ]
    thread_self: make-routine glib "g_thread_self" [
        return: [pointer]
    ]
    thread_exit: make-routine glib "g_thread_exit" [
        retval [pointer]
        return: [void]
    ]
    thread_join: make-routine glib "g_thread_join" [
        thread [pointer]
        return: [pointer]
    ]
    thread_yield: make-routine glib "g_thread_yield" [
        return: [void]
    ]
    mutex_init: make-routine glib "g_mutex_init" [
        mutex [pointer]
        return: [void]
    ]
    mutex_clear: make-routine glib "g_mutex_clear" [
        mutex [pointer]
        return: [void]
    ]
    mutex_lock: make-routine glib "g_mutex_lock" [
        mutex [pointer]
        return: [void]
    ]
    mutex_trylock: make-routine glib "g_mutex_trylock" [
        mutex [pointer]
        return: [int32]
    ]
    mutex_unlock: make-routine glib "g_mutex_unlock" [
        mutex [pointer]
        return: [void]
    ]
    rw_lock_init: make-routine glib "g_rw_lock_init" [
        rw_lock [pointer]
        return: [void]
    ]
    rw_lock_clear: make-routine glib "g_rw_lock_clear" [
        rw_lock [pointer]
        return: [void]
    ]
    rw_lock_writer_lock: make-routine glib "g_rw_lock_writer_lock" [
        rw_lock [pointer]
        return: [void]
    ]
    rw_lock_writer_trylock: make-routine glib "g_rw_lock_writer_trylock" [
        rw_lock [pointer]
        return: [int32]
    ]
    rw_lock_writer_unlock: make-routine glib "g_rw_lock_writer_unlock" [
        rw_lock [pointer]
        return: [void]
    ]
    rw_lock_reader_lock: make-routine glib "g_rw_lock_reader_lock" [
        rw_lock [pointer]
        return: [void]
    ]
    rw_lock_reader_trylock: make-routine glib "g_rw_lock_reader_trylock" [
        rw_lock [pointer]
        return: [int32]
    ]
    rw_lock_reader_unlock: make-routine glib "g_rw_lock_reader_unlock" [
        rw_lock [pointer]
        return: [void]
    ]
    rec_mutex_init: make-routine glib "g_rec_mutex_init" [
        rec_mutex [pointer]
        return: [void]
    ]
    rec_mutex_clear: make-routine glib "g_rec_mutex_clear" [
        rec_mutex [pointer]
        return: [void]
    ]
    rec_mutex_lock: make-routine glib "g_rec_mutex_lock" [
        rec_mutex [pointer]
        return: [void]
    ]
    rec_mutex_trylock: make-routine glib "g_rec_mutex_trylock" [
        rec_mutex [pointer]
        return: [int32]
    ]
    rec_mutex_unlock: make-routine glib "g_rec_mutex_unlock" [
        rec_mutex [pointer]
        return: [void]
    ]
    cond_init: make-routine glib "g_cond_init" [
        cond [pointer]
        return: [void]
    ]
    cond_clear: make-routine glib "g_cond_clear" [
        cond [pointer]
        return: [void]
    ]
    cond_wait: make-routine glib "g_cond_wait" [
        cond [pointer]
        mutex [pointer]
        return: [void]
    ]
    cond_signal: make-routine glib "g_cond_signal" [
        cond [pointer]
        return: [void]
    ]
    cond_broadcast: make-routine glib "g_cond_broadcast" [
        cond [pointer]
        return: [void]
    ]
    cond_wait_until: make-routine glib "g_cond_wait_until" [
        cond [pointer]
        mutex [pointer]
        end_time [int64]
        return: [int32]
    ]
    private_get: make-routine glib "g_private_get" [
        key [pointer]
        return: [pointer]
    ]
    private_set: make-routine glib "g_private_set" [
        key [pointer]
        value [pointer]
        return: [void]
    ]
    private_replace: make-routine glib "g_private_replace" [
        key [pointer]
        value [pointer]
        return: [void]
    ]
    once_impl: make-routine glib "g_once_impl" [
        once [pointer]
        func [pointer]
        arg [pointer]
        return: [pointer]
    ]
    once_init_enter: make-routine glib "g_once_init_enter" [
        location [pointer]
        return: [int32]
    ]
    once_init_leave: make-routine glib "g_once_init_leave" [
        location [pointer]
        result [uint64]
        return: [void]
    ]
    get_num_processors: make-routine glib "g_get_num_processors" [
        return: [uint32]
    ]
    async_queue_new: make-routine glib "g_async_queue_new" [
        return: [pointer]
    ]
    async_queue_new_full: make-routine glib "g_async_queue_new_full" [
        item_free_func [pointer]
        return: [pointer]
    ]
    async_queue_lock: make-routine glib "g_async_queue_lock" [
        queue [pointer]
        return: [void]
    ]
    async_queue_unlock: make-routine glib "g_async_queue_unlock" [
        queue [pointer]
        return: [void]
    ]
    async_queue_ref: make-routine glib "g_async_queue_ref" [
        queue [pointer]
        return: [pointer]
    ]
    async_queue_unref: make-routine glib "g_async_queue_unref" [
        queue [pointer]
        return: [void]
    ]
    async_queue_push: make-routine glib "g_async_queue_push" [
        queue [pointer]
        data [pointer]
        return: [void]
    ]
    async_queue_push_unlocked: make-routine glib "g_async_queue_push_unlocked" [
        queue [pointer]
        data [pointer]
        return: [void]
    ]
    async_queue_push_sorted: make-routine glib "g_async_queue_push_sorted" [
        queue [pointer]
        data [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    async_queue_push_sorted_unlocked: make-routine glib "g_async_queue_push_sorted_unlocked" [
        queue [pointer]
        data [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    async_queue_pop: make-routine glib "g_async_queue_pop" [
        queue [pointer]
        return: [pointer]
    ]
    async_queue_pop_unlocked: make-routine glib "g_async_queue_pop_unlocked" [
        queue [pointer]
        return: [pointer]
    ]
    async_queue_try_pop: make-routine glib "g_async_queue_try_pop" [
        queue [pointer]
        return: [pointer]
    ]
    async_queue_try_pop_unlocked: make-routine glib "g_async_queue_try_pop_unlocked" [
        queue [pointer]
        return: [pointer]
    ]
    async_queue_timeout_pop: make-routine glib "g_async_queue_timeout_pop" [
        queue [pointer]
        timeout [uint64]
        return: [pointer]
    ]
    async_queue_timeout_pop_unlocked: make-routine glib "g_async_queue_timeout_pop_unlocked" [
        queue [pointer]
        timeout [uint64]
        return: [pointer]
    ]
    async_queue_length: make-routine glib "g_async_queue_length" [
        queue [pointer]
        return: [int32]
    ]
    async_queue_length_unlocked: make-routine glib "g_async_queue_length_unlocked" [
        queue [pointer]
        return: [int32]
    ]
    async_queue_sort: make-routine glib "g_async_queue_sort" [
        queue [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    async_queue_sort_unlocked: make-routine glib "g_async_queue_sort_unlocked" [
        queue [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    on_error_query: make-routine glib "g_on_error_query" [
        prg_name [pointer]
        return: [void]
    ]
    on_error_stack_trace: make-routine glib "g_on_error_stack_trace" [
        prg_name [pointer]
        return: [void]
    ]
    base64_encode_step: make-routine glib "g_base64_encode_step" [
        in [pointer]
        len [uint64]
        break_lines [int32]
        out [pointer]
        state [pointer]
        save [pointer]
        return: [uint64]
    ]
    base64_encode_close: make-routine glib "g_base64_encode_close" [
        break_lines [int32]
        out [pointer]
        state [pointer]
        save [pointer]
        return: [uint64]
    ]
    base64_encode: make-routine glib "g_base64_encode" [
        data [pointer]
        len [uint64]
        return: [pointer]
    ]
    base64_decode_step: make-routine glib "g_base64_decode_step" [
        in [pointer]
        len [uint64]
        out [pointer]
        state [pointer]
        save [pointer]
        return: [uint64]
    ]
    base64_decode: make-routine glib "g_base64_decode" [
        text [pointer]
        out_len [pointer]
        return: [pointer]
    ]
    base64_decode_inplace: make-routine glib "g_base64_decode_inplace" [
        text [pointer]
        out_len [pointer]
        return: [pointer]
    ]
    bit_lock: make-routine glib "g_bit_lock" [
        address [pointer]
        lock_bit [int32]
        return: [void]
    ]
    bit_trylock: make-routine glib "g_bit_trylock" [
        address [pointer]
        lock_bit [int32]
        return: [int32]
    ]
    bit_unlock: make-routine glib "g_bit_unlock" [
        address [pointer]
        lock_bit [int32]
        return: [void]
    ]
    pointer_bit_lock: make-routine glib "g_pointer_bit_lock" [
        address [pointer]
        lock_bit [int32]
        return: [void]
    ]
    pointer_bit_trylock: make-routine glib "g_pointer_bit_trylock" [
        address [pointer]
        lock_bit [int32]
        return: [int32]
    ]
    pointer_bit_unlock: make-routine glib "g_pointer_bit_unlock" [
        address [pointer]
        lock_bit [int32]
        return: [void]
    ]
    bookmark_file_error_quark: make-routine glib "g_bookmark_file_error_quark" [
        return: [uint32]
    ]
    bookmark_file_new: make-routine glib "g_bookmark_file_new" [
        return: [pointer]
    ]
    bookmark_file_free: make-routine glib "g_bookmark_file_free" [
        bookmark [pointer]
        return: [void]
    ]
    bookmark_file_load_from_file: make-routine glib "g_bookmark_file_load_from_file" [
        bookmark [pointer]
        filename [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_load_from_data: make-routine glib "g_bookmark_file_load_from_data" [
        bookmark [pointer]
        data [pointer]
        length [uint64]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_load_from_data_dirs: make-routine glib "g_bookmark_file_load_from_data_dirs" [
        bookmark [pointer]
        file [pointer]
        full_path [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_to_data: make-routine glib "g_bookmark_file_to_data" [
        bookmark [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    bookmark_file_to_file: make-routine glib "g_bookmark_file_to_file" [
        bookmark [pointer]
        filename [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_set_title: make-routine glib "g_bookmark_file_set_title" [
        bookmark [pointer]
        uri [pointer]
        title [pointer]
        return: [void]
    ]
    bookmark_file_get_title: make-routine glib "g_bookmark_file_get_title" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [pointer]
    ]
    bookmark_file_set_description: make-routine glib "g_bookmark_file_set_description" [
        bookmark [pointer]
        uri [pointer]
        description [pointer]
        return: [void]
    ]
    bookmark_file_get_description: make-routine glib "g_bookmark_file_get_description" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [pointer]
    ]
    bookmark_file_set_mime_type: make-routine glib "g_bookmark_file_set_mime_type" [
        bookmark [pointer]
        uri [pointer]
        mime_type [pointer]
        return: [void]
    ]
    bookmark_file_get_mime_type: make-routine glib "g_bookmark_file_get_mime_type" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [pointer]
    ]
    bookmark_file_set_groups: make-routine glib "g_bookmark_file_set_groups" [
        bookmark [pointer]
        uri [pointer]
        groups [pointer]
        length [uint64]
        return: [void]
    ]
    bookmark_file_add_group: make-routine glib "g_bookmark_file_add_group" [
        bookmark [pointer]
        uri [pointer]
        group [pointer]
        return: [void]
    ]
    bookmark_file_has_group: make-routine glib "g_bookmark_file_has_group" [
        bookmark [pointer]
        uri [pointer]
        group [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_get_groups: make-routine glib "g_bookmark_file_get_groups" [
        bookmark [pointer]
        uri [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    bookmark_file_add_application: make-routine glib "g_bookmark_file_add_application" [
        bookmark [pointer]
        uri [pointer]
        name [pointer]
        exec [pointer]
        return: [void]
    ]
    bookmark_file_has_application: make-routine glib "g_bookmark_file_has_application" [
        bookmark [pointer]
        uri [pointer]
        name [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_get_applications: make-routine glib "g_bookmark_file_get_applications" [
        bookmark [pointer]
        uri [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    bookmark_file_set_app_info: make-routine glib "g_bookmark_file_set_app_info" [
        bookmark [pointer]
        uri [pointer]
        name [pointer]
        exec [pointer]
        count [int32]
        stamp [int64]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_get_app_info: make-routine glib "g_bookmark_file_get_app_info" [
        bookmark [pointer]
        uri [pointer]
        name [pointer]
        exec [pointer]
        count [pointer]
        stamp [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_set_is_private: make-routine glib "g_bookmark_file_set_is_private" [
        bookmark [pointer]
        uri [pointer]
        is_private [int32]
        return: [void]
    ]
    bookmark_file_get_is_private: make-routine glib "g_bookmark_file_get_is_private" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_set_icon: make-routine glib "g_bookmark_file_set_icon" [
        bookmark [pointer]
        uri [pointer]
        href [pointer]
        mime_type [pointer]
        return: [void]
    ]
    bookmark_file_get_icon: make-routine glib "g_bookmark_file_get_icon" [
        bookmark [pointer]
        uri [pointer]
        href [pointer]
        mime_type [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_set_added: make-routine glib "g_bookmark_file_set_added" [
        bookmark [pointer]
        uri [pointer]
        added [int64]
        return: [void]
    ]
    bookmark_file_get_added: make-routine glib "g_bookmark_file_get_added" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [int64]
    ]
    bookmark_file_set_modified: make-routine glib "g_bookmark_file_set_modified" [
        bookmark [pointer]
        uri [pointer]
        modified [int64]
        return: [void]
    ]
    bookmark_file_get_modified: make-routine glib "g_bookmark_file_get_modified" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [int64]
    ]
    bookmark_file_set_visited: make-routine glib "g_bookmark_file_set_visited" [
        bookmark [pointer]
        uri [pointer]
        visited [int64]
        return: [void]
    ]
    bookmark_file_get_visited: make-routine glib "g_bookmark_file_get_visited" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [int64]
    ]
    bookmark_file_has_item: make-routine glib "g_bookmark_file_has_item" [
        bookmark [pointer]
        uri [pointer]
        return: [int32]
    ]
    bookmark_file_get_size: make-routine glib "g_bookmark_file_get_size" [
        bookmark [pointer]
        return: [int32]
    ]
    bookmark_file_get_uris: make-routine glib "g_bookmark_file_get_uris" [
        bookmark [pointer]
        length [pointer]
        return: [pointer]
    ]
    bookmark_file_remove_group: make-routine glib "g_bookmark_file_remove_group" [
        bookmark [pointer]
        uri [pointer]
        group [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_remove_application: make-routine glib "g_bookmark_file_remove_application" [
        bookmark [pointer]
        uri [pointer]
        name [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_remove_item: make-routine glib "g_bookmark_file_remove_item" [
        bookmark [pointer]
        uri [pointer]
        error [pointer]
        return: [int32]
    ]
    bookmark_file_move_item: make-routine glib "g_bookmark_file_move_item" [
        bookmark [pointer]
        old_uri [pointer]
        new_uri [pointer]
        error [pointer]
        return: [int32]
    ]
    bytes_new: make-routine glib "g_bytes_new" [
        data [pointer]
        size [uint64]
        return: [pointer]
    ]
    bytes_new_take: make-routine glib "g_bytes_new_take" [
        data [pointer]
        size [uint64]
        return: [pointer]
    ]
    bytes_new_static: make-routine glib "g_bytes_new_static" [
        data [pointer]
        size [uint64]
        return: [pointer]
    ]
    bytes_new_with_free_func: make-routine glib "g_bytes_new_with_free_func" [
        data [pointer]
        size [uint64]
        free_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    bytes_new_from_bytes: make-routine glib "g_bytes_new_from_bytes" [
        bytes [pointer]
        offset [uint64]
        length [uint64]
        return: [pointer]
    ]
    bytes_get_data: make-routine glib "g_bytes_get_data" [
        bytes [pointer]
        size [pointer]
        return: [pointer]
    ]
    bytes_get_size: make-routine glib "g_bytes_get_size" [
        bytes [pointer]
        return: [uint64]
    ]
    bytes_ref: make-routine glib "g_bytes_ref" [
        bytes [pointer]
        return: [pointer]
    ]
    bytes_unref: make-routine glib "g_bytes_unref" [
        bytes [pointer]
        return: [void]
    ]
    bytes_unref_to_data: make-routine glib "g_bytes_unref_to_data" [
        bytes [pointer]
        size [pointer]
        return: [pointer]
    ]
    bytes_unref_to_array: make-routine glib "g_bytes_unref_to_array" [
        bytes [pointer]
        return: [pointer]
    ]
    bytes_hash: make-routine glib "g_bytes_hash" [
        bytes [pointer]
        return: [uint32]
    ]
    bytes_equal: make-routine glib "g_bytes_equal" [
        bytes1 [pointer]
        bytes2 [pointer]
        return: [int32]
    ]
    bytes_compare: make-routine glib "g_bytes_compare" [
        bytes1 [pointer]
        bytes2 [pointer]
        return: [int32]
    ]
    get_charset: make-routine glib "g_get_charset" [
        charset [pointer]
        return: [int32]
    ]
    get_codeset: make-routine glib "g_get_codeset" [
        return: [pointer]
    ]
    get_language_names: make-routine glib "g_get_language_names" [
        return: [pointer]
    ]
    get_locale_variants: make-routine glib "g_get_locale_variants" [
        locale [pointer]
        return: [pointer]
    ]
    checksum_type_get_length: make-routine glib "g_checksum_type_get_length" [
        checksum_type [int32]
        return: [int64]
    ]
    checksum_new: make-routine glib "g_checksum_new" [
        checksum_type [int32]
        return: [pointer]
    ]
    checksum_reset: make-routine glib "g_checksum_reset" [
        checksum [pointer]
        return: [void]
    ]
    checksum_copy: make-routine glib "g_checksum_copy" [
        checksum [pointer]
        return: [pointer]
    ]
    checksum_free: make-routine glib "g_checksum_free" [
        checksum [pointer]
        return: [void]
    ]
    checksum_update: make-routine glib "g_checksum_update" [
        checksum [pointer]
        data [pointer]
        length [int64]
        return: [void]
    ]
    checksum_get_string: make-routine glib "g_checksum_get_string" [
        checksum [pointer]
        return: [pointer]
    ]
    checksum_get_digest: make-routine glib "g_checksum_get_digest" [
        checksum [pointer]
        buffer [pointer]
        digest_len [pointer]
        return: [void]
    ]
    compute_checksum_for_data: make-routine glib "g_compute_checksum_for_data" [
        checksum_type [int32]
        data [pointer]
        length [uint64]
        return: [pointer]
    ]
    compute_checksum_for_string: make-routine glib "g_compute_checksum_for_string" [
        checksum_type [int32]
        str [pointer]
        length [int64]
        return: [pointer]
    ]
    compute_checksum_for_bytes: make-routine glib "g_compute_checksum_for_bytes" [
        checksum_type [int32]
        data [pointer]
        return: [pointer]
    ]
    convert_error_quark: make-routine glib "g_convert_error_quark" [
        return: [uint32]
    ]
    iconv_open: make-routine glib "g_iconv_open" [
        to_codeset [pointer]
        from_codeset [pointer]
        return: [pointer]
    ]
    iconv: make-routine glib "g_iconv" [
        converter [pointer]
        inbuf [pointer]
        inbytes_left [pointer]
        outbuf [pointer]
        outbytes_left [pointer]
        return: [uint64]
    ]
    iconv_close: make-routine glib "g_iconv_close" [
        converter [pointer]
        return: [int32]
    ]
    convert: make-routine glib "g_convert" [
        str [pointer]
        len [int64]
        to_codeset [pointer]
        from_codeset [pointer]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    convert_with_iconv: make-routine glib "g_convert_with_iconv" [
        str [pointer]
        len [int64]
        converter [pointer]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    convert_with_fallback: make-routine glib "g_convert_with_fallback" [
        str [pointer]
        len [int64]
        to_codeset [pointer]
        from_codeset [pointer]
        fallback [pointer]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    locale_to_utf8: make-routine glib "g_locale_to_utf8" [
        opsysstring [pointer]
        len [int64]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    locale_from_utf8: make-routine glib "g_locale_from_utf8" [
        utf8string [pointer]
        len [int64]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    filename_to_utf8: make-routine glib "g_filename_to_utf8" [
        opsysstring [pointer]
        len [int64]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    filename_from_utf8: make-routine glib "g_filename_from_utf8" [
        utf8string [pointer]
        len [int64]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    filename_from_uri: make-routine glib "g_filename_from_uri" [
        uri [pointer]
        hostname [pointer]
        error [pointer]
        return: [pointer]
    ]
    filename_to_uri: make-routine glib "g_filename_to_uri" [
        filename [pointer]
        hostname [pointer]
        error [pointer]
        return: [pointer]
    ]
    filename_display_name: make-routine glib "g_filename_display_name" [
        filename [pointer]
        return: [pointer]
    ]
    get_filename_charsets: make-routine glib "g_get_filename_charsets" [
        charsets [pointer]
        return: [int32]
    ]
    filename_display_basename: make-routine glib "g_filename_display_basename" [
        filename [pointer]
        return: [pointer]
    ]
    uri_list_extract_uris: make-routine glib "g_uri_list_extract_uris" [
        uri_list [pointer]
        return: [pointer]
    ]
    datalist_init: make-routine glib "g_datalist_init" [
        datalist [pointer]
        return: [void]
    ]
    datalist_clear: make-routine glib "g_datalist_clear" [
        datalist [pointer]
        return: [void]
    ]
    datalist_id_get_data: make-routine glib "g_datalist_id_get_data" [
        datalist [pointer]
        key_id [uint32]
        return: [pointer]
    ]
    datalist_id_set_data_full: make-routine glib "g_datalist_id_set_data_full" [
        datalist [pointer]
        key_id [uint32]
        data [pointer]
        destroy_func [pointer]
        return: [void]
    ]
    datalist_id_dup_data: make-routine glib "g_datalist_id_dup_data" [
        datalist [pointer]
        key_id [uint32]
        dup_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    datalist_id_replace_data: make-routine glib "g_datalist_id_replace_data" [
        datalist [pointer]
        key_id [uint32]
        oldval [pointer]
        newval [pointer]
        destroy [pointer]
        old_destroy [pointer]
        return: [int32]
    ]
    datalist_id_remove_no_notify: make-routine glib "g_datalist_id_remove_no_notify" [
        datalist [pointer]
        key_id [uint32]
        return: [pointer]
    ]
    datalist_foreach: make-routine glib "g_datalist_foreach" [
        datalist [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    datalist_set_flags: make-routine glib "g_datalist_set_flags" [
        datalist [pointer]
        flags [uint32]
        return: [void]
    ]
    datalist_unset_flags: make-routine glib "g_datalist_unset_flags" [
        datalist [pointer]
        flags [uint32]
        return: [void]
    ]
    datalist_get_flags: make-routine glib "g_datalist_get_flags" [
        datalist [pointer]
        return: [uint32]
    ]
    dataset_destroy: make-routine glib "g_dataset_destroy" [
        dataset_location [pointer]
        return: [void]
    ]
    dataset_id_get_data: make-routine glib "g_dataset_id_get_data" [
        dataset_location [pointer]
        key_id [uint32]
        return: [pointer]
    ]
    datalist_get_data: make-routine glib "g_datalist_get_data" [
        datalist [pointer]
        key [pointer]
        return: [pointer]
    ]
    dataset_id_set_data_full: make-routine glib "g_dataset_id_set_data_full" [
        dataset_location [pointer]
        key_id [uint32]
        data [pointer]
        destroy_func [pointer]
        return: [void]
    ]
    dataset_id_remove_no_notify: make-routine glib "g_dataset_id_remove_no_notify" [
        dataset_location [pointer]
        key_id [uint32]
        return: [pointer]
    ]
    dataset_foreach: make-routine glib "g_dataset_foreach" [
        dataset_location [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    date_new: make-routine glib "g_date_new" [
        return: [pointer]
    ]
    date_new_dmy: make-routine glib "g_date_new_dmy" [
        day [uint8]
        month [int32]
        year [uint16]
        return: [pointer]
    ]
    date_new_julian: make-routine glib "g_date_new_julian" [
        julian_day [uint32]
        return: [pointer]
    ]
    date_free: make-routine glib "g_date_free" [
        date [pointer]
        return: [void]
    ]
    date_valid: make-routine glib "g_date_valid" [
        date [pointer]
        return: [int32]
    ]
    date_valid_day: make-routine glib "g_date_valid_day" [
        day [uint8]
        return: [int32]
    ]
    date_valid_month: make-routine glib "g_date_valid_month" [
        month [int32]
        return: [int32]
    ]
    date_valid_year: make-routine glib "g_date_valid_year" [
        year [uint16]
        return: [int32]
    ]
    date_valid_weekday: make-routine glib "g_date_valid_weekday" [
        weekday [int32]
        return: [int32]
    ]
    date_valid_julian: make-routine glib "g_date_valid_julian" [
        julian_date [uint32]
        return: [int32]
    ]
    date_valid_dmy: make-routine glib "g_date_valid_dmy" [
        day [uint8]
        month [int32]
        year [uint16]
        return: [int32]
    ]
    date_get_weekday: make-routine glib "g_date_get_weekday" [
        date [pointer]
        return: [int32]
    ]
    date_get_month: make-routine glib "g_date_get_month" [
        date [pointer]
        return: [int32]
    ]
    date_get_year: make-routine glib "g_date_get_year" [
        date [pointer]
        return: [uint16]
    ]
    date_get_day: make-routine glib "g_date_get_day" [
        date [pointer]
        return: [uint8]
    ]
    date_get_julian: make-routine glib "g_date_get_julian" [
        date [pointer]
        return: [uint32]
    ]
    date_get_day_of_year: make-routine glib "g_date_get_day_of_year" [
        date [pointer]
        return: [uint32]
    ]
    date_get_monday_week_of_year: make-routine glib "g_date_get_monday_week_of_year" [
        date [pointer]
        return: [uint32]
    ]
    date_get_sunday_week_of_year: make-routine glib "g_date_get_sunday_week_of_year" [
        date [pointer]
        return: [uint32]
    ]
    date_get_iso8601_week_of_year: make-routine glib "g_date_get_iso8601_week_of_year" [
        date [pointer]
        return: [uint32]
    ]
    date_clear: make-routine glib "g_date_clear" [
        date [pointer]
        n_dates [uint32]
        return: [void]
    ]
    date_set_parse: make-routine glib "g_date_set_parse" [
        date [pointer]
        str [pointer]
        return: [void]
    ]
    date_set_time_t: make-routine glib "g_date_set_time_t" [
        date [pointer]
        timet [int64]
        return: [void]
    ]
    date_set_time_val: make-routine glib "g_date_set_time_val" [
        date [pointer]
        timeval [pointer]
        return: [void]
    ]
    date_set_month: make-routine glib "g_date_set_month" [
        date [pointer]
        month [int32]
        return: [void]
    ]
    date_set_day: make-routine glib "g_date_set_day" [
        date [pointer]
        day [uint8]
        return: [void]
    ]
    date_set_year: make-routine glib "g_date_set_year" [
        date [pointer]
        year [uint16]
        return: [void]
    ]
    date_set_dmy: make-routine glib "g_date_set_dmy" [
        date [pointer]
        day [uint8]
        month [int32]
        y [uint16]
        return: [void]
    ]
    date_set_julian: make-routine glib "g_date_set_julian" [
        date [pointer]
        julian_date [uint32]
        return: [void]
    ]
    date_is_first_of_month: make-routine glib "g_date_is_first_of_month" [
        date [pointer]
        return: [int32]
    ]
    date_is_last_of_month: make-routine glib "g_date_is_last_of_month" [
        date [pointer]
        return: [int32]
    ]
    date_add_days: make-routine glib "g_date_add_days" [
        date [pointer]
        n_days [uint32]
        return: [void]
    ]
    date_subtract_days: make-routine glib "g_date_subtract_days" [
        date [pointer]
        n_days [uint32]
        return: [void]
    ]
    date_add_months: make-routine glib "g_date_add_months" [
        date [pointer]
        n_months [uint32]
        return: [void]
    ]
    date_subtract_months: make-routine glib "g_date_subtract_months" [
        date [pointer]
        n_months [uint32]
        return: [void]
    ]
    date_add_years: make-routine glib "g_date_add_years" [
        date [pointer]
        n_years [uint32]
        return: [void]
    ]
    date_subtract_years: make-routine glib "g_date_subtract_years" [
        date [pointer]
        n_years [uint32]
        return: [void]
    ]
    date_is_leap_year: make-routine glib "g_date_is_leap_year" [
        year [uint16]
        return: [int32]
    ]
    date_get_days_in_month: make-routine glib "g_date_get_days_in_month" [
        month [int32]
        year [uint16]
        return: [uint8]
    ]
    date_get_monday_weeks_in_year: make-routine glib "g_date_get_monday_weeks_in_year" [
        year [uint16]
        return: [uint8]
    ]
    date_get_sunday_weeks_in_year: make-routine glib "g_date_get_sunday_weeks_in_year" [
        year [uint16]
        return: [uint8]
    ]
    date_days_between: make-routine glib "g_date_days_between" [
        date1 [pointer]
        date2 [pointer]
        return: [int32]
    ]
    date_compare: make-routine glib "g_date_compare" [
        lhs [pointer]
        rhs [pointer]
        return: [int32]
    ]
    date_to_struct_tm: make-routine glib "g_date_to_struct_tm" [
        date [pointer]
        tm [pointer]
        return: [void]
    ]
    date_clamp: make-routine glib "g_date_clamp" [
        date [pointer]
        min_date [pointer]
        max_date [pointer]
        return: [void]
    ]
    date_order: make-routine glib "g_date_order" [
        date1 [pointer]
        date2 [pointer]
        return: [void]
    ]
    date_strftime: make-routine glib "g_date_strftime" [
        s [pointer]
        slen [uint64]
        format [pointer]
        date [pointer]
        return: [uint64]
    ]
    time_zone_new: make-routine glib "g_time_zone_new" [
        identifier [pointer]
        return: [pointer]
    ]
    time_zone_new_utc: make-routine glib "g_time_zone_new_utc" [
        return: [pointer]
    ]
    time_zone_new_local: make-routine glib "g_time_zone_new_local" [
        return: [pointer]
    ]
    time_zone_ref: make-routine glib "g_time_zone_ref" [
        tz [pointer]
        return: [pointer]
    ]
    time_zone_unref: make-routine glib "g_time_zone_unref" [
        tz [pointer]
        return: [void]
    ]
    time_zone_find_interval: make-routine glib "g_time_zone_find_interval" [
        tz [pointer]
        type [int32]
        time_ [int64]
        return: [int32]
    ]
    time_zone_adjust_time: make-routine glib "g_time_zone_adjust_time" [
        tz [pointer]
        type [int32]
        time_ [pointer]
        return: [int32]
    ]
    time_zone_get_abbreviation: make-routine glib "g_time_zone_get_abbreviation" [
        tz [pointer]
        interval [int32]
        return: [pointer]
    ]
    time_zone_get_offset: make-routine glib "g_time_zone_get_offset" [
        tz [pointer]
        interval [int32]
        return: [int32]
    ]
    time_zone_is_dst: make-routine glib "g_time_zone_is_dst" [
        tz [pointer]
        interval [int32]
        return: [int32]
    ]
    date_time_unref: make-routine glib "g_date_time_unref" [
        datetime [pointer]
        return: [void]
    ]
    date_time_ref: make-routine glib "g_date_time_ref" [
        datetime [pointer]
        return: [pointer]
    ]
    date_time_new_now: make-routine glib "g_date_time_new_now" [
        tz [pointer]
        return: [pointer]
    ]
    date_time_new_now_local: make-routine glib "g_date_time_new_now_local" [
        return: [pointer]
    ]
    date_time_new_now_utc: make-routine glib "g_date_time_new_now_utc" [
        return: [pointer]
    ]
    date_time_new_from_unix_local: make-routine glib "g_date_time_new_from_unix_local" [
        t [int64]
        return: [pointer]
    ]
    date_time_new_from_unix_utc: make-routine glib "g_date_time_new_from_unix_utc" [
        t [int64]
        return: [pointer]
    ]
    date_time_new_from_timeval_local: make-routine glib "g_date_time_new_from_timeval_local" [
        tv [pointer]
        return: [pointer]
    ]
    date_time_new_from_timeval_utc: make-routine glib "g_date_time_new_from_timeval_utc" [
        tv [pointer]
        return: [pointer]
    ]
    date_time_new: make-routine glib "g_date_time_new" [
        tz [pointer]
        year [int32]
        month [int32]
        day [int32]
        hour [int32]
        minute [int32]
        seconds [double]
        return: [pointer]
    ]
    date_time_new_local: make-routine glib "g_date_time_new_local" [
        year [int32]
        month [int32]
        day [int32]
        hour [int32]
        minute [int32]
        seconds [double]
        return: [pointer]
    ]
    date_time_new_utc: make-routine glib "g_date_time_new_utc" [
        year [int32]
        month [int32]
        day [int32]
        hour [int32]
        minute [int32]
        seconds [double]
        return: [pointer]
    ]
    date_time_add: make-routine glib "g_date_time_add" [
        datetime [pointer]
        timespan [int64]
        return: [pointer]
    ]
    date_time_add_years: make-routine glib "g_date_time_add_years" [
        datetime [pointer]
        years [int32]
        return: [pointer]
    ]
    date_time_add_months: make-routine glib "g_date_time_add_months" [
        datetime [pointer]
        months [int32]
        return: [pointer]
    ]
    date_time_add_weeks: make-routine glib "g_date_time_add_weeks" [
        datetime [pointer]
        weeks [int32]
        return: [pointer]
    ]
    date_time_add_days: make-routine glib "g_date_time_add_days" [
        datetime [pointer]
        days [int32]
        return: [pointer]
    ]
    date_time_add_hours: make-routine glib "g_date_time_add_hours" [
        datetime [pointer]
        hours [int32]
        return: [pointer]
    ]
    date_time_add_minutes: make-routine glib "g_date_time_add_minutes" [
        datetime [pointer]
        minutes [int32]
        return: [pointer]
    ]
    date_time_add_seconds: make-routine glib "g_date_time_add_seconds" [
        datetime [pointer]
        seconds [double]
        return: [pointer]
    ]
    date_time_add_full: make-routine glib "g_date_time_add_full" [
        datetime [pointer]
        years [int32]
        months [int32]
        days [int32]
        hours [int32]
        minutes [int32]
        seconds [double]
        return: [pointer]
    ]
    date_time_compare: make-routine glib "g_date_time_compare" [
        dt1 [pointer]
        dt2 [pointer]
        return: [int32]
    ]
    date_time_difference: make-routine glib "g_date_time_difference" [
        end [pointer]
        begin [pointer]
        return: [int64]
    ]
    date_time_hash: make-routine glib "g_date_time_hash" [
        datetime [pointer]
        return: [uint32]
    ]
    date_time_equal: make-routine glib "g_date_time_equal" [
        dt1 [pointer]
        dt2 [pointer]
        return: [int32]
    ]
    date_time_get_ymd: make-routine glib "g_date_time_get_ymd" [
        datetime [pointer]
        year [pointer]
        month [pointer]
        day [pointer]
        return: [void]
    ]
    date_time_get_year: make-routine glib "g_date_time_get_year" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_month: make-routine glib "g_date_time_get_month" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_day_of_month: make-routine glib "g_date_time_get_day_of_month" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_week_numbering_year: make-routine glib "g_date_time_get_week_numbering_year" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_week_of_year: make-routine glib "g_date_time_get_week_of_year" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_day_of_week: make-routine glib "g_date_time_get_day_of_week" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_day_of_year: make-routine glib "g_date_time_get_day_of_year" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_hour: make-routine glib "g_date_time_get_hour" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_minute: make-routine glib "g_date_time_get_minute" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_second: make-routine glib "g_date_time_get_second" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_microsecond: make-routine glib "g_date_time_get_microsecond" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_get_seconds: make-routine glib "g_date_time_get_seconds" [
        datetime [pointer]
        return: [double]
    ]
    date_time_to_unix: make-routine glib "g_date_time_to_unix" [
        datetime [pointer]
        return: [int64]
    ]
    date_time_to_timeval: make-routine glib "g_date_time_to_timeval" [
        datetime [pointer]
        tv [pointer]
        return: [int32]
    ]
    date_time_get_utc_offset: make-routine glib "g_date_time_get_utc_offset" [
        datetime [pointer]
        return: [int64]
    ]
    date_time_get_timezone_abbreviation: make-routine glib "g_date_time_get_timezone_abbreviation" [
        datetime [pointer]
        return: [pointer]
    ]
    date_time_is_daylight_savings: make-routine glib "g_date_time_is_daylight_savings" [
        datetime [pointer]
        return: [int32]
    ]
    date_time_to_timezone: make-routine glib "g_date_time_to_timezone" [
        datetime [pointer]
        tz [pointer]
        return: [pointer]
    ]
    date_time_to_local: make-routine glib "g_date_time_to_local" [
        datetime [pointer]
        return: [pointer]
    ]
    date_time_to_utc: make-routine glib "g_date_time_to_utc" [
        datetime [pointer]
        return: [pointer]
    ]
    date_time_format: make-routine glib "g_date_time_format" [
        datetime [pointer]
        format [pointer]
        return: [pointer]
    ]
    dir_open: make-routine glib "g_dir_open" [
        path [pointer]
        flags [uint32]
        error [pointer]
        return: [pointer]
    ]
    dir_read_name: make-routine glib "g_dir_read_name" [
        dir [pointer]
        return: [pointer]
    ]
    dir_rewind: make-routine glib "g_dir_rewind" [
        dir [pointer]
        return: [void]
    ]
    dir_close: make-routine glib "g_dir_close" [
        dir [pointer]
        return: [void]
    ]
    getenv: make-routine glib "g_getenv" [
        variable [pointer]
        return: [pointer]
    ]
    setenv: make-routine glib "g_setenv" [
        variable [pointer]
        value [pointer]
        overwrite [int32]
        return: [int32]
    ]
    unsetenv: make-routine glib "g_unsetenv" [
        variable [pointer]
        return: [void]
    ]
    listenv: make-routine glib "g_listenv" [
        return: [pointer]
    ]
    get_environ: make-routine glib "g_get_environ" [
        return: [pointer]
    ]
    environ_getenv: make-routine glib "g_environ_getenv" [
        envp [pointer]
        variable [pointer]
        return: [pointer]
    ]
    environ_setenv: make-routine glib "g_environ_setenv" [
        envp [pointer]
        variable [pointer]
        value [pointer]
        overwrite [int32]
        return: [pointer]
    ]
    environ_unsetenv: make-routine glib "g_environ_unsetenv" [
        envp [pointer]
        variable [pointer]
        return: [pointer]
    ]
    file_error_quark: make-routine glib "g_file_error_quark" [
        return: [uint32]
    ]
    file_error_from_errno: make-routine glib "g_file_error_from_errno" [
        err_no [int32]
        return: [int32]
    ]
    file_test: make-routine glib "g_file_test" [
        filename [pointer]
        test [int32]
        return: [int32]
    ]
    file_get_contents: make-routine glib "g_file_get_contents" [
        filename [pointer]
        contents [pointer]
        length [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_contents: make-routine glib "g_file_set_contents" [
        filename [pointer]
        contents [pointer]
        length [int64]
        error [pointer]
        return: [int32]
    ]
    file_read_link: make-routine glib "g_file_read_link" [
        filename [pointer]
        error [pointer]
        return: [pointer]
    ]
    mkdtemp: make-routine glib "g_mkdtemp" [
        tmpl [pointer]
        return: [pointer]
    ]
    mkdtemp_full: make-routine glib "g_mkdtemp_full" [
        tmpl [pointer]
        mode [int32]
        return: [pointer]
    ]
    mkstemp: make-routine glib "g_mkstemp" [
        tmpl [pointer]
        return: [int32]
    ]
    mkstemp_full: make-routine glib "g_mkstemp_full" [
        tmpl [pointer]
        flags [int32]
        mode [int32]
        return: [int32]
    ]
    file_open_tmp: make-routine glib "g_file_open_tmp" [
        tmpl [pointer]
        name_used [pointer]
        error [pointer]
        return: [int32]
    ]
    dir_make_tmp: make-routine glib "g_dir_make_tmp" [
        tmpl [pointer]
        error [pointer]
        return: [pointer]
    ]
    build_path: make-routine glib "g_build_path" [
        separator [pointer]
        first_element [pointer]
        ...
        return: [pointer]
    ]
    build_pathv: make-routine glib "g_build_pathv" [
        separator [pointer]
        args [pointer]
        return: [pointer]
    ]
    build_filename: make-routine glib "g_build_filename" [
        first_element [pointer]
        ...
        return: [pointer]
    ]
    build_filenamev: make-routine glib "g_build_filenamev" [
        args [pointer]
        return: [pointer]
    ]
    mkdir_with_parents: make-routine glib "g_mkdir_with_parents" [
        pathname [pointer]
        mode [int32]
        return: [int32]
    ]
    path_is_absolute: make-routine glib "g_path_is_absolute" [
        file_name [pointer]
        return: [int32]
    ]
    path_skip_root: make-routine glib "g_path_skip_root" [
        file_name [pointer]
        return: [pointer]
    ]
    get_current_dir: make-routine glib "g_get_current_dir" [
        return: [pointer]
    ]
    path_get_basename: make-routine glib "g_path_get_basename" [
        file_name [pointer]
        return: [pointer]
    ]
    path_get_dirname: make-routine glib "g_path_get_dirname" [
        file_name [pointer]
        return: [pointer]
    ]
    strip_context: make-routine glib "g_strip_context" [
        msgid [pointer]
        msgval [pointer]
        return: [pointer]
    ]
    dgettext: make-routine glib "g_dgettext" [
        domain [pointer]
        msgid [pointer]
        return: [pointer]
    ]
    dcgettext: make-routine glib "g_dcgettext" [
        domain [pointer]
        msgid [pointer]
        category [int32]
        return: [pointer]
    ]
    dngettext: make-routine glib "g_dngettext" [
        domain [pointer]
        msgid [pointer]
        msgid_plural [pointer]
        n [uint64]
        return: [pointer]
    ]
    dpgettext: make-routine glib "g_dpgettext" [
        domain [pointer]
        msgctxtid [pointer]
        msgidoffset [uint64]
        return: [pointer]
    ]
    dpgettext2: make-routine glib "g_dpgettext2" [
        domain [pointer]
        context [pointer]
        msgid [pointer]
        return: [pointer]
    ]
    free: make-routine glib "g_free" [
        mem [pointer]
        return: [void]
    ]
    clear_pointer: make-routine glib "g_clear_pointer" [
        pp [pointer]
        destroy [pointer]
        return: [void]
    ]
    malloc: make-routine glib "g_malloc" [
        n_bytes [uint64]
        return: [pointer]
    ]
    malloc0: make-routine glib "g_malloc0" [
        n_bytes [uint64]
        return: [pointer]
    ]
    realloc: make-routine glib "g_realloc" [
        mem [pointer]
        n_bytes [uint64]
        return: [pointer]
    ]
    try_malloc: make-routine glib "g_try_malloc" [
        n_bytes [uint64]
        return: [pointer]
    ]
    try_malloc0: make-routine glib "g_try_malloc0" [
        n_bytes [uint64]
        return: [pointer]
    ]
    try_realloc: make-routine glib "g_try_realloc" [
        mem [pointer]
        n_bytes [uint64]
        return: [pointer]
    ]
    malloc_n: make-routine glib "g_malloc_n" [
        n_blocks [uint64]
        n_block_bytes [uint64]
        return: [pointer]
    ]
    malloc0_n: make-routine glib "g_malloc0_n" [
        n_blocks [uint64]
        n_block_bytes [uint64]
        return: [pointer]
    ]
    realloc_n: make-routine glib "g_realloc_n" [
        mem [pointer]
        n_blocks [uint64]
        n_block_bytes [uint64]
        return: [pointer]
    ]
    try_malloc_n: make-routine glib "g_try_malloc_n" [
        n_blocks [uint64]
        n_block_bytes [uint64]
        return: [pointer]
    ]
    try_malloc0_n: make-routine glib "g_try_malloc0_n" [
        n_blocks [uint64]
        n_block_bytes [uint64]
        return: [pointer]
    ]
    try_realloc_n: make-routine glib "g_try_realloc_n" [
        mem [pointer]
        n_blocks [uint64]
        n_block_bytes [uint64]
        return: [pointer]
    ]
    mem_set_vtable: make-routine glib "g_mem_set_vtable" [
        vtable [pointer]
        return: [void]
    ]
    mem_is_system_malloc: make-routine glib "g_mem_is_system_malloc" [
        return: [int32]
    ]
    mem_profile: make-routine glib "g_mem_profile" [
        return: [void]
    ]
    node_new: make-routine glib "g_node_new" [
        data [pointer]
        return: [pointer]
    ]
    node_destroy: make-routine glib "g_node_destroy" [
        root [pointer]
        return: [void]
    ]
    node_unlink: make-routine glib "g_node_unlink" [
        node [pointer]
        return: [void]
    ]
    node_copy_deep: make-routine glib "g_node_copy_deep" [
        node [pointer]
        copy_func [pointer]
        data [pointer]
        return: [pointer]
    ]
    node_copy: make-routine glib "g_node_copy" [
        node [pointer]
        return: [pointer]
    ]
    node_insert: make-routine glib "g_node_insert" [
        parent [pointer]
        position [int32]
        node [pointer]
        return: [pointer]
    ]
    node_insert_before: make-routine glib "g_node_insert_before" [
        parent [pointer]
        sibling [pointer]
        node [pointer]
        return: [pointer]
    ]
    node_insert_after: make-routine glib "g_node_insert_after" [
        parent [pointer]
        sibling [pointer]
        node [pointer]
        return: [pointer]
    ]
    node_prepend: make-routine glib "g_node_prepend" [
        parent [pointer]
        node [pointer]
        return: [pointer]
    ]
    node_n_nodes: make-routine glib "g_node_n_nodes" [
        root [pointer]
        flags [int32]
        return: [uint32]
    ]
    node_get_root: make-routine glib "g_node_get_root" [
        node [pointer]
        return: [pointer]
    ]
    node_is_ancestor: make-routine glib "g_node_is_ancestor" [
        node [pointer]
        descendant [pointer]
        return: [int32]
    ]
    node_depth: make-routine glib "g_node_depth" [
        node [pointer]
        return: [uint32]
    ]
    node_find: make-routine glib "g_node_find" [
        root [pointer]
        order [int32]
        flags [int32]
        data [pointer]
        return: [pointer]
    ]
    node_traverse: make-routine glib "g_node_traverse" [
        root [pointer]
        order [int32]
        flags [int32]
        max_depth [int32]
        func [pointer]
        data [pointer]
        return: [void]
    ]
    node_max_height: make-routine glib "g_node_max_height" [
        root [pointer]
        return: [uint32]
    ]
    node_children_foreach: make-routine glib "g_node_children_foreach" [
        node [pointer]
        flags [int32]
        func [pointer]
        data [pointer]
        return: [void]
    ]
    node_reverse_children: make-routine glib "g_node_reverse_children" [
        node [pointer]
        return: [void]
    ]
    node_n_children: make-routine glib "g_node_n_children" [
        node [pointer]
        return: [uint32]
    ]
    node_nth_child: make-routine glib "g_node_nth_child" [
        node [pointer]
        n [uint32]
        return: [pointer]
    ]
    node_last_child: make-routine glib "g_node_last_child" [
        node [pointer]
        return: [pointer]
    ]
    node_find_child: make-routine glib "g_node_find_child" [
        node [pointer]
        flags [int32]
        data [pointer]
        return: [pointer]
    ]
    node_child_position: make-routine glib "g_node_child_position" [
        node [pointer]
        child [pointer]
        return: [int32]
    ]
    node_child_index: make-routine glib "g_node_child_index" [
        node [pointer]
        data [pointer]
        return: [int32]
    ]
    node_first_sibling: make-routine glib "g_node_first_sibling" [
        node [pointer]
        return: [pointer]
    ]
    node_last_sibling: make-routine glib "g_node_last_sibling" [
        node [pointer]
        return: [pointer]
    ]
    list_alloc: make-routine glib "g_list_alloc" [
        return: [pointer]
    ]
    list_free: make-routine glib "g_list_free" [
        list [pointer]
        return: [void]
    ]
    list_free_1: make-routine glib "g_list_free_1" [
        list [pointer]
        return: [void]
    ]
    list_free_full: make-routine glib "g_list_free_full" [
        list [pointer]
        free_func [pointer]
        return: [void]
    ]
    list_append: make-routine glib "g_list_append" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    list_prepend: make-routine glib "g_list_prepend" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    list_insert: make-routine glib "g_list_insert" [
        list [pointer]
        data [pointer]
        position [int32]
        return: [pointer]
    ]
    list_insert_sorted: make-routine glib "g_list_insert_sorted" [
        list [pointer]
        data [pointer]
        func [pointer]
        return: [pointer]
    ]
    list_insert_sorted_with_data: make-routine glib "g_list_insert_sorted_with_data" [
        list [pointer]
        data [pointer]
        func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    list_insert_before: make-routine glib "g_list_insert_before" [
        list [pointer]
        sibling [pointer]
        data [pointer]
        return: [pointer]
    ]
    list_concat: make-routine glib "g_list_concat" [
        list1 [pointer]
        list2 [pointer]
        return: [pointer]
    ]
    list_remove: make-routine glib "g_list_remove" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    list_remove_all: make-routine glib "g_list_remove_all" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    list_remove_link: make-routine glib "g_list_remove_link" [
        list [pointer]
        llink [pointer]
        return: [pointer]
    ]
    list_delete_link: make-routine glib "g_list_delete_link" [
        list [pointer]
        link_ [pointer]
        return: [pointer]
    ]
    list_reverse: make-routine glib "g_list_reverse" [
        list [pointer]
        return: [pointer]
    ]
    list_copy: make-routine glib "g_list_copy" [
        list [pointer]
        return: [pointer]
    ]
    list_copy_deep: make-routine glib "g_list_copy_deep" [
        list [pointer]
        func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    list_nth: make-routine glib "g_list_nth" [
        list [pointer]
        n [uint32]
        return: [pointer]
    ]
    list_nth_prev: make-routine glib "g_list_nth_prev" [
        list [pointer]
        n [uint32]
        return: [pointer]
    ]
    list_find: make-routine glib "g_list_find" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    list_find_custom: make-routine glib "g_list_find_custom" [
        list [pointer]
        data [pointer]
        func [pointer]
        return: [pointer]
    ]
    list_position: make-routine glib "g_list_position" [
        list [pointer]
        llink [pointer]
        return: [int32]
    ]
    list_index: make-routine glib "g_list_index" [
        list [pointer]
        data [pointer]
        return: [int32]
    ]
    list_last: make-routine glib "g_list_last" [
        list [pointer]
        return: [pointer]
    ]
    list_first: make-routine glib "g_list_first" [
        list [pointer]
        return: [pointer]
    ]
    list_length: make-routine glib "g_list_length" [
        list [pointer]
        return: [uint32]
    ]
    list_foreach: make-routine glib "g_list_foreach" [
        list [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    list_sort: make-routine glib "g_list_sort" [
        list [pointer]
        compare_func [pointer]
        return: [pointer]
    ]
    list_sort_with_data: make-routine glib "g_list_sort_with_data" [
        list [pointer]
        compare_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    list_nth_data: make-routine glib "g_list_nth_data" [
        list [pointer]
        n [uint32]
        return: [pointer]
    ]
    hash_table_new: make-routine glib "g_hash_table_new" [
        hash_func [pointer]
        key_equal_func [pointer]
        return: [pointer]
    ]
    hash_table_new_full: make-routine glib "g_hash_table_new_full" [
        hash_func [pointer]
        key_equal_func [pointer]
        key_destroy_func [pointer]
        value_destroy_func [pointer]
        return: [pointer]
    ]
    hash_table_destroy: make-routine glib "g_hash_table_destroy" [
        hash_table [pointer]
        return: [void]
    ]
    hash_table_insert: make-routine glib "g_hash_table_insert" [
        hash_table [pointer]
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    hash_table_replace: make-routine glib "g_hash_table_replace" [
        hash_table [pointer]
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    hash_table_add: make-routine glib "g_hash_table_add" [
        hash_table [pointer]
        key [pointer]
        return: [int32]
    ]
    hash_table_remove: make-routine glib "g_hash_table_remove" [
        hash_table [pointer]
        key [pointer]
        return: [int32]
    ]
    hash_table_remove_all: make-routine glib "g_hash_table_remove_all" [
        hash_table [pointer]
        return: [void]
    ]
    hash_table_steal: make-routine glib "g_hash_table_steal" [
        hash_table [pointer]
        key [pointer]
        return: [int32]
    ]
    hash_table_steal_all: make-routine glib "g_hash_table_steal_all" [
        hash_table [pointer]
        return: [void]
    ]
    hash_table_lookup: make-routine glib "g_hash_table_lookup" [
        hash_table [pointer]
        key [pointer]
        return: [pointer]
    ]
    hash_table_contains: make-routine glib "g_hash_table_contains" [
        hash_table [pointer]
        key [pointer]
        return: [int32]
    ]
    hash_table_lookup_extended: make-routine glib "g_hash_table_lookup_extended" [
        hash_table [pointer]
        lookup_key [pointer]
        orig_key [pointer]
        value [pointer]
        return: [int32]
    ]
    hash_table_foreach: make-routine glib "g_hash_table_foreach" [
        hash_table [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    hash_table_find: make-routine glib "g_hash_table_find" [
        hash_table [pointer]
        predicate [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    hash_table_foreach_remove: make-routine glib "g_hash_table_foreach_remove" [
        hash_table [pointer]
        func [pointer]
        user_data [pointer]
        return: [uint32]
    ]
    hash_table_foreach_steal: make-routine glib "g_hash_table_foreach_steal" [
        hash_table [pointer]
        func [pointer]
        user_data [pointer]
        return: [uint32]
    ]
    hash_table_size: make-routine glib "g_hash_table_size" [
        hash_table [pointer]
        return: [uint32]
    ]
    hash_table_get_keys: make-routine glib "g_hash_table_get_keys" [
        hash_table [pointer]
        return: [pointer]
    ]
    hash_table_get_values: make-routine glib "g_hash_table_get_values" [
        hash_table [pointer]
        return: [pointer]
    ]
    hash_table_get_keys_as_array: make-routine glib "g_hash_table_get_keys_as_array" [
        hash_table [pointer]
        length [pointer]
        return: [pointer]
    ]
    hash_table_iter_init: make-routine glib "g_hash_table_iter_init" [
        iter [pointer]
        hash_table [pointer]
        return: [void]
    ]
    hash_table_iter_next: make-routine glib "g_hash_table_iter_next" [
        iter [pointer]
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    hash_table_iter_get_hash_table: make-routine glib "g_hash_table_iter_get_hash_table" [
        iter [pointer]
        return: [pointer]
    ]
    hash_table_iter_remove: make-routine glib "g_hash_table_iter_remove" [
        iter [pointer]
        return: [void]
    ]
    hash_table_iter_replace: make-routine glib "g_hash_table_iter_replace" [
        iter [pointer]
        value [pointer]
        return: [void]
    ]
    hash_table_iter_steal: make-routine glib "g_hash_table_iter_steal" [
        iter [pointer]
        return: [void]
    ]
    hash_table_ref: make-routine glib "g_hash_table_ref" [
        hash_table [pointer]
        return: [pointer]
    ]
    hash_table_unref: make-routine glib "g_hash_table_unref" [
        hash_table [pointer]
        return: [void]
    ]
    str_equal: make-routine glib "g_str_equal" [
        v1 [pointer]
        v2 [pointer]
        return: [int32]
    ]
    str_hash: make-routine glib "g_str_hash" [
        v [pointer]
        return: [uint32]
    ]
    int_equal: make-routine glib "g_int_equal" [
        v1 [pointer]
        v2 [pointer]
        return: [int32]
    ]
    int_hash: make-routine glib "g_int_hash" [
        v [pointer]
        return: [uint32]
    ]
    int64_equal: make-routine glib "g_int64_equal" [
        v1 [pointer]
        v2 [pointer]
        return: [int32]
    ]
    int64_hash: make-routine glib "g_int64_hash" [
        v [pointer]
        return: [uint32]
    ]
    double_equal: make-routine glib "g_double_equal" [
        v1 [pointer]
        v2 [pointer]
        return: [int32]
    ]
    double_hash: make-routine glib "g_double_hash" [
        v [pointer]
        return: [uint32]
    ]
    direct_hash: make-routine glib "g_direct_hash" [
        v [pointer]
        return: [uint32]
    ]
    direct_equal: make-routine glib "g_direct_equal" [
        v1 [pointer]
        v2 [pointer]
        return: [int32]
    ]
    hmac_new: make-routine glib "g_hmac_new" [
        digest_type [int32]
        key [pointer]
        key_len [uint64]
        return: [pointer]
    ]
    hmac_copy: make-routine glib "g_hmac_copy" [
        hmac [pointer]
        return: [pointer]
    ]
    hmac_ref: make-routine glib "g_hmac_ref" [
        hmac [pointer]
        return: [pointer]
    ]
    hmac_unref: make-routine glib "g_hmac_unref" [
        hmac [pointer]
        return: [void]
    ]
    hmac_update: make-routine glib "g_hmac_update" [
        hmac [pointer]
        data [pointer]
        length [int64]
        return: [void]
    ]
    hmac_get_string: make-routine glib "g_hmac_get_string" [
        hmac [pointer]
        return: [pointer]
    ]
    hmac_get_digest: make-routine glib "g_hmac_get_digest" [
        hmac [pointer]
        buffer [pointer]
        digest_len [pointer]
        return: [void]
    ]
    compute_hmac_for_data: make-routine glib "g_compute_hmac_for_data" [
        digest_type [int32]
        key [pointer]
        key_len [uint64]
        data [pointer]
        length [uint64]
        return: [pointer]
    ]
    compute_hmac_for_string: make-routine glib "g_compute_hmac_for_string" [
        digest_type [int32]
        key [pointer]
        key_len [uint64]
        str [pointer]
        length [int64]
        return: [pointer]
    ]
    hook_list_init: make-routine glib "g_hook_list_init" [
        hook_list [pointer]
        hook_size [uint32]
        return: [void]
    ]
    hook_list_clear: make-routine glib "g_hook_list_clear" [
        hook_list [pointer]
        return: [void]
    ]
    hook_alloc: make-routine glib "g_hook_alloc" [
        hook_list [pointer]
        return: [pointer]
    ]
    hook_free: make-routine glib "g_hook_free" [
        hook_list [pointer]
        hook [pointer]
        return: [void]
    ]
    hook_ref: make-routine glib "g_hook_ref" [
        hook_list [pointer]
        hook [pointer]
        return: [pointer]
    ]
    hook_unref: make-routine glib "g_hook_unref" [
        hook_list [pointer]
        hook [pointer]
        return: [void]
    ]
    hook_destroy: make-routine glib "g_hook_destroy" [
        hook_list [pointer]
        hook_id [uint64]
        return: [int32]
    ]
    hook_destroy_link: make-routine glib "g_hook_destroy_link" [
        hook_list [pointer]
        hook [pointer]
        return: [void]
    ]
    hook_prepend: make-routine glib "g_hook_prepend" [
        hook_list [pointer]
        hook [pointer]
        return: [void]
    ]
    hook_insert_before: make-routine glib "g_hook_insert_before" [
        hook_list [pointer]
        sibling [pointer]
        hook [pointer]
        return: [void]
    ]
    hook_insert_sorted: make-routine glib "g_hook_insert_sorted" [
        hook_list [pointer]
        hook [pointer]
        func [pointer]
        return: [void]
    ]
    hook_get: make-routine glib "g_hook_get" [
        hook_list [pointer]
        hook_id [uint64]
        return: [pointer]
    ]
    hook_find: make-routine glib "g_hook_find" [
        hook_list [pointer]
        need_valids [int32]
        func [pointer]
        data [pointer]
        return: [pointer]
    ]
    hook_find_data: make-routine glib "g_hook_find_data" [
        hook_list [pointer]
        need_valids [int32]
        data [pointer]
        return: [pointer]
    ]
    hook_find_func: make-routine glib "g_hook_find_func" [
        hook_list [pointer]
        need_valids [int32]
        func [pointer]
        return: [pointer]
    ]
    hook_find_func_data: make-routine glib "g_hook_find_func_data" [
        hook_list [pointer]
        need_valids [int32]
        func [pointer]
        data [pointer]
        return: [pointer]
    ]
    hook_first_valid: make-routine glib "g_hook_first_valid" [
        hook_list [pointer]
        may_be_in_call [int32]
        return: [pointer]
    ]
    hook_next_valid: make-routine glib "g_hook_next_valid" [
        hook_list [pointer]
        hook [pointer]
        may_be_in_call [int32]
        return: [pointer]
    ]
    hook_compare_ids: make-routine glib "g_hook_compare_ids" [
        new_hook [pointer]
        sibling [pointer]
        return: [int32]
    ]
    hook_list_invoke: make-routine glib "g_hook_list_invoke" [
        hook_list [pointer]
        may_recurse [int32]
        return: [void]
    ]
    hook_list_invoke_check: make-routine glib "g_hook_list_invoke_check" [
        hook_list [pointer]
        may_recurse [int32]
        return: [void]
    ]
    hook_list_marshal: make-routine glib "g_hook_list_marshal" [
        hook_list [pointer]
        may_recurse [int32]
        marshaller [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    hook_list_marshal_check: make-routine glib "g_hook_list_marshal_check" [
        hook_list [pointer]
        may_recurse [int32]
        marshaller [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    hostname_is_non_ascii: make-routine glib "g_hostname_is_non_ascii" [
        hostname [pointer]
        return: [int32]
    ]
    hostname_is_ascii_encoded: make-routine glib "g_hostname_is_ascii_encoded" [
        hostname [pointer]
        return: [int32]
    ]
    hostname_is_ip_address: make-routine glib "g_hostname_is_ip_address" [
        hostname [pointer]
        return: [int32]
    ]
    hostname_to_ascii: make-routine glib "g_hostname_to_ascii" [
        hostname [pointer]
        return: [pointer]
    ]
    hostname_to_unicode: make-routine glib "g_hostname_to_unicode" [
        hostname [pointer]
        return: [pointer]
    ]
    poll: make-routine glib "g_poll" [
        fds [pointer]
        nfds [uint32]
        timeout [int32]
        return: [int32]
    ]
    slist_alloc: make-routine glib "g_slist_alloc" [
        return: [pointer]
    ]
    slist_free: make-routine glib "g_slist_free" [
        list [pointer]
        return: [void]
    ]
    slist_free_1: make-routine glib "g_slist_free_1" [
        list [pointer]
        return: [void]
    ]
    slist_free_full: make-routine glib "g_slist_free_full" [
        list [pointer]
        free_func [pointer]
        return: [void]
    ]
    slist_append: make-routine glib "g_slist_append" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    slist_prepend: make-routine glib "g_slist_prepend" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    slist_insert: make-routine glib "g_slist_insert" [
        list [pointer]
        data [pointer]
        position [int32]
        return: [pointer]
    ]
    slist_insert_sorted: make-routine glib "g_slist_insert_sorted" [
        list [pointer]
        data [pointer]
        func [pointer]
        return: [pointer]
    ]
    slist_insert_sorted_with_data: make-routine glib "g_slist_insert_sorted_with_data" [
        list [pointer]
        data [pointer]
        func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    slist_insert_before: make-routine glib "g_slist_insert_before" [
        slist [pointer]
        sibling [pointer]
        data [pointer]
        return: [pointer]
    ]
    slist_concat: make-routine glib "g_slist_concat" [
        list1 [pointer]
        list2 [pointer]
        return: [pointer]
    ]
    slist_remove: make-routine glib "g_slist_remove" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    slist_remove_all: make-routine glib "g_slist_remove_all" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    slist_remove_link: make-routine glib "g_slist_remove_link" [
        list [pointer]
        link_ [pointer]
        return: [pointer]
    ]
    slist_delete_link: make-routine glib "g_slist_delete_link" [
        list [pointer]
        link_ [pointer]
        return: [pointer]
    ]
    slist_reverse: make-routine glib "g_slist_reverse" [
        list [pointer]
        return: [pointer]
    ]
    slist_copy: make-routine glib "g_slist_copy" [
        list [pointer]
        return: [pointer]
    ]
    slist_copy_deep: make-routine glib "g_slist_copy_deep" [
        list [pointer]
        func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    slist_nth: make-routine glib "g_slist_nth" [
        list [pointer]
        n [uint32]
        return: [pointer]
    ]
    slist_find: make-routine glib "g_slist_find" [
        list [pointer]
        data [pointer]
        return: [pointer]
    ]
    slist_find_custom: make-routine glib "g_slist_find_custom" [
        list [pointer]
        data [pointer]
        func [pointer]
        return: [pointer]
    ]
    slist_position: make-routine glib "g_slist_position" [
        list [pointer]
        llink [pointer]
        return: [int32]
    ]
    slist_index: make-routine glib "g_slist_index" [
        list [pointer]
        data [pointer]
        return: [int32]
    ]
    slist_last: make-routine glib "g_slist_last" [
        list [pointer]
        return: [pointer]
    ]
    slist_length: make-routine glib "g_slist_length" [
        list [pointer]
        return: [uint32]
    ]
    slist_foreach: make-routine glib "g_slist_foreach" [
        list [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    slist_sort: make-routine glib "g_slist_sort" [
        list [pointer]
        compare_func [pointer]
        return: [pointer]
    ]
    slist_sort_with_data: make-routine glib "g_slist_sort_with_data" [
        list [pointer]
        compare_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    slist_nth_data: make-routine glib "g_slist_nth_data" [
        list [pointer]
        n [uint32]
        return: [pointer]
    ]
    main_context_new: make-routine glib "g_main_context_new" [
        return: [pointer]
    ]
    main_context_ref: make-routine glib "g_main_context_ref" [
        context [pointer]
        return: [pointer]
    ]
    main_context_unref: make-routine glib "g_main_context_unref" [
        context [pointer]
        return: [void]
    ]
    main_context_default: make-routine glib "g_main_context_default" [
        return: [pointer]
    ]
    main_context_iteration: make-routine glib "g_main_context_iteration" [
        context [pointer]
        may_block [int32]
        return: [int32]
    ]
    main_context_pending: make-routine glib "g_main_context_pending" [
        context [pointer]
        return: [int32]
    ]
    main_context_find_source_by_id: make-routine glib "g_main_context_find_source_by_id" [
        context [pointer]
        source_id [uint32]
        return: [pointer]
    ]
    main_context_find_source_by_user_data: make-routine glib "g_main_context_find_source_by_user_data" [
        context [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    main_context_find_source_by_funcs_user_data: make-routine glib "g_main_context_find_source_by_funcs_user_data" [
        context [pointer]
        funcs [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    main_context_wakeup: make-routine glib "g_main_context_wakeup" [
        context [pointer]
        return: [void]
    ]
    main_context_acquire: make-routine glib "g_main_context_acquire" [
        context [pointer]
        return: [int32]
    ]
    main_context_release: make-routine glib "g_main_context_release" [
        context [pointer]
        return: [void]
    ]
    main_context_is_owner: make-routine glib "g_main_context_is_owner" [
        context [pointer]
        return: [int32]
    ]
    main_context_wait: make-routine glib "g_main_context_wait" [
        context [pointer]
        cond [pointer]
        mutex [pointer]
        return: [int32]
    ]
    main_context_prepare: make-routine glib "g_main_context_prepare" [
        context [pointer]
        priority [pointer]
        return: [int32]
    ]
    main_context_query: make-routine glib "g_main_context_query" [
        context [pointer]
        max_priority [int32]
        timeout_ [pointer]
        fds [pointer]
        n_fds [int32]
        return: [int32]
    ]
    main_context_check: make-routine glib "g_main_context_check" [
        context [pointer]
        max_priority [int32]
        fds [pointer]
        n_fds [int32]
        return: [int32]
    ]
    main_context_dispatch: make-routine glib "g_main_context_dispatch" [
        context [pointer]
        return: [void]
    ]
    main_context_set_poll_func: make-routine glib "g_main_context_set_poll_func" [
        context [pointer]
        func [pointer]
        return: [void]
    ]
    main_context_get_poll_func: make-routine glib "g_main_context_get_poll_func" [
        context [pointer]
        return: [pointer]
    ]
    main_context_add_poll: make-routine glib "g_main_context_add_poll" [
        context [pointer]
        fd [pointer]
        priority [int32]
        return: [void]
    ]
    main_context_remove_poll: make-routine glib "g_main_context_remove_poll" [
        context [pointer]
        fd [pointer]
        return: [void]
    ]
    main_depth: make-routine glib "g_main_depth" [
        return: [int32]
    ]
    main_current_source: make-routine glib "g_main_current_source" [
        return: [pointer]
    ]
    main_context_push_thread_default: make-routine glib "g_main_context_push_thread_default" [
        context [pointer]
        return: [void]
    ]
    main_context_pop_thread_default: make-routine glib "g_main_context_pop_thread_default" [
        context [pointer]
        return: [void]
    ]
    main_context_get_thread_default: make-routine glib "g_main_context_get_thread_default" [
        return: [pointer]
    ]
    main_context_ref_thread_default: make-routine glib "g_main_context_ref_thread_default" [
        return: [pointer]
    ]
    main_loop_new: make-routine glib "g_main_loop_new" [
        context [pointer]
        is_running [int32]
        return: [pointer]
    ]
    main_loop_run: make-routine glib "g_main_loop_run" [
        loop [pointer]
        return: [void]
    ]
    main_loop_quit: make-routine glib "g_main_loop_quit" [
        loop [pointer]
        return: [void]
    ]
    main_loop_ref: make-routine glib "g_main_loop_ref" [
        loop [pointer]
        return: [pointer]
    ]
    main_loop_unref: make-routine glib "g_main_loop_unref" [
        loop [pointer]
        return: [void]
    ]
    main_loop_is_running: make-routine glib "g_main_loop_is_running" [
        loop [pointer]
        return: [int32]
    ]
    main_loop_get_context: make-routine glib "g_main_loop_get_context" [
        loop [pointer]
        return: [pointer]
    ]
    source_new: make-routine glib "g_source_new" [
        source_funcs [pointer]
        struct_size [uint32]
        return: [pointer]
    ]
    source_ref: make-routine glib "g_source_ref" [
        source [pointer]
        return: [pointer]
    ]
    source_unref: make-routine glib "g_source_unref" [
        source [pointer]
        return: [void]
    ]
    source_attach: make-routine glib "g_source_attach" [
        source [pointer]
        context [pointer]
        return: [uint32]
    ]
    source_destroy: make-routine glib "g_source_destroy" [
        source [pointer]
        return: [void]
    ]
    source_set_priority: make-routine glib "g_source_set_priority" [
        source [pointer]
        priority [int32]
        return: [void]
    ]
    source_get_priority: make-routine glib "g_source_get_priority" [
        source [pointer]
        return: [int32]
    ]
    source_set_can_recurse: make-routine glib "g_source_set_can_recurse" [
        source [pointer]
        can_recurse [int32]
        return: [void]
    ]
    source_get_can_recurse: make-routine glib "g_source_get_can_recurse" [
        source [pointer]
        return: [int32]
    ]
    source_get_id: make-routine glib "g_source_get_id" [
        source [pointer]
        return: [uint32]
    ]
    source_get_context: make-routine glib "g_source_get_context" [
        source [pointer]
        return: [pointer]
    ]
    source_set_callback: make-routine glib "g_source_set_callback" [
        source [pointer]
        func [pointer]
        data [pointer]
        notify [pointer]
        return: [void]
    ]
    source_set_funcs: make-routine glib "g_source_set_funcs" [
        source [pointer]
        funcs [pointer]
        return: [void]
    ]
    source_is_destroyed: make-routine glib "g_source_is_destroyed" [
        source [pointer]
        return: [int32]
    ]
    source_set_name: make-routine glib "g_source_set_name" [
        source [pointer]
        name [pointer]
        return: [void]
    ]
    source_get_name: make-routine glib "g_source_get_name" [
        source [pointer]
        return: [pointer]
    ]
    source_set_name_by_id: make-routine glib "g_source_set_name_by_id" [
        tag [uint32]
        name [pointer]
        return: [void]
    ]
    source_set_ready_time: make-routine glib "g_source_set_ready_time" [
        source [pointer]
        ready_time [int64]
        return: [void]
    ]
    source_get_ready_time: make-routine glib "g_source_get_ready_time" [
        source [pointer]
        return: [int64]
    ]
    source_add_unix_fd: make-routine glib "g_source_add_unix_fd" [
        source [pointer]
        fd [int32]
        events [int32]
        return: [pointer]
    ]
    source_modify_unix_fd: make-routine glib "g_source_modify_unix_fd" [
        source [pointer]
        tag [pointer]
        new_events [int32]
        return: [void]
    ]
    source_remove_unix_fd: make-routine glib "g_source_remove_unix_fd" [
        source [pointer]
        tag [pointer]
        return: [void]
    ]
    source_query_unix_fd: make-routine glib "g_source_query_unix_fd" [
        source [pointer]
        tag [pointer]
        return: [int32]
    ]
    source_set_callback_indirect: make-routine glib "g_source_set_callback_indirect" [
        source [pointer]
        callback_data [pointer]
        callback_funcs [pointer]
        return: [void]
    ]
    source_add_poll: make-routine glib "g_source_add_poll" [
        source [pointer]
        fd [pointer]
        return: [void]
    ]
    source_remove_poll: make-routine glib "g_source_remove_poll" [
        source [pointer]
        fd [pointer]
        return: [void]
    ]
    source_add_child_source: make-routine glib "g_source_add_child_source" [
        source [pointer]
        child_source [pointer]
        return: [void]
    ]
    source_remove_child_source: make-routine glib "g_source_remove_child_source" [
        source [pointer]
        child_source [pointer]
        return: [void]
    ]
    source_get_time: make-routine glib "g_source_get_time" [
        source [pointer]
        return: [int64]
    ]
    idle_source_new: make-routine glib "g_idle_source_new" [
        return: [pointer]
    ]
    child_watch_source_new: make-routine glib "g_child_watch_source_new" [
        pid [int32]
        return: [pointer]
    ]
    timeout_source_new: make-routine glib "g_timeout_source_new" [
        interval [uint32]
        return: [pointer]
    ]
    timeout_source_new_seconds: make-routine glib "g_timeout_source_new_seconds" [
        interval [uint32]
        return: [pointer]
    ]
    get_current_time: make-routine glib "g_get_current_time" [
        result [pointer]
        return: [void]
    ]
    get_monotonic_time: make-routine glib "g_get_monotonic_time" [
        return: [int64]
    ]
    get_real_time: make-routine glib "g_get_real_time" [
        return: [int64]
    ]
    source_remove: make-routine glib "g_source_remove" [
        tag [uint32]
        return: [int32]
    ]
    source_remove_by_user_data: make-routine glib "g_source_remove_by_user_data" [
        user_data [pointer]
        return: [int32]
    ]
    source_remove_by_funcs_user_data: make-routine glib "g_source_remove_by_funcs_user_data" [
        funcs [pointer]
        user_data [pointer]
        return: [int32]
    ]
    timeout_add_full: make-routine glib "g_timeout_add_full" [
        priority [int32]
        interval [uint32]
        function [pointer]
        data [pointer]
        notify [pointer]
        return: [uint32]
    ]
    timeout_add: make-routine glib "g_timeout_add" [
        interval [uint32]
        function [pointer]
        data [pointer]
        return: [uint32]
    ]
    timeout_add_seconds_full: make-routine glib "g_timeout_add_seconds_full" [
        priority [int32]
        interval [uint32]
        function [pointer]
        data [pointer]
        notify [pointer]
        return: [uint32]
    ]
    timeout_add_seconds: make-routine glib "g_timeout_add_seconds" [
        interval [uint32]
        function [pointer]
        data [pointer]
        return: [uint32]
    ]
    child_watch_add_full: make-routine glib "g_child_watch_add_full" [
        priority [int32]
        pid [int32]
        function [pointer]
        data [pointer]
        notify [pointer]
        return: [uint32]
    ]
    child_watch_add: make-routine glib "g_child_watch_add" [
        pid [int32]
        function [pointer]
        data [pointer]
        return: [uint32]
    ]
    idle_add: make-routine glib "g_idle_add" [
        function [pointer]
        data [pointer]
        return: [uint32]
    ]
    idle_add_full: make-routine glib "g_idle_add_full" [
        priority [int32]
        function [pointer]
        data [pointer]
        notify [pointer]
        return: [uint32]
    ]
    idle_remove_by_data: make-routine glib "g_idle_remove_by_data" [
        data [pointer]
        return: [int32]
    ]
    main_context_invoke_full: make-routine glib "g_main_context_invoke_full" [
        context [pointer]
        priority [int32]
        function [pointer]
        data [pointer]
        notify [pointer]
        return: [void]
    ]
    main_context_invoke: make-routine glib "g_main_context_invoke" [
        context [pointer]
        function [pointer]
        data [pointer]
        return: [void]
    ]
    unicode_script_to_iso15924: make-routine glib "g_unicode_script_to_iso15924" [
        script [int32]
        return: [uint32]
    ]
    unicode_script_from_iso15924: make-routine glib "g_unicode_script_from_iso15924" [
        iso15924 [uint32]
        return: [int32]
    ]
    unichar_isalnum: make-routine glib "g_unichar_isalnum" [
        c [uint32]
        return: [int32]
    ]
    unichar_isalpha: make-routine glib "g_unichar_isalpha" [
        c [uint32]
        return: [int32]
    ]
    unichar_iscntrl: make-routine glib "g_unichar_iscntrl" [
        c [uint32]
        return: [int32]
    ]
    unichar_isdigit: make-routine glib "g_unichar_isdigit" [
        c [uint32]
        return: [int32]
    ]
    unichar_isgraph: make-routine glib "g_unichar_isgraph" [
        c [uint32]
        return: [int32]
    ]
    unichar_islower: make-routine glib "g_unichar_islower" [
        c [uint32]
        return: [int32]
    ]
    unichar_isprint: make-routine glib "g_unichar_isprint" [
        c [uint32]
        return: [int32]
    ]
    unichar_ispunct: make-routine glib "g_unichar_ispunct" [
        c [uint32]
        return: [int32]
    ]
    unichar_isspace: make-routine glib "g_unichar_isspace" [
        c [uint32]
        return: [int32]
    ]
    unichar_isupper: make-routine glib "g_unichar_isupper" [
        c [uint32]
        return: [int32]
    ]
    unichar_isxdigit: make-routine glib "g_unichar_isxdigit" [
        c [uint32]
        return: [int32]
    ]
    unichar_istitle: make-routine glib "g_unichar_istitle" [
        c [uint32]
        return: [int32]
    ]
    unichar_isdefined: make-routine glib "g_unichar_isdefined" [
        c [uint32]
        return: [int32]
    ]
    unichar_iswide: make-routine glib "g_unichar_iswide" [
        c [uint32]
        return: [int32]
    ]
    unichar_iswide_cjk: make-routine glib "g_unichar_iswide_cjk" [
        c [uint32]
        return: [int32]
    ]
    unichar_iszerowidth: make-routine glib "g_unichar_iszerowidth" [
        c [uint32]
        return: [int32]
    ]
    unichar_ismark: make-routine glib "g_unichar_ismark" [
        c [uint32]
        return: [int32]
    ]
    unichar_toupper: make-routine glib "g_unichar_toupper" [
        c [uint32]
        return: [uint32]
    ]
    unichar_tolower: make-routine glib "g_unichar_tolower" [
        c [uint32]
        return: [uint32]
    ]
    unichar_totitle: make-routine glib "g_unichar_totitle" [
        c [uint32]
        return: [uint32]
    ]
    unichar_digit_value: make-routine glib "g_unichar_digit_value" [
        c [uint32]
        return: [int32]
    ]
    unichar_xdigit_value: make-routine glib "g_unichar_xdigit_value" [
        c [uint32]
        return: [int32]
    ]
    unichar_type: make-routine glib "g_unichar_type" [
        c [uint32]
        return: [int32]
    ]
    unichar_break_type: make-routine glib "g_unichar_break_type" [
        c [uint32]
        return: [int32]
    ]
    unichar_combining_class: make-routine glib "g_unichar_combining_class" [
        uc [uint32]
        return: [int32]
    ]
    unichar_get_mirror_char: make-routine glib "g_unichar_get_mirror_char" [
        ch [uint32]
        mirrored_ch [pointer]
        return: [int32]
    ]
    unichar_get_script: make-routine glib "g_unichar_get_script" [
        ch [uint32]
        return: [int32]
    ]
    unichar_validate: make-routine glib "g_unichar_validate" [
        ch [uint32]
        return: [int32]
    ]
    unichar_compose: make-routine glib "g_unichar_compose" [
        a [uint32]
        b [uint32]
        ch [pointer]
        return: [int32]
    ]
    unichar_decompose: make-routine glib "g_unichar_decompose" [
        ch [uint32]
        a [pointer]
        b [pointer]
        return: [int32]
    ]
    unichar_fully_decompose: make-routine glib "g_unichar_fully_decompose" [
        ch [uint32]
        compat [int32]
        result [pointer]
        result_len [uint64]
        return: [uint64]
    ]
    unicode_canonical_ordering: make-routine glib "g_unicode_canonical_ordering" [
        string [pointer]
        len [uint64]
        return: [void]
    ]
    utf8_get_char: make-routine glib "g_utf8_get_char" [
        p [pointer]
        return: [uint32]
    ]
    utf8_get_char_validated: make-routine glib "g_utf8_get_char_validated" [
        p [pointer]
        max_len [int64]
        return: [uint32]
    ]
    utf8_offset_to_pointer: make-routine glib "g_utf8_offset_to_pointer" [
        str [pointer]
        offset [int64]
        return: [pointer]
    ]
    utf8_pointer_to_offset: make-routine glib "g_utf8_pointer_to_offset" [
        str [pointer]
        pos [pointer]
        return: [int64]
    ]
    utf8_prev_char: make-routine glib "g_utf8_prev_char" [
        p [pointer]
        return: [pointer]
    ]
    utf8_find_next_char: make-routine glib "g_utf8_find_next_char" [
        p [pointer]
        end [pointer]
        return: [pointer]
    ]
    utf8_find_prev_char: make-routine glib "g_utf8_find_prev_char" [
        str [pointer]
        p [pointer]
        return: [pointer]
    ]
    utf8_strlen: make-routine glib "g_utf8_strlen" [
        p [pointer]
        max [int64]
        return: [int64]
    ]
    utf8_substring: make-routine glib "g_utf8_substring" [
        str [pointer]
        start_pos [int64]
        end_pos [int64]
        return: [pointer]
    ]
    utf8_strncpy: make-routine glib "g_utf8_strncpy" [
        dest [pointer]
        src [pointer]
        n [uint64]
        return: [pointer]
    ]
    utf8_strchr: make-routine glib "g_utf8_strchr" [
        p [pointer]
        len [int64]
        c [uint32]
        return: [pointer]
    ]
    utf8_strrchr: make-routine glib "g_utf8_strrchr" [
        p [pointer]
        len [int64]
        c [uint32]
        return: [pointer]
    ]
    utf8_strreverse: make-routine glib "g_utf8_strreverse" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    utf8_to_utf16: make-routine glib "g_utf8_to_utf16" [
        str [pointer]
        len [int64]
        items_read [pointer]
        items_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    utf8_to_ucs4: make-routine glib "g_utf8_to_ucs4" [
        str [pointer]
        len [int64]
        items_read [pointer]
        items_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    utf8_to_ucs4_fast: make-routine glib "g_utf8_to_ucs4_fast" [
        str [pointer]
        len [int64]
        items_written [pointer]
        return: [pointer]
    ]
    utf16_to_ucs4: make-routine glib "g_utf16_to_ucs4" [
        str [pointer]
        len [int64]
        items_read [pointer]
        items_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    utf16_to_utf8: make-routine glib "g_utf16_to_utf8" [
        str [pointer]
        len [int64]
        items_read [pointer]
        items_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    ucs4_to_utf16: make-routine glib "g_ucs4_to_utf16" [
        str [pointer]
        len [int64]
        items_read [pointer]
        items_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    ucs4_to_utf8: make-routine glib "g_ucs4_to_utf8" [
        str [pointer]
        len [int64]
        items_read [pointer]
        items_written [pointer]
        error [pointer]
        return: [pointer]
    ]
    unichar_to_utf8: make-routine glib "g_unichar_to_utf8" [
        c [uint32]
        outbuf [pointer]
        return: [int32]
    ]
    utf8_validate: make-routine glib "g_utf8_validate" [
        str [pointer]
        max_len [int64]
        end [pointer]
        return: [int32]
    ]
    utf8_strup: make-routine glib "g_utf8_strup" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    utf8_strdown: make-routine glib "g_utf8_strdown" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    utf8_casefold: make-routine glib "g_utf8_casefold" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    utf8_normalize: make-routine glib "g_utf8_normalize" [
        str [pointer]
        len [int64]
        mode [int32]
        return: [pointer]
    ]
    utf8_collate: make-routine glib "g_utf8_collate" [
        str1 [pointer]
        str2 [pointer]
        return: [int32]
    ]
    utf8_collate_key: make-routine glib "g_utf8_collate_key" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    utf8_collate_key_for_filename: make-routine glib "g_utf8_collate_key_for_filename" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    get_user_name: make-routine glib "g_get_user_name" [
        return: [pointer]
    ]
    get_real_name: make-routine glib "g_get_real_name" [
        return: [pointer]
    ]
    get_home_dir: make-routine glib "g_get_home_dir" [
        return: [pointer]
    ]
    get_tmp_dir: make-routine glib "g_get_tmp_dir" [
        return: [pointer]
    ]
    get_host_name: make-routine glib "g_get_host_name" [
        return: [pointer]
    ]
    get_prgname: make-routine glib "g_get_prgname" [
        return: [pointer]
    ]
    set_prgname: make-routine glib "g_set_prgname" [
        prgname [pointer]
        return: [void]
    ]
    get_application_name: make-routine glib "g_get_application_name" [
        return: [pointer]
    ]
    set_application_name: make-routine glib "g_set_application_name" [
        application_name [pointer]
        return: [void]
    ]
    reload_user_special_dirs_cache: make-routine glib "g_reload_user_special_dirs_cache" [
        return: [void]
    ]
    get_user_data_dir: make-routine glib "g_get_user_data_dir" [
        return: [pointer]
    ]
    get_user_config_dir: make-routine glib "g_get_user_config_dir" [
        return: [pointer]
    ]
    get_user_cache_dir: make-routine glib "g_get_user_cache_dir" [
        return: [pointer]
    ]
    get_system_data_dirs: make-routine glib "g_get_system_data_dirs" [
        return: [pointer]
    ]
    get_system_config_dirs: make-routine glib "g_get_system_config_dirs" [
        return: [pointer]
    ]
    get_user_runtime_dir: make-routine glib "g_get_user_runtime_dir" [
        return: [pointer]
    ]
    get_user_special_dir: make-routine glib "g_get_user_special_dir" [
        directory [int32]
        return: [pointer]
    ]
    parse_debug_string: make-routine glib "g_parse_debug_string" [
        string [pointer]
        keys [pointer]
        nkeys [uint32]
        return: [uint32]
    ]
    snprintf: make-routine glib "g_snprintf" [
        string [pointer]
        n [uint64]
        format [pointer]
        ...
        return: [int32]
    ]
    vsnprintf: make-routine glib "g_vsnprintf" [
        string [pointer]
        n [uint64]
        format [pointer]
        args [int32]
        return: [int32]
    ]
    nullify_pointer: make-routine glib "g_nullify_pointer" [
        nullify_location [pointer]
        return: [void]
    ]
    format_size_full: make-routine glib "g_format_size_full" [
        size [uint64]
        flags [int32]
        return: [pointer]
    ]
    format_size: make-routine glib "g_format_size" [
        size [uint64]
        return: [pointer]
    ]
    find_program_in_path: make-routine glib "g_find_program_in_path" [
        program [pointer]
        return: [pointer]
    ]
    string_new: make-routine glib "g_string_new" [
        init [pointer]
        return: [pointer]
    ]
    string_new_len: make-routine glib "g_string_new_len" [
        init [pointer]
        len [int64]
        return: [pointer]
    ]
    string_sized_new: make-routine glib "g_string_sized_new" [
        dfl_size [uint64]
        return: [pointer]
    ]
    string_free: make-routine glib "g_string_free" [
        string [pointer]
        free_segment [int32]
        return: [pointer]
    ]
    string_free_to_bytes: make-routine glib "g_string_free_to_bytes" [
        string [pointer]
        return: [pointer]
    ]
    string_equal: make-routine glib "g_string_equal" [
        v [pointer]
        v2 [pointer]
        return: [int32]
    ]
    string_hash: make-routine glib "g_string_hash" [
        str [pointer]
        return: [uint32]
    ]
    string_assign: make-routine glib "g_string_assign" [
        string [pointer]
        rval [pointer]
        return: [pointer]
    ]
    string_truncate: make-routine glib "g_string_truncate" [
        string [pointer]
        len [uint64]
        return: [pointer]
    ]
    string_set_size: make-routine glib "g_string_set_size" [
        string [pointer]
        len [uint64]
        return: [pointer]
    ]
    string_insert_len: make-routine glib "g_string_insert_len" [
        string [pointer]
        pos [int64]
        val [pointer]
        len [int64]
        return: [pointer]
    ]
    string_append: make-routine glib "g_string_append" [
        string [pointer]
        val [pointer]
        return: [pointer]
    ]
    string_append_len: make-routine glib "g_string_append_len" [
        string [pointer]
        val [pointer]
        len [int64]
        return: [pointer]
    ]
    string_append_c: make-routine glib "g_string_append_c" [
        string [pointer]
        c [int8]
        return: [pointer]
    ]
    string_append_unichar: make-routine glib "g_string_append_unichar" [
        string [pointer]
        wc [uint32]
        return: [pointer]
    ]
    string_prepend: make-routine glib "g_string_prepend" [
        string [pointer]
        val [pointer]
        return: [pointer]
    ]
    string_prepend_c: make-routine glib "g_string_prepend_c" [
        string [pointer]
        c [int8]
        return: [pointer]
    ]
    string_prepend_unichar: make-routine glib "g_string_prepend_unichar" [
        string [pointer]
        wc [uint32]
        return: [pointer]
    ]
    string_prepend_len: make-routine glib "g_string_prepend_len" [
        string [pointer]
        val [pointer]
        len [int64]
        return: [pointer]
    ]
    string_insert: make-routine glib "g_string_insert" [
        string [pointer]
        pos [int64]
        val [pointer]
        return: [pointer]
    ]
    string_insert_c: make-routine glib "g_string_insert_c" [
        string [pointer]
        pos [int64]
        c [int8]
        return: [pointer]
    ]
    string_insert_unichar: make-routine glib "g_string_insert_unichar" [
        string [pointer]
        pos [int64]
        wc [uint32]
        return: [pointer]
    ]
    string_overwrite: make-routine glib "g_string_overwrite" [
        string [pointer]
        pos [uint64]
        val [pointer]
        return: [pointer]
    ]
    string_overwrite_len: make-routine glib "g_string_overwrite_len" [
        string [pointer]
        pos [uint64]
        val [pointer]
        len [int64]
        return: [pointer]
    ]
    string_erase: make-routine glib "g_string_erase" [
        string [pointer]
        pos [int64]
        len [int64]
        return: [pointer]
    ]
    string_ascii_down: make-routine glib "g_string_ascii_down" [
        string [pointer]
        return: [pointer]
    ]
    string_ascii_up: make-routine glib "g_string_ascii_up" [
        string [pointer]
        return: [pointer]
    ]
    string_vprintf: make-routine glib "g_string_vprintf" [
        string [pointer]
        format [pointer]
        args [int32]
        return: [void]
    ]
    string_printf: make-routine glib "g_string_printf" [
        string [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    string_append_vprintf: make-routine glib "g_string_append_vprintf" [
        string [pointer]
        format [pointer]
        args [int32]
        return: [void]
    ]
    string_append_printf: make-routine glib "g_string_append_printf" [
        string [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    string_append_uri_escaped: make-routine glib "g_string_append_uri_escaped" [
        string [pointer]
        unescaped [pointer]
        reserved_chars_allowed [pointer]
        allow_utf8 [int32]
        return: [pointer]
    ]
    io_channel_init: make-routine glib "g_io_channel_init" [
        channel [pointer]
        return: [void]
    ]
    io_channel_ref: make-routine glib "g_io_channel_ref" [
        channel [pointer]
        return: [pointer]
    ]
    io_channel_unref: make-routine glib "g_io_channel_unref" [
        channel [pointer]
        return: [void]
    ]
    io_channel_shutdown: make-routine glib "g_io_channel_shutdown" [
        channel [pointer]
        flush [int32]
        err [pointer]
        return: [int32]
    ]
    io_add_watch_full: make-routine glib "g_io_add_watch_full" [
        channel [pointer]
        priority [int32]
        condition [int32]
        func [pointer]
        user_data [pointer]
        notify [pointer]
        return: [uint32]
    ]
    io_create_watch: make-routine glib "g_io_create_watch" [
        channel [pointer]
        condition [int32]
        return: [pointer]
    ]
    io_add_watch: make-routine glib "g_io_add_watch" [
        channel [pointer]
        condition [int32]
        func [pointer]
        user_data [pointer]
        return: [uint32]
    ]
    io_channel_set_buffer_size: make-routine glib "g_io_channel_set_buffer_size" [
        channel [pointer]
        size [uint64]
        return: [void]
    ]
    io_channel_get_buffer_size: make-routine glib "g_io_channel_get_buffer_size" [
        channel [pointer]
        return: [uint64]
    ]
    io_channel_get_buffer_condition: make-routine glib "g_io_channel_get_buffer_condition" [
        channel [pointer]
        return: [int32]
    ]
    io_channel_set_flags: make-routine glib "g_io_channel_set_flags" [
        channel [pointer]
        flags [int32]
        error [pointer]
        return: [int32]
    ]
    io_channel_get_flags: make-routine glib "g_io_channel_get_flags" [
        channel [pointer]
        return: [int32]
    ]
    io_channel_set_line_term: make-routine glib "g_io_channel_set_line_term" [
        channel [pointer]
        line_term [pointer]
        length [int32]
        return: [void]
    ]
    io_channel_get_line_term: make-routine glib "g_io_channel_get_line_term" [
        channel [pointer]
        length [pointer]
        return: [pointer]
    ]
    io_channel_set_buffered: make-routine glib "g_io_channel_set_buffered" [
        channel [pointer]
        buffered [int32]
        return: [void]
    ]
    io_channel_get_buffered: make-routine glib "g_io_channel_get_buffered" [
        channel [pointer]
        return: [int32]
    ]
    io_channel_set_encoding: make-routine glib "g_io_channel_set_encoding" [
        channel [pointer]
        encoding [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_get_encoding: make-routine glib "g_io_channel_get_encoding" [
        channel [pointer]
        return: [pointer]
    ]
    io_channel_set_close_on_unref: make-routine glib "g_io_channel_set_close_on_unref" [
        channel [pointer]
        do_close [int32]
        return: [void]
    ]
    io_channel_get_close_on_unref: make-routine glib "g_io_channel_get_close_on_unref" [
        channel [pointer]
        return: [int32]
    ]
    io_channel_flush: make-routine glib "g_io_channel_flush" [
        channel [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_read_line: make-routine glib "g_io_channel_read_line" [
        channel [pointer]
        str_return [pointer]
        length [pointer]
        terminator_pos [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_read_line_string: make-routine glib "g_io_channel_read_line_string" [
        channel [pointer]
        buffer [pointer]
        terminator_pos [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_read_to_end: make-routine glib "g_io_channel_read_to_end" [
        channel [pointer]
        str_return [pointer]
        length [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_read_chars: make-routine glib "g_io_channel_read_chars" [
        channel [pointer]
        buf [pointer]
        count [uint64]
        bytes_read [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_read_unichar: make-routine glib "g_io_channel_read_unichar" [
        channel [pointer]
        thechar [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_write_chars: make-routine glib "g_io_channel_write_chars" [
        channel [pointer]
        buf [pointer]
        count [int64]
        bytes_written [pointer]
        error [pointer]
        return: [int32]
    ]
    io_channel_write_unichar: make-routine glib "g_io_channel_write_unichar" [
        channel [pointer]
        thechar [uint32]
        error [pointer]
        return: [int32]
    ]
    io_channel_seek_position: make-routine glib "g_io_channel_seek_position" [
        channel [pointer]
        offset [int64]
        type [int32]
        error [pointer]
        return: [int32]
    ]
    io_channel_new_file: make-routine glib "g_io_channel_new_file" [
        filename [pointer]
        mode [pointer]
        error [pointer]
        return: [pointer]
    ]
    io_channel_error_quark: make-routine glib "g_io_channel_error_quark" [
        return: [uint32]
    ]
    io_channel_error_from_errno: make-routine glib "g_io_channel_error_from_errno" [
        en [int32]
        return: [int32]
    ]
    io_channel_unix_new: make-routine glib "g_io_channel_unix_new" [
        fd [int32]
        return: [pointer]
    ]
    io_channel_unix_get_fd: make-routine glib "g_io_channel_unix_get_fd" [
        channel [pointer]
        return: [int32]
    ]
    key_file_error_quark: make-routine glib "g_key_file_error_quark" [
        return: [uint32]
    ]
    key_file_new: make-routine glib "g_key_file_new" [
        return: [pointer]
    ]
    key_file_ref: make-routine glib "g_key_file_ref" [
        key_file [pointer]
        return: [pointer]
    ]
    key_file_unref: make-routine glib "g_key_file_unref" [
        key_file [pointer]
        return: [void]
    ]
    key_file_free: make-routine glib "g_key_file_free" [
        key_file [pointer]
        return: [void]
    ]
    key_file_set_list_separator: make-routine glib "g_key_file_set_list_separator" [
        key_file [pointer]
        separator [int8]
        return: [void]
    ]
    key_file_load_from_file: make-routine glib "g_key_file_load_from_file" [
        key_file [pointer]
        file [pointer]
        flags [int32]
        error [pointer]
        return: [int32]
    ]
    key_file_load_from_data: make-routine glib "g_key_file_load_from_data" [
        key_file [pointer]
        data [pointer]
        length [uint64]
        flags [int32]
        error [pointer]
        return: [int32]
    ]
    key_file_load_from_dirs: make-routine glib "g_key_file_load_from_dirs" [
        key_file [pointer]
        file [pointer]
        search_dirs [pointer]
        full_path [pointer]
        flags [int32]
        error [pointer]
        return: [int32]
    ]
    key_file_load_from_data_dirs: make-routine glib "g_key_file_load_from_data_dirs" [
        key_file [pointer]
        file [pointer]
        full_path [pointer]
        flags [int32]
        error [pointer]
        return: [int32]
    ]
    key_file_to_data: make-routine glib "g_key_file_to_data" [
        key_file [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_save_to_file: make-routine glib "g_key_file_save_to_file" [
        key_file [pointer]
        filename [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_get_start_group: make-routine glib "g_key_file_get_start_group" [
        key_file [pointer]
        return: [pointer]
    ]
    key_file_get_groups: make-routine glib "g_key_file_get_groups" [
        key_file [pointer]
        length [pointer]
        return: [pointer]
    ]
    key_file_get_keys: make-routine glib "g_key_file_get_keys" [
        key_file [pointer]
        group_name [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_has_group: make-routine glib "g_key_file_has_group" [
        key_file [pointer]
        group_name [pointer]
        return: [int32]
    ]
    key_file_has_key: make-routine glib "g_key_file_has_key" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_get_value: make-routine glib "g_key_file_get_value" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_value: make-routine glib "g_key_file_set_value" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        value [pointer]
        return: [void]
    ]
    key_file_get_string: make-routine glib "g_key_file_get_string" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_string: make-routine glib "g_key_file_set_string" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        string [pointer]
        return: [void]
    ]
    key_file_get_locale_string: make-routine glib "g_key_file_get_locale_string" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        locale [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_locale_string: make-routine glib "g_key_file_set_locale_string" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        locale [pointer]
        string [pointer]
        return: [void]
    ]
    key_file_get_boolean: make-routine glib "g_key_file_get_boolean" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_set_boolean: make-routine glib "g_key_file_set_boolean" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        value [int32]
        return: [void]
    ]
    key_file_get_integer: make-routine glib "g_key_file_get_integer" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_set_integer: make-routine glib "g_key_file_set_integer" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        value [int32]
        return: [void]
    ]
    key_file_get_int64: make-routine glib "g_key_file_get_int64" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [int64]
    ]
    key_file_set_int64: make-routine glib "g_key_file_set_int64" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        value [int64]
        return: [void]
    ]
    key_file_get_uint64: make-routine glib "g_key_file_get_uint64" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [uint64]
    ]
    key_file_set_uint64: make-routine glib "g_key_file_set_uint64" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        value [uint64]
        return: [void]
    ]
    key_file_get_double: make-routine glib "g_key_file_get_double" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [double]
    ]
    key_file_set_double: make-routine glib "g_key_file_set_double" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        value [double]
        return: [void]
    ]
    key_file_get_string_list: make-routine glib "g_key_file_get_string_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_string_list: make-routine glib "g_key_file_set_string_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        list [pointer]
        length [uint64]
        return: [void]
    ]
    key_file_get_locale_string_list: make-routine glib "g_key_file_get_locale_string_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        locale [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_locale_string_list: make-routine glib "g_key_file_set_locale_string_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        locale [pointer]
        list [pointer]
        length [uint64]
        return: [void]
    ]
    key_file_get_boolean_list: make-routine glib "g_key_file_get_boolean_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_boolean_list: make-routine glib "g_key_file_set_boolean_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        list [pointer]
        length [uint64]
        return: [void]
    ]
    key_file_get_integer_list: make-routine glib "g_key_file_get_integer_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_double_list: make-routine glib "g_key_file_set_double_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        list [pointer]
        length [uint64]
        return: [void]
    ]
    key_file_get_double_list: make-routine glib "g_key_file_get_double_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_set_integer_list: make-routine glib "g_key_file_set_integer_list" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        list [pointer]
        length [uint64]
        return: [void]
    ]
    key_file_set_comment: make-routine glib "g_key_file_set_comment" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        comment [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_get_comment: make-routine glib "g_key_file_get_comment" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [pointer]
    ]
    key_file_remove_comment: make-routine glib "g_key_file_remove_comment" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_remove_key: make-routine glib "g_key_file_remove_key" [
        key_file [pointer]
        group_name [pointer]
        key [pointer]
        error [pointer]
        return: [int32]
    ]
    key_file_remove_group: make-routine glib "g_key_file_remove_group" [
        key_file [pointer]
        group_name [pointer]
        error [pointer]
        return: [int32]
    ]
    mapped_file_new: make-routine glib "g_mapped_file_new" [
        filename [pointer]
        writable [int32]
        error [pointer]
        return: [pointer]
    ]
    mapped_file_new_from_fd: make-routine glib "g_mapped_file_new_from_fd" [
        fd [int32]
        writable [int32]
        error [pointer]
        return: [pointer]
    ]
    mapped_file_get_length: make-routine glib "g_mapped_file_get_length" [
        file [pointer]
        return: [uint64]
    ]
    mapped_file_get_contents: make-routine glib "g_mapped_file_get_contents" [
        file [pointer]
        return: [pointer]
    ]
    mapped_file_get_bytes: make-routine glib "g_mapped_file_get_bytes" [
        file [pointer]
        return: [pointer]
    ]
    mapped_file_ref: make-routine glib "g_mapped_file_ref" [
        file [pointer]
        return: [pointer]
    ]
    mapped_file_unref: make-routine glib "g_mapped_file_unref" [
        file [pointer]
        return: [void]
    ]
    markup_error_quark: make-routine glib "g_markup_error_quark" [
        return: [uint32]
    ]
    markup_parse_context_new: make-routine glib "g_markup_parse_context_new" [
        parser [pointer]
        flags [int32]
        user_data [pointer]
        user_data_dnotify [pointer]
        return: [pointer]
    ]
    markup_parse_context_ref: make-routine glib "g_markup_parse_context_ref" [
        context [pointer]
        return: [pointer]
    ]
    markup_parse_context_unref: make-routine glib "g_markup_parse_context_unref" [
        context [pointer]
        return: [void]
    ]
    markup_parse_context_free: make-routine glib "g_markup_parse_context_free" [
        context [pointer]
        return: [void]
    ]
    markup_parse_context_parse: make-routine glib "g_markup_parse_context_parse" [
        context [pointer]
        text [pointer]
        text_len [int64]
        error [pointer]
        return: [int32]
    ]
    markup_parse_context_push: make-routine glib "g_markup_parse_context_push" [
        context [pointer]
        parser [pointer]
        user_data [pointer]
        return: [void]
    ]
    markup_parse_context_pop: make-routine glib "g_markup_parse_context_pop" [
        context [pointer]
        return: [pointer]
    ]
    markup_parse_context_end_parse: make-routine glib "g_markup_parse_context_end_parse" [
        context [pointer]
        error [pointer]
        return: [int32]
    ]
    markup_parse_context_get_element: make-routine glib "g_markup_parse_context_get_element" [
        context [pointer]
        return: [pointer]
    ]
    markup_parse_context_get_element_stack: make-routine glib "g_markup_parse_context_get_element_stack" [
        context [pointer]
        return: [pointer]
    ]
    markup_parse_context_get_position: make-routine glib "g_markup_parse_context_get_position" [
        context [pointer]
        line_number [pointer]
        char_number [pointer]
        return: [void]
    ]
    markup_parse_context_get_user_data: make-routine glib "g_markup_parse_context_get_user_data" [
        context [pointer]
        return: [pointer]
    ]
    markup_escape_text: make-routine glib "g_markup_escape_text" [
        text [pointer]
        length [int64]
        return: [pointer]
    ]
    markup_printf_escaped: make-routine glib "g_markup_printf_escaped" [
        format [pointer]
        ...
        return: [pointer]
    ]
    markup_vprintf_escaped: make-routine glib "g_markup_vprintf_escaped" [
        format [pointer]
        args [int32]
        return: [pointer]
    ]
    markup_collect_attributes: make-routine glib "g_markup_collect_attributes" [
        element_name [pointer]
        attribute_names [pointer]
        attribute_values [pointer]
        error [pointer]
        first_type [int32]
        first_attr [pointer]
        ...
        return: [int32]
    ]
    printf_string_upper_bound: make-routine glib "g_printf_string_upper_bound" [
        format [pointer]
        args [int32]
        return: [uint64]
    ]
    log_set_handler: make-routine glib "g_log_set_handler" [
        log_domain [pointer]
        log_levels [int32]
        log_func [pointer]
        user_data [pointer]
        return: [uint32]
    ]
    log_remove_handler: make-routine glib "g_log_remove_handler" [
        log_domain [pointer]
        handler_id [uint32]
        return: [void]
    ]
    log_default_handler: make-routine glib "g_log_default_handler" [
        log_domain [pointer]
        log_level [int32]
        message [pointer]
        unused_data [pointer]
        return: [void]
    ]
    log_set_default_handler: make-routine glib "g_log_set_default_handler" [
        log_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    log: make-routine glib "g_log" [
        log_domain [pointer]
        log_level [int32]
        format [pointer]
        ...
        return: [void]
    ]
    logv: make-routine glib "g_logv" [
        log_domain [pointer]
        log_level [int32]
        format [pointer]
        args [int32]
        return: [void]
    ]
    log_set_fatal_mask: make-routine glib "g_log_set_fatal_mask" [
        log_domain [pointer]
        fatal_mask [int32]
        return: [int32]
    ]
    log_set_always_fatal: make-routine glib "g_log_set_always_fatal" [
        fatal_mask [int32]
        return: [int32]
    ]
    return_if_fail_warning: make-routine glib "g_return_if_fail_warning" [
        log_domain [pointer]
        pretty_function [pointer]
        expression [pointer]
        return: [void]
    ]
    warn_message: make-routine glib "g_warn_message" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        warnexpr [pointer]
        return: [void]
    ]
    print: make-routine glib "g_print" [
        format [pointer]
        ...
        return: [void]
    ]
    set_print_handler: make-routine glib "g_set_print_handler" [
        func [pointer]
        return: [pointer]
    ]
    printerr: make-routine glib "g_printerr" [
        format [pointer]
        ...
        return: [void]
    ]
    set_printerr_handler: make-routine glib "g_set_printerr_handler" [
        func [pointer]
        return: [pointer]
    ]
    option_error_quark: make-routine glib "g_option_error_quark" [
        return: [uint32]
    ]
    option_context_new: make-routine glib "g_option_context_new" [
        parameter_string [pointer]
        return: [pointer]
    ]
    option_context_set_summary: make-routine glib "g_option_context_set_summary" [
        context [pointer]
        summary [pointer]
        return: [void]
    ]
    option_context_get_summary: make-routine glib "g_option_context_get_summary" [
        context [pointer]
        return: [pointer]
    ]
    option_context_set_description: make-routine glib "g_option_context_set_description" [
        context [pointer]
        description [pointer]
        return: [void]
    ]
    option_context_get_description: make-routine glib "g_option_context_get_description" [
        context [pointer]
        return: [pointer]
    ]
    option_context_free: make-routine glib "g_option_context_free" [
        context [pointer]
        return: [void]
    ]
    option_context_set_help_enabled: make-routine glib "g_option_context_set_help_enabled" [
        context [pointer]
        help_enabled [int32]
        return: [void]
    ]
    option_context_get_help_enabled: make-routine glib "g_option_context_get_help_enabled" [
        context [pointer]
        return: [int32]
    ]
    option_context_set_ignore_unknown_options: make-routine glib "g_option_context_set_ignore_unknown_options" [
        context [pointer]
        ignore_unknown [int32]
        return: [void]
    ]
    option_context_get_ignore_unknown_options: make-routine glib "g_option_context_get_ignore_unknown_options" [
        context [pointer]
        return: [int32]
    ]
    option_context_add_main_entries: make-routine glib "g_option_context_add_main_entries" [
        context [pointer]
        entries [pointer]
        translation_domain [pointer]
        return: [void]
    ]
    option_context_parse: make-routine glib "g_option_context_parse" [
        context [pointer]
        argc [pointer]
        argv [pointer]
        error [pointer]
        return: [int32]
    ]
    option_context_parse_strv: make-routine glib "g_option_context_parse_strv" [
        context [pointer]
        arguments [pointer]
        error [pointer]
        return: [int32]
    ]
    option_context_set_translate_func: make-routine glib "g_option_context_set_translate_func" [
        context [pointer]
        func [pointer]
        data [pointer]
        destroy_notify [pointer]
        return: [void]
    ]
    option_context_set_translation_domain: make-routine glib "g_option_context_set_translation_domain" [
        context [pointer]
        domain [pointer]
        return: [void]
    ]
    option_context_add_group: make-routine glib "g_option_context_add_group" [
        context [pointer]
        group [pointer]
        return: [void]
    ]
    option_context_set_main_group: make-routine glib "g_option_context_set_main_group" [
        context [pointer]
        group [pointer]
        return: [void]
    ]
    option_context_get_main_group: make-routine glib "g_option_context_get_main_group" [
        context [pointer]
        return: [pointer]
    ]
    option_context_get_help: make-routine glib "g_option_context_get_help" [
        context [pointer]
        main_help [int32]
        group [pointer]
        return: [pointer]
    ]
    option_group_new: make-routine glib "g_option_group_new" [
        name [pointer]
        description [pointer]
        help_description [pointer]
        user_data [pointer]
        destroy [pointer]
        return: [pointer]
    ]
    option_group_set_parse_hooks: make-routine glib "g_option_group_set_parse_hooks" [
        group [pointer]
        pre_parse_func [pointer]
        post_parse_func [pointer]
        return: [void]
    ]
    option_group_set_error_hook: make-routine glib "g_option_group_set_error_hook" [
        group [pointer]
        error_func [pointer]
        return: [void]
    ]
    option_group_free: make-routine glib "g_option_group_free" [
        group [pointer]
        return: [void]
    ]
    option_group_add_entries: make-routine glib "g_option_group_add_entries" [
        group [pointer]
        entries [pointer]
        return: [void]
    ]
    option_group_set_translate_func: make-routine glib "g_option_group_set_translate_func" [
        group [pointer]
        func [pointer]
        data [pointer]
        destroy_notify [pointer]
        return: [void]
    ]
    option_group_set_translation_domain: make-routine glib "g_option_group_set_translation_domain" [
        group [pointer]
        domain [pointer]
        return: [void]
    ]
    pattern_spec_new: make-routine glib "g_pattern_spec_new" [
        pattern [pointer]
        return: [pointer]
    ]
    pattern_spec_free: make-routine glib "g_pattern_spec_free" [
        pspec [pointer]
        return: [void]
    ]
    pattern_spec_equal: make-routine glib "g_pattern_spec_equal" [
        pspec1 [pointer]
        pspec2 [pointer]
        return: [int32]
    ]
    pattern_match: make-routine glib "g_pattern_match" [
        pspec [pointer]
        string_length [uint32]
        string [pointer]
        string_reversed [pointer]
        return: [int32]
    ]
    pattern_match_string: make-routine glib "g_pattern_match_string" [
        pspec [pointer]
        string [pointer]
        return: [int32]
    ]
    pattern_match_simple: make-routine glib "g_pattern_match_simple" [
        pattern [pointer]
        string [pointer]
        return: [int32]
    ]
    spaced_primes_closest: make-routine glib "g_spaced_primes_closest" [
        num [uint32]
        return: [uint32]
    ]
    qsort_with_data: make-routine glib "g_qsort_with_data" [
        pbase [pointer]
        total_elems [int32]
        size [uint64]
        compare_func [pointer]
        user_data [pointer]
        return: [void]
    ]
    queue_new: make-routine glib "g_queue_new" [
        return: [pointer]
    ]
    queue_free: make-routine glib "g_queue_free" [
        queue [pointer]
        return: [void]
    ]
    queue_free_full: make-routine glib "g_queue_free_full" [
        queue [pointer]
        free_func [pointer]
        return: [void]
    ]
    queue_init: make-routine glib "g_queue_init" [
        queue [pointer]
        return: [void]
    ]
    queue_clear: make-routine glib "g_queue_clear" [
        queue [pointer]
        return: [void]
    ]
    queue_is_empty: make-routine glib "g_queue_is_empty" [
        queue [pointer]
        return: [int32]
    ]
    queue_get_length: make-routine glib "g_queue_get_length" [
        queue [pointer]
        return: [uint32]
    ]
    queue_reverse: make-routine glib "g_queue_reverse" [
        queue [pointer]
        return: [void]
    ]
    queue_copy: make-routine glib "g_queue_copy" [
        queue [pointer]
        return: [pointer]
    ]
    queue_foreach: make-routine glib "g_queue_foreach" [
        queue [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    queue_find: make-routine glib "g_queue_find" [
        queue [pointer]
        data [pointer]
        return: [pointer]
    ]
    queue_find_custom: make-routine glib "g_queue_find_custom" [
        queue [pointer]
        data [pointer]
        func [pointer]
        return: [pointer]
    ]
    queue_sort: make-routine glib "g_queue_sort" [
        queue [pointer]
        compare_func [pointer]
        user_data [pointer]
        return: [void]
    ]
    queue_push_head: make-routine glib "g_queue_push_head" [
        queue [pointer]
        data [pointer]
        return: [void]
    ]
    queue_push_tail: make-routine glib "g_queue_push_tail" [
        queue [pointer]
        data [pointer]
        return: [void]
    ]
    queue_push_nth: make-routine glib "g_queue_push_nth" [
        queue [pointer]
        data [pointer]
        n [int32]
        return: [void]
    ]
    queue_pop_head: make-routine glib "g_queue_pop_head" [
        queue [pointer]
        return: [pointer]
    ]
    queue_pop_tail: make-routine glib "g_queue_pop_tail" [
        queue [pointer]
        return: [pointer]
    ]
    queue_pop_nth: make-routine glib "g_queue_pop_nth" [
        queue [pointer]
        n [uint32]
        return: [pointer]
    ]
    queue_peek_head: make-routine glib "g_queue_peek_head" [
        queue [pointer]
        return: [pointer]
    ]
    queue_peek_tail: make-routine glib "g_queue_peek_tail" [
        queue [pointer]
        return: [pointer]
    ]
    queue_peek_nth: make-routine glib "g_queue_peek_nth" [
        queue [pointer]
        n [uint32]
        return: [pointer]
    ]
    queue_index: make-routine glib "g_queue_index" [
        queue [pointer]
        data [pointer]
        return: [int32]
    ]
    queue_remove: make-routine glib "g_queue_remove" [
        queue [pointer]
        data [pointer]
        return: [int32]
    ]
    queue_remove_all: make-routine glib "g_queue_remove_all" [
        queue [pointer]
        data [pointer]
        return: [uint32]
    ]
    queue_insert_before: make-routine glib "g_queue_insert_before" [
        queue [pointer]
        sibling [pointer]
        data [pointer]
        return: [void]
    ]
    queue_insert_after: make-routine glib "g_queue_insert_after" [
        queue [pointer]
        sibling [pointer]
        data [pointer]
        return: [void]
    ]
    queue_insert_sorted: make-routine glib "g_queue_insert_sorted" [
        queue [pointer]
        data [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    queue_push_head_link: make-routine glib "g_queue_push_head_link" [
        queue [pointer]
        link_ [pointer]
        return: [void]
    ]
    queue_push_tail_link: make-routine glib "g_queue_push_tail_link" [
        queue [pointer]
        link_ [pointer]
        return: [void]
    ]
    queue_push_nth_link: make-routine glib "g_queue_push_nth_link" [
        queue [pointer]
        n [int32]
        link_ [pointer]
        return: [void]
    ]
    queue_pop_head_link: make-routine glib "g_queue_pop_head_link" [
        queue [pointer]
        return: [pointer]
    ]
    queue_pop_tail_link: make-routine glib "g_queue_pop_tail_link" [
        queue [pointer]
        return: [pointer]
    ]
    queue_pop_nth_link: make-routine glib "g_queue_pop_nth_link" [
        queue [pointer]
        n [uint32]
        return: [pointer]
    ]
    queue_peek_head_link: make-routine glib "g_queue_peek_head_link" [
        queue [pointer]
        return: [pointer]
    ]
    queue_peek_tail_link: make-routine glib "g_queue_peek_tail_link" [
        queue [pointer]
        return: [pointer]
    ]
    queue_peek_nth_link: make-routine glib "g_queue_peek_nth_link" [
        queue [pointer]
        n [uint32]
        return: [pointer]
    ]
    queue_link_index: make-routine glib "g_queue_link_index" [
        queue [pointer]
        link_ [pointer]
        return: [int32]
    ]
    queue_unlink: make-routine glib "g_queue_unlink" [
        queue [pointer]
        link_ [pointer]
        return: [void]
    ]
    queue_delete_link: make-routine glib "g_queue_delete_link" [
        queue [pointer]
        link_ [pointer]
        return: [void]
    ]
    rand_new_with_seed: make-routine glib "g_rand_new_with_seed" [
        seed [uint32]
        return: [pointer]
    ]
    rand_new_with_seed_array: make-routine glib "g_rand_new_with_seed_array" [
        seed [pointer]
        seed_length [uint32]
        return: [pointer]
    ]
    rand_new: make-routine glib "g_rand_new" [
        return: [pointer]
    ]
    rand_free: make-routine glib "g_rand_free" [
        rand_ [pointer]
        return: [void]
    ]
    rand_copy: make-routine glib "g_rand_copy" [
        rand_ [pointer]
        return: [pointer]
    ]
    rand_set_seed: make-routine glib "g_rand_set_seed" [
        rand_ [pointer]
        seed [uint32]
        return: [void]
    ]
    rand_set_seed_array: make-routine glib "g_rand_set_seed_array" [
        rand_ [pointer]
        seed [pointer]
        seed_length [uint32]
        return: [void]
    ]
    rand_int: make-routine glib "g_rand_int" [
        rand_ [pointer]
        return: [uint32]
    ]
    rand_int_range: make-routine glib "g_rand_int_range" [
        rand_ [pointer]
        begin [int32]
        end [int32]
        return: [int32]
    ]
    rand_double: make-routine glib "g_rand_double" [
        rand_ [pointer]
        return: [double]
    ]
    rand_double_range: make-routine glib "g_rand_double_range" [
        rand_ [pointer]
        begin [double]
        end [double]
        return: [double]
    ]
    random_set_seed: make-routine glib "g_random_set_seed" [
        seed [uint32]
        return: [void]
    ]
    random_int: make-routine glib "g_random_int" [
        return: [uint32]
    ]
    random_int_range: make-routine glib "g_random_int_range" [
        begin [int32]
        end [int32]
        return: [int32]
    ]
    random_double: make-routine glib "g_random_double" [
        return: [double]
    ]
    random_double_range: make-routine glib "g_random_double_range" [
        begin [double]
        end [double]
        return: [double]
    ]
    regex_error_quark: make-routine glib "g_regex_error_quark" [
        return: [uint32]
    ]
    regex_new: make-routine glib "g_regex_new" [
        pattern [pointer]
        compile_options [int32]
        match_options [int32]
        error [pointer]
        return: [pointer]
    ]
    regex_ref: make-routine glib "g_regex_ref" [
        regex [pointer]
        return: [pointer]
    ]
    regex_unref: make-routine glib "g_regex_unref" [
        regex [pointer]
        return: [void]
    ]
    regex_get_pattern: make-routine glib "g_regex_get_pattern" [
        regex [pointer]
        return: [pointer]
    ]
    regex_get_max_backref: make-routine glib "g_regex_get_max_backref" [
        regex [pointer]
        return: [int32]
    ]
    regex_get_capture_count: make-routine glib "g_regex_get_capture_count" [
        regex [pointer]
        return: [int32]
    ]
    regex_get_has_cr_or_lf: make-routine glib "g_regex_get_has_cr_or_lf" [
        regex [pointer]
        return: [int32]
    ]
    regex_get_max_lookbehind: make-routine glib "g_regex_get_max_lookbehind" [
        regex [pointer]
        return: [int32]
    ]
    regex_get_string_number: make-routine glib "g_regex_get_string_number" [
        regex [pointer]
        name [pointer]
        return: [int32]
    ]
    regex_escape_string: make-routine glib "g_regex_escape_string" [
        string [pointer]
        length [int32]
        return: [pointer]
    ]
    regex_escape_nul: make-routine glib "g_regex_escape_nul" [
        string [pointer]
        length [int32]
        return: [pointer]
    ]
    regex_get_compile_flags: make-routine glib "g_regex_get_compile_flags" [
        regex [pointer]
        return: [int32]
    ]
    regex_get_match_flags: make-routine glib "g_regex_get_match_flags" [
        regex [pointer]
        return: [int32]
    ]
    regex_match_simple: make-routine glib "g_regex_match_simple" [
        pattern [pointer]
        string [pointer]
        compile_options [int32]
        match_options [int32]
        return: [int32]
    ]
    regex_match: make-routine glib "g_regex_match" [
        regex [pointer]
        string [pointer]
        match_options [int32]
        match_info [pointer]
        return: [int32]
    ]
    regex_match_full: make-routine glib "g_regex_match_full" [
        regex [pointer]
        string [pointer]
        string_len [int64]
        start_position [int32]
        match_options [int32]
        match_info [pointer]
        error [pointer]
        return: [int32]
    ]
    regex_match_all: make-routine glib "g_regex_match_all" [
        regex [pointer]
        string [pointer]
        match_options [int32]
        match_info [pointer]
        return: [int32]
    ]
    regex_match_all_full: make-routine glib "g_regex_match_all_full" [
        regex [pointer]
        string [pointer]
        string_len [int64]
        start_position [int32]
        match_options [int32]
        match_info [pointer]
        error [pointer]
        return: [int32]
    ]
    regex_split_simple: make-routine glib "g_regex_split_simple" [
        pattern [pointer]
        string [pointer]
        compile_options [int32]
        match_options [int32]
        return: [pointer]
    ]
    regex_split: make-routine glib "g_regex_split" [
        regex [pointer]
        string [pointer]
        match_options [int32]
        return: [pointer]
    ]
    regex_split_full: make-routine glib "g_regex_split_full" [
        regex [pointer]
        string [pointer]
        string_len [int64]
        start_position [int32]
        match_options [int32]
        max_tokens [int32]
        error [pointer]
        return: [pointer]
    ]
    regex_replace: make-routine glib "g_regex_replace" [
        regex [pointer]
        string [pointer]
        string_len [int64]
        start_position [int32]
        replacement [pointer]
        match_options [int32]
        error [pointer]
        return: [pointer]
    ]
    regex_replace_literal: make-routine glib "g_regex_replace_literal" [
        regex [pointer]
        string [pointer]
        string_len [int64]
        start_position [int32]
        replacement [pointer]
        match_options [int32]
        error [pointer]
        return: [pointer]
    ]
    regex_replace_eval: make-routine glib "g_regex_replace_eval" [
        regex [pointer]
        string [pointer]
        string_len [int64]
        start_position [int32]
        match_options [int32]
        eval [pointer]
        user_data [pointer]
        error [pointer]
        return: [pointer]
    ]
    regex_check_replacement: make-routine glib "g_regex_check_replacement" [
        replacement [pointer]
        has_references [pointer]
        error [pointer]
        return: [int32]
    ]
    match_info_get_regex: make-routine glib "g_match_info_get_regex" [
        match_info [pointer]
        return: [pointer]
    ]
    match_info_get_string: make-routine glib "g_match_info_get_string" [
        match_info [pointer]
        return: [pointer]
    ]
    match_info_ref: make-routine glib "g_match_info_ref" [
        match_info [pointer]
        return: [pointer]
    ]
    match_info_unref: make-routine glib "g_match_info_unref" [
        match_info [pointer]
        return: [void]
    ]
    match_info_free: make-routine glib "g_match_info_free" [
        match_info [pointer]
        return: [void]
    ]
    match_info_next: make-routine glib "g_match_info_next" [
        match_info [pointer]
        error [pointer]
        return: [int32]
    ]
    match_info_matches: make-routine glib "g_match_info_matches" [
        match_info [pointer]
        return: [int32]
    ]
    match_info_get_match_count: make-routine glib "g_match_info_get_match_count" [
        match_info [pointer]
        return: [int32]
    ]
    match_info_is_partial_match: make-routine glib "g_match_info_is_partial_match" [
        match_info [pointer]
        return: [int32]
    ]
    match_info_expand_references: make-routine glib "g_match_info_expand_references" [
        match_info [pointer]
        string_to_expand [pointer]
        error [pointer]
        return: [pointer]
    ]
    match_info_fetch: make-routine glib "g_match_info_fetch" [
        match_info [pointer]
        match_num [int32]
        return: [pointer]
    ]
    match_info_fetch_pos: make-routine glib "g_match_info_fetch_pos" [
        match_info [pointer]
        match_num [int32]
        start_pos [pointer]
        end_pos [pointer]
        return: [int32]
    ]
    match_info_fetch_named: make-routine glib "g_match_info_fetch_named" [
        match_info [pointer]
        name [pointer]
        return: [pointer]
    ]
    match_info_fetch_named_pos: make-routine glib "g_match_info_fetch_named_pos" [
        match_info [pointer]
        name [pointer]
        start_pos [pointer]
        end_pos [pointer]
        return: [int32]
    ]
    match_info_fetch_all: make-routine glib "g_match_info_fetch_all" [
        match_info [pointer]
        return: [pointer]
    ]
    scanner_new: make-routine glib "g_scanner_new" [
        config_templ [pointer]
        return: [pointer]
    ]
    scanner_destroy: make-routine glib "g_scanner_destroy" [
        scanner [pointer]
        return: [void]
    ]
    scanner_input_file: make-routine glib "g_scanner_input_file" [
        scanner [pointer]
        input_fd [int32]
        return: [void]
    ]
    scanner_sync_file_offset: make-routine glib "g_scanner_sync_file_offset" [
        scanner [pointer]
        return: [void]
    ]
    scanner_input_text: make-routine glib "g_scanner_input_text" [
        scanner [pointer]
        text [pointer]
        text_len [uint32]
        return: [void]
    ]
    scanner_get_next_token: make-routine glib "g_scanner_get_next_token" [
        scanner [pointer]
        return: [int32]
    ]
    scanner_peek_next_token: make-routine glib "g_scanner_peek_next_token" [
        scanner [pointer]
        return: [int32]
    ]
    scanner_cur_token: make-routine glib "g_scanner_cur_token" [
        scanner [pointer]
        return: [int32]
    ]
    scanner_cur_value: make-routine glib "g_scanner_cur_value" compose/deep [
        scanner [pointer]
        return: [(_GTokenValue)]
    ]
    scanner_cur_line: make-routine glib "g_scanner_cur_line" [
        scanner [pointer]
        return: [uint32]
    ]
    scanner_cur_position: make-routine glib "g_scanner_cur_position" [
        scanner [pointer]
        return: [uint32]
    ]
    scanner_eof: make-routine glib "g_scanner_eof" [
        scanner [pointer]
        return: [int32]
    ]
    scanner_set_scope: make-routine glib "g_scanner_set_scope" [
        scanner [pointer]
        scope_id [uint32]
        return: [uint32]
    ]
    scanner_scope_add_symbol: make-routine glib "g_scanner_scope_add_symbol" [
        scanner [pointer]
        scope_id [uint32]
        symbol [pointer]
        value [pointer]
        return: [void]
    ]
    scanner_scope_remove_symbol: make-routine glib "g_scanner_scope_remove_symbol" [
        scanner [pointer]
        scope_id [uint32]
        symbol [pointer]
        return: [void]
    ]
    scanner_scope_lookup_symbol: make-routine glib "g_scanner_scope_lookup_symbol" [
        scanner [pointer]
        scope_id [uint32]
        symbol [pointer]
        return: [pointer]
    ]
    scanner_scope_foreach_symbol: make-routine glib "g_scanner_scope_foreach_symbol" [
        scanner [pointer]
        scope_id [uint32]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    scanner_lookup_symbol: make-routine glib "g_scanner_lookup_symbol" [
        scanner [pointer]
        symbol [pointer]
        return: [pointer]
    ]
    scanner_unexp_token: make-routine glib "g_scanner_unexp_token" [
        scanner [pointer]
        expected_token [int32]
        identifier_spec [pointer]
        symbol_spec [pointer]
        symbol_name [pointer]
        message [pointer]
        is_error [int32]
        return: [void]
    ]
    scanner_error: make-routine glib "g_scanner_error" [
        scanner [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    scanner_warn: make-routine glib "g_scanner_warn" [
        scanner [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    sequence_new: make-routine glib "g_sequence_new" [
        data_destroy [pointer]
        return: [pointer]
    ]
    sequence_free: make-routine glib "g_sequence_free" [
        seq [pointer]
        return: [void]
    ]
    sequence_get_length: make-routine glib "g_sequence_get_length" [
        seq [pointer]
        return: [int32]
    ]
    sequence_foreach: make-routine glib "g_sequence_foreach" [
        seq [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    sequence_foreach_range: make-routine glib "g_sequence_foreach_range" [
        begin [pointer]
        end [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    sequence_sort: make-routine glib "g_sequence_sort" [
        seq [pointer]
        cmp_func [pointer]
        cmp_data [pointer]
        return: [void]
    ]
    sequence_sort_iter: make-routine glib "g_sequence_sort_iter" [
        seq [pointer]
        cmp_func [pointer]
        cmp_data [pointer]
        return: [void]
    ]
    sequence_get_begin_iter: make-routine glib "g_sequence_get_begin_iter" [
        seq [pointer]
        return: [pointer]
    ]
    sequence_get_end_iter: make-routine glib "g_sequence_get_end_iter" [
        seq [pointer]
        return: [pointer]
    ]
    sequence_get_iter_at_pos: make-routine glib "g_sequence_get_iter_at_pos" [
        seq [pointer]
        pos [int32]
        return: [pointer]
    ]
    sequence_append: make-routine glib "g_sequence_append" [
        seq [pointer]
        data [pointer]
        return: [pointer]
    ]
    sequence_prepend: make-routine glib "g_sequence_prepend" [
        seq [pointer]
        data [pointer]
        return: [pointer]
    ]
    sequence_insert_before: make-routine glib "g_sequence_insert_before" [
        iter [pointer]
        data [pointer]
        return: [pointer]
    ]
    sequence_move: make-routine glib "g_sequence_move" [
        src [pointer]
        dest [pointer]
        return: [void]
    ]
    sequence_swap: make-routine glib "g_sequence_swap" [
        a [pointer]
        b [pointer]
        return: [void]
    ]
    sequence_insert_sorted: make-routine glib "g_sequence_insert_sorted" [
        seq [pointer]
        data [pointer]
        cmp_func [pointer]
        cmp_data [pointer]
        return: [pointer]
    ]
    sequence_insert_sorted_iter: make-routine glib "g_sequence_insert_sorted_iter" [
        seq [pointer]
        data [pointer]
        iter_cmp [pointer]
        cmp_data [pointer]
        return: [pointer]
    ]
    sequence_sort_changed: make-routine glib "g_sequence_sort_changed" [
        iter [pointer]
        cmp_func [pointer]
        cmp_data [pointer]
        return: [void]
    ]
    sequence_sort_changed_iter: make-routine glib "g_sequence_sort_changed_iter" [
        iter [pointer]
        iter_cmp [pointer]
        cmp_data [pointer]
        return: [void]
    ]
    sequence_remove: make-routine glib "g_sequence_remove" [
        iter [pointer]
        return: [void]
    ]
    sequence_remove_range: make-routine glib "g_sequence_remove_range" [
        begin [pointer]
        end [pointer]
        return: [void]
    ]
    sequence_move_range: make-routine glib "g_sequence_move_range" [
        dest [pointer]
        begin [pointer]
        end [pointer]
        return: [void]
    ]
    sequence_search: make-routine glib "g_sequence_search" [
        seq [pointer]
        data [pointer]
        cmp_func [pointer]
        cmp_data [pointer]
        return: [pointer]
    ]
    sequence_search_iter: make-routine glib "g_sequence_search_iter" [
        seq [pointer]
        data [pointer]
        iter_cmp [pointer]
        cmp_data [pointer]
        return: [pointer]
    ]
    sequence_lookup: make-routine glib "g_sequence_lookup" [
        seq [pointer]
        data [pointer]
        cmp_func [pointer]
        cmp_data [pointer]
        return: [pointer]
    ]
    sequence_lookup_iter: make-routine glib "g_sequence_lookup_iter" [
        seq [pointer]
        data [pointer]
        iter_cmp [pointer]
        cmp_data [pointer]
        return: [pointer]
    ]
    sequence_get: make-routine glib "g_sequence_get" [
        iter [pointer]
        return: [pointer]
    ]
    sequence_set: make-routine glib "g_sequence_set" [
        iter [pointer]
        data [pointer]
        return: [void]
    ]
    sequence_iter_is_begin: make-routine glib "g_sequence_iter_is_begin" [
        iter [pointer]
        return: [int32]
    ]
    sequence_iter_is_end: make-routine glib "g_sequence_iter_is_end" [
        iter [pointer]
        return: [int32]
    ]
    sequence_iter_next: make-routine glib "g_sequence_iter_next" [
        iter [pointer]
        return: [pointer]
    ]
    sequence_iter_prev: make-routine glib "g_sequence_iter_prev" [
        iter [pointer]
        return: [pointer]
    ]
    sequence_iter_get_position: make-routine glib "g_sequence_iter_get_position" [
        iter [pointer]
        return: [int32]
    ]
    sequence_iter_move: make-routine glib "g_sequence_iter_move" [
        iter [pointer]
        delta [int32]
        return: [pointer]
    ]
    sequence_iter_get_sequence: make-routine glib "g_sequence_iter_get_sequence" [
        iter [pointer]
        return: [pointer]
    ]
    sequence_iter_compare: make-routine glib "g_sequence_iter_compare" [
        a [pointer]
        b [pointer]
        return: [int32]
    ]
    sequence_range_get_midpoint: make-routine glib "g_sequence_range_get_midpoint" [
        begin [pointer]
        end [pointer]
        return: [pointer]
    ]
    shell_error_quark: make-routine glib "g_shell_error_quark" [
        return: [uint32]
    ]
    shell_quote: make-routine glib "g_shell_quote" [
        unquoted_string [pointer]
        return: [pointer]
    ]
    shell_unquote: make-routine glib "g_shell_unquote" [
        quoted_string [pointer]
        error [pointer]
        return: [pointer]
    ]
    shell_parse_argv: make-routine glib "g_shell_parse_argv" [
        command_line [pointer]
        argcp [pointer]
        argvp [pointer]
        error [pointer]
        return: [int32]
    ]
    slice_alloc: make-routine glib "g_slice_alloc" [
        block_size [uint64]
        return: [pointer]
    ]
    slice_alloc0: make-routine glib "g_slice_alloc0" [
        block_size [uint64]
        return: [pointer]
    ]
    slice_copy: make-routine glib "g_slice_copy" [
        block_size [uint64]
        mem_block [pointer]
        return: [pointer]
    ]
    slice_free1: make-routine glib "g_slice_free1" [
        block_size [uint64]
        mem_block [pointer]
        return: [void]
    ]
    slice_free_chain_with_offset: make-routine glib "g_slice_free_chain_with_offset" [
        block_size [uint64]
        mem_chain [pointer]
        next_offset [uint64]
        return: [void]
    ]
    spawn_error_quark: make-routine glib "g_spawn_error_quark" [
        return: [uint32]
    ]
    spawn_exit_error_quark: make-routine glib "g_spawn_exit_error_quark" [
        return: [uint32]
    ]
    spawn_async: make-routine glib "g_spawn_async" [
        working_directory [pointer]
        argv [pointer]
        envp [pointer]
        flags [int32]
        child_setup [pointer]
        user_data [pointer]
        child_pid [pointer]
        error [pointer]
        return: [int32]
    ]
    spawn_async_with_pipes: make-routine glib "g_spawn_async_with_pipes" [
        working_directory [pointer]
        argv [pointer]
        envp [pointer]
        flags [int32]
        child_setup [pointer]
        user_data [pointer]
        child_pid [pointer]
        standard_input [pointer]
        standard_output [pointer]
        standard_error [pointer]
        error [pointer]
        return: [int32]
    ]
    spawn_sync: make-routine glib "g_spawn_sync" [
        working_directory [pointer]
        argv [pointer]
        envp [pointer]
        flags [int32]
        child_setup [pointer]
        user_data [pointer]
        standard_output [pointer]
        standard_error [pointer]
        exit_status [pointer]
        error [pointer]
        return: [int32]
    ]
    spawn_command_line_sync: make-routine glib "g_spawn_command_line_sync" [
        command_line [pointer]
        standard_output [pointer]
        standard_error [pointer]
        exit_status [pointer]
        error [pointer]
        return: [int32]
    ]
    spawn_command_line_async: make-routine glib "g_spawn_command_line_async" [
        command_line [pointer]
        error [pointer]
        return: [int32]
    ]
    spawn_check_exit_status: make-routine glib "g_spawn_check_exit_status" [
        exit_status [int32]
        error [pointer]
        return: [int32]
    ]
    spawn_close_pid: make-routine glib "g_spawn_close_pid" [
        pid [int32]
        return: [void]
    ]
    ascii_tolower: make-routine glib "g_ascii_tolower" [
        c [int8]
        return: [int8]
    ]
    ascii_toupper: make-routine glib "g_ascii_toupper" [
        c [int8]
        return: [int8]
    ]
    ascii_digit_value: make-routine glib "g_ascii_digit_value" [
        c [int8]
        return: [int32]
    ]
    ascii_xdigit_value: make-routine glib "g_ascii_xdigit_value" [
        c [int8]
        return: [int32]
    ]
    strdelimit: make-routine glib "g_strdelimit" [
        string [pointer]
        delimiters [pointer]
        new_delimiter [int8]
        return: [pointer]
    ]
    strcanon: make-routine glib "g_strcanon" [
        string [pointer]
        valid_chars [pointer]
        substitutor [int8]
        return: [pointer]
    ]
    strerror: make-routine glib "g_strerror" [
        errnum [int32]
        return: [pointer]
    ]
    strsignal: make-routine glib "g_strsignal" [
        signum [int32]
        return: [pointer]
    ]
    strreverse: make-routine glib "g_strreverse" [
        string [pointer]
        return: [pointer]
    ]
    strlcpy: make-routine glib "g_strlcpy" [
        dest [pointer]
        src [pointer]
        dest_size [uint64]
        return: [uint64]
    ]
    strlcat: make-routine glib "g_strlcat" [
        dest [pointer]
        src [pointer]
        dest_size [uint64]
        return: [uint64]
    ]
    strstr_len: make-routine glib "g_strstr_len" [
        haystack [pointer]
        haystack_len [int64]
        needle [pointer]
        return: [pointer]
    ]
    strrstr: make-routine glib "g_strrstr" [
        haystack [pointer]
        needle [pointer]
        return: [pointer]
    ]
    strrstr_len: make-routine glib "g_strrstr_len" [
        haystack [pointer]
        haystack_len [int64]
        needle [pointer]
        return: [pointer]
    ]
    str_has_suffix: make-routine glib "g_str_has_suffix" [
        str [pointer]
        suffix [pointer]
        return: [int32]
    ]
    str_has_prefix: make-routine glib "g_str_has_prefix" [
        str [pointer]
        prefix [pointer]
        return: [int32]
    ]
    strtod: make-routine glib "g_strtod" [
        nptr [pointer]
        endptr [pointer]
        return: [double]
    ]
    ascii_strtod: make-routine glib "g_ascii_strtod" [
        nptr [pointer]
        endptr [pointer]
        return: [double]
    ]
    ascii_strtoull: make-routine glib "g_ascii_strtoull" [
        nptr [pointer]
        endptr [pointer]
        base [uint32]
        return: [uint64]
    ]
    ascii_strtoll: make-routine glib "g_ascii_strtoll" [
        nptr [pointer]
        endptr [pointer]
        base [uint32]
        return: [int64]
    ]
    ascii_dtostr: make-routine glib "g_ascii_dtostr" [
        buffer [pointer]
        buf_len [int32]
        d [double]
        return: [pointer]
    ]
    ascii_formatd: make-routine glib "g_ascii_formatd" [
        buffer [pointer]
        buf_len [int32]
        format [pointer]
        d [double]
        return: [pointer]
    ]
    strchug: make-routine glib "g_strchug" [
        string [pointer]
        return: [pointer]
    ]
    strchomp: make-routine glib "g_strchomp" [
        string [pointer]
        return: [pointer]
    ]
    ascii_strcasecmp: make-routine glib "g_ascii_strcasecmp" [
        s1 [pointer]
        s2 [pointer]
        return: [int32]
    ]
    ascii_strncasecmp: make-routine glib "g_ascii_strncasecmp" [
        s1 [pointer]
        s2 [pointer]
        n [uint64]
        return: [int32]
    ]
    ascii_strdown: make-routine glib "g_ascii_strdown" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    ascii_strup: make-routine glib "g_ascii_strup" [
        str [pointer]
        len [int64]
        return: [pointer]
    ]
    str_is_ascii: make-routine glib "g_str_is_ascii" [
        str [pointer]
        return: [int32]
    ]
    strdup: make-routine glib "g_strdup" [
        str [pointer]
        return: [pointer]
    ]
    strdup_printf: make-routine glib "g_strdup_printf" [
        format [pointer]
        ...
        return: [pointer]
    ]
    strdup_vprintf: make-routine glib "g_strdup_vprintf" [
        format [pointer]
        args [int32]
        return: [pointer]
    ]
    strndup: make-routine glib "g_strndup" [
        str [pointer]
        n [uint64]
        return: [pointer]
    ]
    strnfill: make-routine glib "g_strnfill" [
        length [uint64]
        fill_char [int8]
        return: [pointer]
    ]
    strconcat: make-routine glib "g_strconcat" [
        string1 [pointer]
        ...
        return: [pointer]
    ]
    strjoin: make-routine glib "g_strjoin" [
        separator [pointer]
        ...
        return: [pointer]
    ]
    strcompress: make-routine glib "g_strcompress" [
        source [pointer]
        return: [pointer]
    ]
    strescape: make-routine glib "g_strescape" [
        source [pointer]
        exceptions [pointer]
        return: [pointer]
    ]
    memdup: make-routine glib "g_memdup" [
        mem [pointer]
        byte_size [uint32]
        return: [pointer]
    ]
    strsplit: make-routine glib "g_strsplit" [
        string [pointer]
        delimiter [pointer]
        max_tokens [int32]
        return: [pointer]
    ]
    strsplit_set: make-routine glib "g_strsplit_set" [
        string [pointer]
        delimiters [pointer]
        max_tokens [int32]
        return: [pointer]
    ]
    strjoinv: make-routine glib "g_strjoinv" [
        separator [pointer]
        str_array [pointer]
        return: [pointer]
    ]
    strfreev: make-routine glib "g_strfreev" [
        str_array [pointer]
        return: [void]
    ]
    strdupv: make-routine glib "g_strdupv" [
        str_array [pointer]
        return: [pointer]
    ]
    strv_length: make-routine glib "g_strv_length" [
        str_array [pointer]
        return: [uint32]
    ]
    stpcpy: make-routine glib "g_stpcpy" [
        dest [pointer]
        src [pointer]
        return: [pointer]
    ]
    str_to_ascii: make-routine glib "g_str_to_ascii" [
        str [pointer]
        from_locale [pointer]
        return: [pointer]
    ]
    str_tokenize_and_fold: make-routine glib "g_str_tokenize_and_fold" [
        string [pointer]
        translit_locale [pointer]
        ascii_alternates [pointer]
        return: [pointer]
    ]
    str_match_string: make-routine glib "g_str_match_string" [
        search_term [pointer]
        potential_hit [pointer]
        accept_alternates [int32]
        return: [int32]
    ]
    string_chunk_new: make-routine glib "g_string_chunk_new" [
        size [uint64]
        return: [pointer]
    ]
    string_chunk_free: make-routine glib "g_string_chunk_free" [
        chunk [pointer]
        return: [void]
    ]
    string_chunk_clear: make-routine glib "g_string_chunk_clear" [
        chunk [pointer]
        return: [void]
    ]
    string_chunk_insert: make-routine glib "g_string_chunk_insert" [
        chunk [pointer]
        string [pointer]
        return: [pointer]
    ]
    string_chunk_insert_len: make-routine glib "g_string_chunk_insert_len" [
        chunk [pointer]
        string [pointer]
        len [int64]
        return: [pointer]
    ]
    string_chunk_insert_const: make-routine glib "g_string_chunk_insert_const" [
        chunk [pointer]
        string [pointer]
        return: [pointer]
    ]
    strcmp0: make-routine glib "g_strcmp0" [
        str1 [pointer]
        str2 [pointer]
        return: [int32]
    ]
    test_minimized_result: make-routine glib "g_test_minimized_result" [
        minimized_quantity [double]
        format [pointer]
        ...
        return: [void]
    ]
    test_maximized_result: make-routine glib "g_test_maximized_result" [
        maximized_quantity [double]
        format [pointer]
        ...
        return: [void]
    ]
    test_init: make-routine glib "g_test_init" [
        argc [pointer]
        argv [pointer]
        ...
        return: [void]
    ]
    test_subprocess: make-routine glib "g_test_subprocess" [
        return: [int32]
    ]
    test_run: make-routine glib "g_test_run" [
        return: [int32]
    ]
    test_add_func: make-routine glib "g_test_add_func" [
        testpath [pointer]
        test_func [pointer]
        return: [void]
    ]
    test_add_data_func: make-routine glib "g_test_add_data_func" [
        testpath [pointer]
        test_data [pointer]
        test_func [pointer]
        return: [void]
    ]
    test_add_data_func_full: make-routine glib "g_test_add_data_func_full" [
        testpath [pointer]
        test_data [pointer]
        test_func [pointer]
        data_free_func [pointer]
        return: [void]
    ]
    test_fail: make-routine glib "g_test_fail" [
        return: [void]
    ]
    test_incomplete: make-routine glib "g_test_incomplete" [
        msg [pointer]
        return: [void]
    ]
    test_skip: make-routine glib "g_test_skip" [
        msg [pointer]
        return: [void]
    ]
    test_failed: make-routine glib "g_test_failed" [
        return: [int32]
    ]
    test_set_nonfatal_assertions: make-routine glib "g_test_set_nonfatal_assertions" [
        return: [void]
    ]
    test_message: make-routine glib "g_test_message" [
        format [pointer]
        ...
        return: [void]
    ]
    test_bug_base: make-routine glib "g_test_bug_base" [
        uri_pattern [pointer]
        return: [void]
    ]
    test_bug: make-routine glib "g_test_bug" [
        bug_uri_snippet [pointer]
        return: [void]
    ]
    test_timer_start: make-routine glib "g_test_timer_start" [
        return: [void]
    ]
    test_timer_elapsed: make-routine glib "g_test_timer_elapsed" [
        return: [double]
    ]
    test_timer_last: make-routine glib "g_test_timer_last" [
        return: [double]
    ]
    test_queue_free: make-routine glib "g_test_queue_free" [
        gfree_pointer [pointer]
        return: [void]
    ]
    test_queue_destroy: make-routine glib "g_test_queue_destroy" [
        destroy_func [pointer]
        destroy_data [pointer]
        return: [void]
    ]
    test_trap_subprocess: make-routine glib "g_test_trap_subprocess" [
        test_path [pointer]
        usec_timeout [uint64]
        test_flags [int32]
        return: [void]
    ]
    test_trap_has_passed: make-routine glib "g_test_trap_has_passed" [
        return: [int32]
    ]
    test_trap_reached_timeout: make-routine glib "g_test_trap_reached_timeout" [
        return: [int32]
    ]
    test_rand_int: make-routine glib "g_test_rand_int" [
        return: [int32]
    ]
    test_rand_int_range: make-routine glib "g_test_rand_int_range" [
        begin [int32]
        end [int32]
        return: [int32]
    ]
    test_rand_double: make-routine glib "g_test_rand_double" [
        return: [double]
    ]
    test_rand_double_range: make-routine glib "g_test_rand_double_range" [
        range_start [double]
        range_end [double]
        return: [double]
    ]
    test_create_case: make-routine glib "g_test_create_case" [
        test_name [pointer]
        data_size [uint64]
        test_data [pointer]
        data_setup [pointer]
        data_test [pointer]
        data_teardown [pointer]
        return: [pointer]
    ]
    test_create_suite: make-routine glib "g_test_create_suite" [
        suite_name [pointer]
        return: [pointer]
    ]
    test_get_root: make-routine glib "g_test_get_root" [
        return: [pointer]
    ]
    test_suite_add: make-routine glib "g_test_suite_add" [
        suite [pointer]
        test_case [pointer]
        return: [void]
    ]
    test_suite_add_suite: make-routine glib "g_test_suite_add_suite" [
        suite [pointer]
        nestedsuite [pointer]
        return: [void]
    ]
    test_run_suite: make-routine glib "g_test_run_suite" [
        suite [pointer]
        return: [int32]
    ]
    test_trap_assertions: make-routine glib "g_test_trap_assertions" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        assertion_flags [uint64]
        pattern [pointer]
        return: [void]
    ]
    assertion_message: make-routine glib "g_assertion_message" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        message [pointer]
        return: [void]
    ]
    assertion_message_expr: make-routine glib "g_assertion_message_expr" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        expr [pointer]
        return: [void]
    ]
    assertion_message_cmpstr: make-routine glib "g_assertion_message_cmpstr" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        expr [pointer]
        arg1 [pointer]
        cmp [pointer]
        arg2 [pointer]
        return: [void]
    ]
    assertion_message_error: make-routine glib "g_assertion_message_error" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        expr [pointer]
        error [pointer]
        error_domain [uint32]
        error_code [int32]
        return: [void]
    ]
    test_add_vtable: make-routine glib "g_test_add_vtable" [
        testpath [pointer]
        data_size [uint64]
        test_data [pointer]
        data_setup [pointer]
        data_test [pointer]
        data_teardown [pointer]
        return: [void]
    ]
    test_log_type_name: make-routine glib "g_test_log_type_name" [
        log_type [int32]
        return: [pointer]
    ]
    test_log_buffer_new: make-routine glib "g_test_log_buffer_new" [
        return: [pointer]
    ]
    test_log_buffer_free: make-routine glib "g_test_log_buffer_free" [
        tbuffer [pointer]
        return: [void]
    ]
    test_log_buffer_push: make-routine glib "g_test_log_buffer_push" [
        tbuffer [pointer]
        n_bytes [uint32]
        bytes [pointer]
        return: [void]
    ]
    test_log_buffer_pop: make-routine glib "g_test_log_buffer_pop" [
        tbuffer [pointer]
        return: [pointer]
    ]
    test_log_msg_free: make-routine glib "g_test_log_msg_free" [
        tmsg [pointer]
        return: [void]
    ]
    test_log_set_fatal_handler: make-routine glib "g_test_log_set_fatal_handler" [
        log_func [pointer]
        user_data [pointer]
        return: [void]
    ]
    test_expect_message: make-routine glib "g_test_expect_message" [
        log_domain [pointer]
        log_level [int32]
        pattern [pointer]
        return: [void]
    ]
    test_assert_expected_messages_internal: make-routine glib "g_test_assert_expected_messages_internal" [
        domain [pointer]
        file [pointer]
        line [int32]
        func [pointer]
        return: [void]
    ]
    test_build_filename: make-routine glib "g_test_build_filename" [
        file_type [int32]
        first_path [pointer]
        ...
        return: [pointer]
    ]
    test_get_dir: make-routine glib "g_test_get_dir" [
        file_type [int32]
        return: [pointer]
    ]
    test_get_filename: make-routine glib "g_test_get_filename" [
        file_type [int32]
        first_path [pointer]
        ...
        return: [pointer]
    ]
    thread_pool_new: make-routine glib "g_thread_pool_new" [
        func [pointer]
        user_data [pointer]
        max_threads [int32]
        exclusive [int32]
        error [pointer]
        return: [pointer]
    ]
    thread_pool_free: make-routine glib "g_thread_pool_free" [
        pool [pointer]
        immediate [int32]
        wait_ [int32]
        return: [void]
    ]
    thread_pool_push: make-routine glib "g_thread_pool_push" [
        pool [pointer]
        data [pointer]
        error [pointer]
        return: [int32]
    ]
    thread_pool_unprocessed: make-routine glib "g_thread_pool_unprocessed" [
        pool [pointer]
        return: [uint32]
    ]
    thread_pool_set_sort_function: make-routine glib "g_thread_pool_set_sort_function" [
        pool [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    thread_pool_set_max_threads: make-routine glib "g_thread_pool_set_max_threads" [
        pool [pointer]
        max_threads [int32]
        error [pointer]
        return: [int32]
    ]
    thread_pool_get_max_threads: make-routine glib "g_thread_pool_get_max_threads" [
        pool [pointer]
        return: [int32]
    ]
    thread_pool_get_num_threads: make-routine glib "g_thread_pool_get_num_threads" [
        pool [pointer]
        return: [uint32]
    ]
    thread_pool_set_max_unused_threads: make-routine glib "g_thread_pool_set_max_unused_threads" [
        max_threads [int32]
        return: [void]
    ]
    thread_pool_get_max_unused_threads: make-routine glib "g_thread_pool_get_max_unused_threads" [
        return: [int32]
    ]
    thread_pool_get_num_unused_threads: make-routine glib "g_thread_pool_get_num_unused_threads" [
        return: [uint32]
    ]
    thread_pool_stop_unused_threads: make-routine glib "g_thread_pool_stop_unused_threads" [
        return: [void]
    ]
    thread_pool_set_max_idle_time: make-routine glib "g_thread_pool_set_max_idle_time" [
        interval [uint32]
        return: [void]
    ]
    thread_pool_get_max_idle_time: make-routine glib "g_thread_pool_get_max_idle_time" [
        return: [uint32]
    ]
    timer_new: make-routine glib "g_timer_new" [
        return: [pointer]
    ]
    timer_destroy: make-routine glib "g_timer_destroy" [
        timer [pointer]
        return: [void]
    ]
    timer_start: make-routine glib "g_timer_start" [
        timer [pointer]
        return: [void]
    ]
    timer_stop: make-routine glib "g_timer_stop" [
        timer [pointer]
        return: [void]
    ]
    timer_reset: make-routine glib "g_timer_reset" [
        timer [pointer]
        return: [void]
    ]
    timer_continue: make-routine glib "g_timer_continue" [
        timer [pointer]
        return: [void]
    ]
    timer_elapsed: make-routine glib "g_timer_elapsed" [
        timer [pointer]
        microseconds [pointer]
        return: [double]
    ]
    usleep: make-routine glib "g_usleep" [
        microseconds [uint64]
        return: [void]
    ]
    time_val_add: make-routine glib "g_time_val_add" [
        time_ [pointer]
        microseconds [int64]
        return: [void]
    ]
    time_val_from_iso8601: make-routine glib "g_time_val_from_iso8601" [
        iso_date [pointer]
        time_ [pointer]
        return: [int32]
    ]
    time_val_to_iso8601: make-routine glib "g_time_val_to_iso8601" [
        time_ [pointer]
        return: [pointer]
    ]
    tree_new: make-routine glib "g_tree_new" [
        key_compare_func [pointer]
        return: [pointer]
    ]
    tree_new_with_data: make-routine glib "g_tree_new_with_data" [
        key_compare_func [pointer]
        key_compare_data [pointer]
        return: [pointer]
    ]
    tree_new_full: make-routine glib "g_tree_new_full" [
        key_compare_func [pointer]
        key_compare_data [pointer]
        key_destroy_func [pointer]
        value_destroy_func [pointer]
        return: [pointer]
    ]
    tree_ref: make-routine glib "g_tree_ref" [
        tree [pointer]
        return: [pointer]
    ]
    tree_unref: make-routine glib "g_tree_unref" [
        tree [pointer]
        return: [void]
    ]
    tree_destroy: make-routine glib "g_tree_destroy" [
        tree [pointer]
        return: [void]
    ]
    tree_insert: make-routine glib "g_tree_insert" [
        tree [pointer]
        key [pointer]
        value [pointer]
        return: [void]
    ]
    tree_replace: make-routine glib "g_tree_replace" [
        tree [pointer]
        key [pointer]
        value [pointer]
        return: [void]
    ]
    tree_remove: make-routine glib "g_tree_remove" [
        tree [pointer]
        key [pointer]
        return: [int32]
    ]
    tree_steal: make-routine glib "g_tree_steal" [
        tree [pointer]
        key [pointer]
        return: [int32]
    ]
    tree_lookup: make-routine glib "g_tree_lookup" [
        tree [pointer]
        key [pointer]
        return: [pointer]
    ]
    tree_lookup_extended: make-routine glib "g_tree_lookup_extended" [
        tree [pointer]
        lookup_key [pointer]
        orig_key [pointer]
        value [pointer]
        return: [int32]
    ]
    tree_foreach: make-routine glib "g_tree_foreach" [
        tree [pointer]
        func [pointer]
        user_data [pointer]
        return: [void]
    ]
    tree_search: make-routine glib "g_tree_search" [
        tree [pointer]
        search_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    tree_height: make-routine glib "g_tree_height" [
        tree [pointer]
        return: [int32]
    ]
    tree_nnodes: make-routine glib "g_tree_nnodes" [
        tree [pointer]
        return: [int32]
    ]
    uri_unescape_string: make-routine glib "g_uri_unescape_string" [
        escaped_string [pointer]
        illegal_characters [pointer]
        return: [pointer]
    ]
    uri_unescape_segment: make-routine glib "g_uri_unescape_segment" [
        escaped_string [pointer]
        escaped_string_end [pointer]
        illegal_characters [pointer]
        return: [pointer]
    ]
    uri_parse_scheme: make-routine glib "g_uri_parse_scheme" [
        uri [pointer]
        return: [pointer]
    ]
    uri_escape_string: make-routine glib "g_uri_escape_string" [
        unescaped [pointer]
        reserved_chars_allowed [pointer]
        allow_utf8 [int32]
        return: [pointer]
    ]
    variant_type_string_is_valid: make-routine glib "g_variant_type_string_is_valid" [
        type_string [pointer]
        return: [int32]
    ]
    variant_type_string_scan: make-routine glib "g_variant_type_string_scan" [
        string [pointer]
        limit [pointer]
        endptr [pointer]
        return: [int32]
    ]
    variant_type_free: make-routine glib "g_variant_type_free" [
        type [pointer]
        return: [void]
    ]
    variant_type_copy: make-routine glib "g_variant_type_copy" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_new: make-routine glib "g_variant_type_new" [
        type_string [pointer]
        return: [pointer]
    ]
    variant_type_get_string_length: make-routine glib "g_variant_type_get_string_length" [
        type [pointer]
        return: [uint64]
    ]
    variant_type_peek_string: make-routine glib "g_variant_type_peek_string" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_dup_string: make-routine glib "g_variant_type_dup_string" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_is_definite: make-routine glib "g_variant_type_is_definite" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_container: make-routine glib "g_variant_type_is_container" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_basic: make-routine glib "g_variant_type_is_basic" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_maybe: make-routine glib "g_variant_type_is_maybe" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_array: make-routine glib "g_variant_type_is_array" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_tuple: make-routine glib "g_variant_type_is_tuple" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_dict_entry: make-routine glib "g_variant_type_is_dict_entry" [
        type [pointer]
        return: [int32]
    ]
    variant_type_is_variant: make-routine glib "g_variant_type_is_variant" [
        type [pointer]
        return: [int32]
    ]
    variant_type_hash: make-routine glib "g_variant_type_hash" [
        type [pointer]
        return: [uint32]
    ]
    variant_type_equal: make-routine glib "g_variant_type_equal" [
        type1 [pointer]
        type2 [pointer]
        return: [int32]
    ]
    variant_type_is_subtype_of: make-routine glib "g_variant_type_is_subtype_of" [
        type [pointer]
        supertype [pointer]
        return: [int32]
    ]
    variant_type_element: make-routine glib "g_variant_type_element" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_first: make-routine glib "g_variant_type_first" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_next: make-routine glib "g_variant_type_next" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_n_items: make-routine glib "g_variant_type_n_items" [
        type [pointer]
        return: [uint64]
    ]
    variant_type_key: make-routine glib "g_variant_type_key" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_value: make-routine glib "g_variant_type_value" [
        type [pointer]
        return: [pointer]
    ]
    variant_type_new_array: make-routine glib "g_variant_type_new_array" [
        element [pointer]
        return: [pointer]
    ]
    variant_type_new_maybe: make-routine glib "g_variant_type_new_maybe" [
        element [pointer]
        return: [pointer]
    ]
    variant_type_new_tuple: make-routine glib "g_variant_type_new_tuple" [
        items [pointer]
        length [int32]
        return: [pointer]
    ]
    variant_type_new_dict_entry: make-routine glib "g_variant_type_new_dict_entry" [
        key [pointer]
        value [pointer]
        return: [pointer]
    ]
    variant_type_checked_: make-routine glib "g_variant_type_checked_" [
        arg1 [pointer]
        return: [pointer]
    ]
    variant_unref: make-routine glib "g_variant_unref" [
        value [pointer]
        return: [void]
    ]
    variant_ref: make-routine glib "g_variant_ref" [
        value [pointer]
        return: [pointer]
    ]
    variant_ref_sink: make-routine glib "g_variant_ref_sink" [
        value [pointer]
        return: [pointer]
    ]
    variant_is_floating: make-routine glib "g_variant_is_floating" [
        value [pointer]
        return: [int32]
    ]
    variant_take_ref: make-routine glib "g_variant_take_ref" [
        value [pointer]
        return: [pointer]
    ]
    variant_get_type: make-routine glib "g_variant_get_type" [
        value [pointer]
        return: [pointer]
    ]
    variant_get_type_string: make-routine glib "g_variant_get_type_string" [
        value [pointer]
        return: [pointer]
    ]
    variant_is_of_type: make-routine glib "g_variant_is_of_type" [
        value [pointer]
        type [pointer]
        return: [int32]
    ]
    variant_is_container: make-routine glib "g_variant_is_container" [
        value [pointer]
        return: [int32]
    ]
    variant_classify: make-routine glib "g_variant_classify" [
        value [pointer]
        return: [int32]
    ]
    variant_new_boolean: make-routine glib "g_variant_new_boolean" [
        value [int32]
        return: [pointer]
    ]
    variant_new_byte: make-routine glib "g_variant_new_byte" [
        value [uint8]
        return: [pointer]
    ]
    variant_new_int16: make-routine glib "g_variant_new_int16" [
        value [int16]
        return: [pointer]
    ]
    variant_new_uint16: make-routine glib "g_variant_new_uint16" [
        value [uint16]
        return: [pointer]
    ]
    variant_new_int32: make-routine glib "g_variant_new_int32" [
        value [int32]
        return: [pointer]
    ]
    variant_new_uint32: make-routine glib "g_variant_new_uint32" [
        value [uint32]
        return: [pointer]
    ]
    variant_new_int64: make-routine glib "g_variant_new_int64" [
        value [int64]
        return: [pointer]
    ]
    variant_new_uint64: make-routine glib "g_variant_new_uint64" [
        value [uint64]
        return: [pointer]
    ]
    variant_new_handle: make-routine glib "g_variant_new_handle" [
        value [int32]
        return: [pointer]
    ]
    variant_new_double: make-routine glib "g_variant_new_double" [
        value [double]
        return: [pointer]
    ]
    variant_new_string: make-routine glib "g_variant_new_string" [
        string [pointer]
        return: [pointer]
    ]
    variant_new_take_string: make-routine glib "g_variant_new_take_string" [
        string [pointer]
        return: [pointer]
    ]
    variant_new_printf: make-routine glib "g_variant_new_printf" [
        format_string [pointer]
        ...
        return: [pointer]
    ]
    variant_new_object_path: make-routine glib "g_variant_new_object_path" [
        object_path [pointer]
        return: [pointer]
    ]
    variant_is_object_path: make-routine glib "g_variant_is_object_path" [
        string [pointer]
        return: [int32]
    ]
    variant_new_signature: make-routine glib "g_variant_new_signature" [
        signature [pointer]
        return: [pointer]
    ]
    variant_is_signature: make-routine glib "g_variant_is_signature" [
        string [pointer]
        return: [int32]
    ]
    variant_new_variant: make-routine glib "g_variant_new_variant" [
        value [pointer]
        return: [pointer]
    ]
    variant_new_strv: make-routine glib "g_variant_new_strv" [
        strv [pointer]
        length [int64]
        return: [pointer]
    ]
    variant_new_objv: make-routine glib "g_variant_new_objv" [
        strv [pointer]
        length [int64]
        return: [pointer]
    ]
    variant_new_bytestring: make-routine glib "g_variant_new_bytestring" [
        string [pointer]
        return: [pointer]
    ]
    variant_new_bytestring_array: make-routine glib "g_variant_new_bytestring_array" [
        strv [pointer]
        length [int64]
        return: [pointer]
    ]
    variant_new_fixed_array: make-routine glib "g_variant_new_fixed_array" [
        element_type [pointer]
        elements [pointer]
        n_elements [uint64]
        element_size [uint64]
        return: [pointer]
    ]
    variant_get_boolean: make-routine glib "g_variant_get_boolean" [
        value [pointer]
        return: [int32]
    ]
    variant_get_byte: make-routine glib "g_variant_get_byte" [
        value [pointer]
        return: [uint8]
    ]
    variant_get_int16: make-routine glib "g_variant_get_int16" [
        value [pointer]
        return: [int16]
    ]
    variant_get_uint16: make-routine glib "g_variant_get_uint16" [
        value [pointer]
        return: [uint16]
    ]
    variant_get_int32: make-routine glib "g_variant_get_int32" [
        value [pointer]
        return: [int32]
    ]
    variant_get_uint32: make-routine glib "g_variant_get_uint32" [
        value [pointer]
        return: [uint32]
    ]
    variant_get_int64: make-routine glib "g_variant_get_int64" [
        value [pointer]
        return: [int64]
    ]
    variant_get_uint64: make-routine glib "g_variant_get_uint64" [
        value [pointer]
        return: [uint64]
    ]
    variant_get_handle: make-routine glib "g_variant_get_handle" [
        value [pointer]
        return: [int32]
    ]
    variant_get_double: make-routine glib "g_variant_get_double" [
        value [pointer]
        return: [double]
    ]
    variant_get_variant: make-routine glib "g_variant_get_variant" [
        value [pointer]
        return: [pointer]
    ]
    variant_get_string: make-routine glib "g_variant_get_string" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_dup_string: make-routine glib "g_variant_dup_string" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_get_strv: make-routine glib "g_variant_get_strv" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_dup_strv: make-routine glib "g_variant_dup_strv" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_get_objv: make-routine glib "g_variant_get_objv" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_dup_objv: make-routine glib "g_variant_dup_objv" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_get_bytestring: make-routine glib "g_variant_get_bytestring" [
        value [pointer]
        return: [pointer]
    ]
    variant_dup_bytestring: make-routine glib "g_variant_dup_bytestring" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_get_bytestring_array: make-routine glib "g_variant_get_bytestring_array" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_dup_bytestring_array: make-routine glib "g_variant_dup_bytestring_array" [
        value [pointer]
        length [pointer]
        return: [pointer]
    ]
    variant_new_maybe: make-routine glib "g_variant_new_maybe" [
        child_type [pointer]
        child [pointer]
        return: [pointer]
    ]
    variant_new_array: make-routine glib "g_variant_new_array" [
        child_type [pointer]
        children [pointer]
        n_children [uint64]
        return: [pointer]
    ]
    variant_new_tuple: make-routine glib "g_variant_new_tuple" [
        children [pointer]
        n_children [uint64]
        return: [pointer]
    ]
    variant_new_dict_entry: make-routine glib "g_variant_new_dict_entry" [
        key [pointer]
        value [pointer]
        return: [pointer]
    ]
    variant_get_maybe: make-routine glib "g_variant_get_maybe" [
        value [pointer]
        return: [pointer]
    ]
    variant_n_children: make-routine glib "g_variant_n_children" [
        value [pointer]
        return: [uint64]
    ]
    variant_get_child: make-routine glib "g_variant_get_child" [
        value [pointer]
        index_ [uint64]
        format_string [pointer]
        ...
        return: [void]
    ]
    variant_get_child_value: make-routine glib "g_variant_get_child_value" [
        value [pointer]
        index_ [uint64]
        return: [pointer]
    ]
    variant_lookup: make-routine glib "g_variant_lookup" [
        dictionary [pointer]
        key [pointer]
        format_string [pointer]
        ...
        return: [int32]
    ]
    variant_lookup_value: make-routine glib "g_variant_lookup_value" [
        dictionary [pointer]
        key [pointer]
        expected_type [pointer]
        return: [pointer]
    ]
    variant_get_fixed_array: make-routine glib "g_variant_get_fixed_array" [
        value [pointer]
        n_elements [pointer]
        element_size [uint64]
        return: [pointer]
    ]
    variant_get_size: make-routine glib "g_variant_get_size" [
        value [pointer]
        return: [uint64]
    ]
    variant_get_data: make-routine glib "g_variant_get_data" [
        value [pointer]
        return: [pointer]
    ]
    variant_get_data_as_bytes: make-routine glib "g_variant_get_data_as_bytes" [
        value [pointer]
        return: [pointer]
    ]
    variant_store: make-routine glib "g_variant_store" [
        value [pointer]
        data [pointer]
        return: [void]
    ]
    variant_print: make-routine glib "g_variant_print" [
        value [pointer]
        type_annotate [int32]
        return: [pointer]
    ]
    variant_print_string: make-routine glib "g_variant_print_string" [
        value [pointer]
        string [pointer]
        type_annotate [int32]
        return: [pointer]
    ]
    variant_hash: make-routine glib "g_variant_hash" [
        value [pointer]
        return: [uint32]
    ]
    variant_equal: make-routine glib "g_variant_equal" [
        one [pointer]
        two [pointer]
        return: [int32]
    ]
    variant_get_normal_form: make-routine glib "g_variant_get_normal_form" [
        value [pointer]
        return: [pointer]
    ]
    variant_is_normal_form: make-routine glib "g_variant_is_normal_form" [
        value [pointer]
        return: [int32]
    ]
    variant_byteswap: make-routine glib "g_variant_byteswap" [
        value [pointer]
        return: [pointer]
    ]
    variant_new_from_bytes: make-routine glib "g_variant_new_from_bytes" [
        type [pointer]
        bytes [pointer]
        trusted [int32]
        return: [pointer]
    ]
    variant_new_from_data: make-routine glib "g_variant_new_from_data" [
        type [pointer]
        data [pointer]
        size [uint64]
        trusted [int32]
        notify [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    variant_iter_new: make-routine glib "g_variant_iter_new" [
        value [pointer]
        return: [pointer]
    ]
    variant_iter_init: make-routine glib "g_variant_iter_init" [
        iter [pointer]
        value [pointer]
        return: [uint64]
    ]
    variant_iter_copy: make-routine glib "g_variant_iter_copy" [
        iter [pointer]
        return: [pointer]
    ]
    variant_iter_n_children: make-routine glib "g_variant_iter_n_children" [
        iter [pointer]
        return: [uint64]
    ]
    variant_iter_free: make-routine glib "g_variant_iter_free" [
        iter [pointer]
        return: [void]
    ]
    variant_iter_next_value: make-routine glib "g_variant_iter_next_value" [
        iter [pointer]
        return: [pointer]
    ]
    variant_iter_next: make-routine glib "g_variant_iter_next" [
        iter [pointer]
        format_string [pointer]
        ...
        return: [int32]
    ]
    variant_iter_loop: make-routine glib "g_variant_iter_loop" [
        iter [pointer]
        format_string [pointer]
        ...
        return: [int32]
    ]
    variant_parse_error_quark: make-routine glib "g_variant_parse_error_quark" [
        return: [uint32]
    ]
    variant_builder_new: make-routine glib "g_variant_builder_new" [
        type [pointer]
        return: [pointer]
    ]
    variant_builder_unref: make-routine glib "g_variant_builder_unref" [
        builder [pointer]
        return: [void]
    ]
    variant_builder_ref: make-routine glib "g_variant_builder_ref" [
        builder [pointer]
        return: [pointer]
    ]
    variant_builder_init: make-routine glib "g_variant_builder_init" [
        builder [pointer]
        type [pointer]
        return: [void]
    ]
    variant_builder_end: make-routine glib "g_variant_builder_end" [
        builder [pointer]
        return: [pointer]
    ]
    variant_builder_clear: make-routine glib "g_variant_builder_clear" [
        builder [pointer]
        return: [void]
    ]
    variant_builder_open: make-routine glib "g_variant_builder_open" [
        builder [pointer]
        type [pointer]
        return: [void]
    ]
    variant_builder_close: make-routine glib "g_variant_builder_close" [
        builder [pointer]
        return: [void]
    ]
    variant_builder_add_value: make-routine glib "g_variant_builder_add_value" [
        builder [pointer]
        value [pointer]
        return: [void]
    ]
    variant_builder_add: make-routine glib "g_variant_builder_add" [
        builder [pointer]
        format_string [pointer]
        ...
        return: [void]
    ]
    variant_builder_add_parsed: make-routine glib "g_variant_builder_add_parsed" [
        builder [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    variant_new: make-routine glib "g_variant_new" [
        format_string [pointer]
        ...
        return: [pointer]
    ]
    variant_get: make-routine glib "g_variant_get" [
        value [pointer]
        format_string [pointer]
        ...
        return: [void]
    ]
    variant_new_va: make-routine glib "g_variant_new_va" [
        format_string [pointer]
        endptr [pointer]
        app [pointer]
        return: [pointer]
    ]
    variant_get_va: make-routine glib "g_variant_get_va" [
        value [pointer]
        format_string [pointer]
        endptr [pointer]
        app [pointer]
        return: [void]
    ]
    variant_check_format_string: make-routine glib "g_variant_check_format_string" [
        value [pointer]
        format_string [pointer]
        copy_only [int32]
        return: [int32]
    ]
    variant_parse: make-routine glib "g_variant_parse" [
        type [pointer]
        text [pointer]
        limit [pointer]
        endptr [pointer]
        error [pointer]
        return: [pointer]
    ]
    variant_new_parsed: make-routine glib "g_variant_new_parsed" [
        format [pointer]
        ...
        return: [pointer]
    ]
    variant_new_parsed_va: make-routine glib "g_variant_new_parsed_va" [
        format [pointer]
        app [pointer]
        return: [pointer]
    ]
    variant_parse_error_print_context: make-routine glib "g_variant_parse_error_print_context" [
        error [pointer]
        source_str [pointer]
        return: [pointer]
    ]
    variant_compare: make-routine glib "g_variant_compare" [
        one [pointer]
        two [pointer]
        return: [int32]
    ]
    variant_dict_new: make-routine glib "g_variant_dict_new" [
        from_asv [pointer]
        return: [pointer]
    ]
    variant_dict_init: make-routine glib "g_variant_dict_init" [
        dict [pointer]
        from_asv [pointer]
        return: [void]
    ]
    variant_dict_lookup: make-routine glib "g_variant_dict_lookup" [
        dict [pointer]
        key [pointer]
        format_string [pointer]
        ...
        return: [int32]
    ]
    variant_dict_lookup_value: make-routine glib "g_variant_dict_lookup_value" [
        dict [pointer]
        key [pointer]
        expected_type [pointer]
        return: [pointer]
    ]
    variant_dict_contains: make-routine glib "g_variant_dict_contains" [
        dict [pointer]
        key [pointer]
        return: [int32]
    ]
    variant_dict_insert: make-routine glib "g_variant_dict_insert" [
        dict [pointer]
        key [pointer]
        format_string [pointer]
        ...
        return: [void]
    ]
    variant_dict_insert_value: make-routine glib "g_variant_dict_insert_value" [
        dict [pointer]
        key [pointer]
        value [pointer]
        return: [void]
    ]
    variant_dict_remove: make-routine glib "g_variant_dict_remove" [
        dict [pointer]
        key [pointer]
        return: [int32]
    ]
    variant_dict_clear: make-routine glib "g_variant_dict_clear" [
        dict [pointer]
        return: [void]
    ]
    variant_dict_end: make-routine glib "g_variant_dict_end" [
        dict [pointer]
        return: [pointer]
    ]
    variant_dict_ref: make-routine glib "g_variant_dict_ref" [
        dict [pointer]
        return: [pointer]
    ]
    variant_dict_unref: make-routine glib "g_variant_dict_unref" [
        dict [pointer]
        return: [void]
    ]
    type_name: make-routine gobject "g_type_name" [
        type [uint64]
        return: [pointer]
    ]
    type_qname: make-routine gobject "g_type_qname" [
        type [uint64]
        return: [uint32]
    ]
    type_from_name: make-routine gobject "g_type_from_name" [
        name [pointer]
        return: [uint64]
    ]
    type_parent: make-routine gobject "g_type_parent" [
        type [uint64]
        return: [uint64]
    ]
    type_depth: make-routine gobject "g_type_depth" [
        type [uint64]
        return: [uint32]
    ]
    type_next_base: make-routine gobject "g_type_next_base" [
        leaf_type [uint64]
        root_type [uint64]
        return: [uint64]
    ]
    type_is_a: make-routine gobject "g_type_is_a" [
        type [uint64]
        is_a_type [uint64]
        return: [int32]
    ]
    type_class_ref: make-routine gobject "g_type_class_ref" [
        type [uint64]
        return: [pointer]
    ]
    type_class_peek: make-routine gobject "g_type_class_peek" [
        type [uint64]
        return: [pointer]
    ]
    type_class_peek_static: make-routine gobject "g_type_class_peek_static" [
        type [uint64]
        return: [pointer]
    ]
    type_class_unref: make-routine gobject "g_type_class_unref" [
        g_class [pointer]
        return: [void]
    ]
    type_class_peek_parent: make-routine gobject "g_type_class_peek_parent" [
        g_class [pointer]
        return: [pointer]
    ]
    type_interface_peek: make-routine gobject "g_type_interface_peek" [
        instance_class [pointer]
        iface_type [uint64]
        return: [pointer]
    ]
    type_interface_peek_parent: make-routine gobject "g_type_interface_peek_parent" [
        g_iface [pointer]
        return: [pointer]
    ]
    type_default_interface_ref: make-routine gobject "g_type_default_interface_ref" [
        g_type [uint64]
        return: [pointer]
    ]
    type_default_interface_peek: make-routine gobject "g_type_default_interface_peek" [
        g_type [uint64]
        return: [pointer]
    ]
    type_default_interface_unref: make-routine gobject "g_type_default_interface_unref" [
        g_iface [pointer]
        return: [void]
    ]
    type_children: make-routine gobject "g_type_children" [
        type [uint64]
        n_children [pointer]
        return: [pointer]
    ]
    type_interfaces: make-routine gobject "g_type_interfaces" [
        type [uint64]
        n_interfaces [pointer]
        return: [pointer]
    ]
    type_set_qdata: make-routine gobject "g_type_set_qdata" [
        type [uint64]
        quark [uint32]
        data [pointer]
        return: [void]
    ]
    type_get_qdata: make-routine gobject "g_type_get_qdata" [
        type [uint64]
        quark [uint32]
        return: [pointer]
    ]
    type_query: make-routine gobject "g_type_query" [
        type [uint64]
        query [pointer]
        return: [void]
    ]
    type_register_static: make-routine gobject "g_type_register_static" [
        parent_type [uint64]
        type_name [pointer]
        info [pointer]
        flags [int32]
        return: [uint64]
    ]
    type_register_static_simple: make-routine gobject "g_type_register_static_simple" [
        parent_type [uint64]
        type_name [pointer]
        class_size [uint32]
        class_init [pointer]
        instance_size [uint32]
        instance_init [pointer]
        flags [int32]
        return: [uint64]
    ]
    type_register_dynamic: make-routine gobject "g_type_register_dynamic" [
        parent_type [uint64]
        type_name [pointer]
        plugin [pointer]
        flags [int32]
        return: [uint64]
    ]
    type_register_fundamental: make-routine gobject "g_type_register_fundamental" [
        type_id [uint64]
        type_name [pointer]
        info [pointer]
        finfo [pointer]
        flags [int32]
        return: [uint64]
    ]
    type_add_interface_static: make-routine gobject "g_type_add_interface_static" [
        instance_type [uint64]
        interface_type [uint64]
        info [pointer]
        return: [void]
    ]
    type_add_interface_dynamic: make-routine gobject "g_type_add_interface_dynamic" [
        instance_type [uint64]
        interface_type [uint64]
        plugin [pointer]
        return: [void]
    ]
    type_interface_add_prerequisite: make-routine gobject "g_type_interface_add_prerequisite" [
        interface_type [uint64]
        prerequisite_type [uint64]
        return: [void]
    ]
    type_interface_prerequisites: make-routine gobject "g_type_interface_prerequisites" [
        interface_type [uint64]
        n_prerequisites [pointer]
        return: [pointer]
    ]
    type_class_add_private: make-routine gobject "g_type_class_add_private" [
        g_class [pointer]
        private_size [uint64]
        return: [void]
    ]
    type_add_instance_private: make-routine gobject "g_type_add_instance_private" [
        class_type [uint64]
        private_size [uint64]
        return: [int32]
    ]
    type_instance_get_private: make-routine gobject "g_type_instance_get_private" [
        instance [pointer]
        private_type [uint64]
        return: [pointer]
    ]
    type_class_adjust_private_offset: make-routine gobject "g_type_class_adjust_private_offset" [
        g_class [pointer]
        private_size_or_offset [pointer]
        return: [void]
    ]
    type_add_class_private: make-routine gobject "g_type_add_class_private" [
        class_type [uint64]
        private_size [uint64]
        return: [void]
    ]
    type_class_get_private: make-routine gobject "g_type_class_get_private" [
        klass [pointer]
        private_type [uint64]
        return: [pointer]
    ]
    type_class_get_instance_private_offset: make-routine gobject "g_type_class_get_instance_private_offset" [
        g_class [pointer]
        return: [int32]
    ]
    type_ensure: make-routine gobject "g_type_ensure" [
        type [uint64]
        return: [void]
    ]
    type_get_type_registration_serial: make-routine gobject "g_type_get_type_registration_serial" [
        return: [uint32]
    ]
    type_get_plugin: make-routine gobject "g_type_get_plugin" [
        type [uint64]
        return: [pointer]
    ]
    type_interface_get_plugin: make-routine gobject "g_type_interface_get_plugin" [
        instance_type [uint64]
        interface_type [uint64]
        return: [pointer]
    ]
    type_fundamental_next: make-routine gobject "g_type_fundamental_next" [
        return: [uint64]
    ]
    type_fundamental: make-routine gobject "g_type_fundamental" [
        type_id [uint64]
        return: [uint64]
    ]
    type_create_instance: make-routine gobject "g_type_create_instance" [
        type [uint64]
        return: [pointer]
    ]
    type_free_instance: make-routine gobject "g_type_free_instance" [
        instance [pointer]
        return: [void]
    ]
    type_add_class_cache_func: make-routine gobject "g_type_add_class_cache_func" [
        cache_data [pointer]
        cache_func [pointer]
        return: [void]
    ]
    type_remove_class_cache_func: make-routine gobject "g_type_remove_class_cache_func" [
        cache_data [pointer]
        cache_func [pointer]
        return: [void]
    ]
    type_class_unref_uncached: make-routine gobject "g_type_class_unref_uncached" [
        g_class [pointer]
        return: [void]
    ]
    type_add_interface_check: make-routine gobject "g_type_add_interface_check" [
        check_data [pointer]
        check_func [pointer]
        return: [void]
    ]
    type_remove_interface_check: make-routine gobject "g_type_remove_interface_check" [
        check_data [pointer]
        check_func [pointer]
        return: [void]
    ]
    type_value_table_peek: make-routine gobject "g_type_value_table_peek" [
        type [uint64]
        return: [pointer]
    ]
    type_check_instance: make-routine gobject "g_type_check_instance" [
        instance [pointer]
        return: [int32]
    ]
    type_check_instance_cast: make-routine gobject "g_type_check_instance_cast" [
        instance [pointer]
        iface_type [uint64]
        return: [pointer]
    ]
    type_check_instance_is_a: make-routine gobject "g_type_check_instance_is_a" [
        instance [pointer]
        iface_type [uint64]
        return: [int32]
    ]
    type_check_instance_is_fundamentally_a: make-routine gobject "g_type_check_instance_is_fundamentally_a" [
        instance [pointer]
        fundamental_type [uint64]
        return: [int32]
    ]
    type_check_class_cast: make-routine gobject "g_type_check_class_cast" [
        g_class [pointer]
        is_a_type [uint64]
        return: [pointer]
    ]
    type_check_class_is_a: make-routine gobject "g_type_check_class_is_a" [
        g_class [pointer]
        is_a_type [uint64]
        return: [int32]
    ]
    type_check_is_value_type: make-routine gobject "g_type_check_is_value_type" [
        type [uint64]
        return: [int32]
    ]
    type_check_value: make-routine gobject "g_type_check_value" [
        value [pointer]
        return: [int32]
    ]
    type_check_value_holds: make-routine gobject "g_type_check_value_holds" [
        value [pointer]
        type [uint64]
        return: [int32]
    ]
    type_test_flags: make-routine gobject "g_type_test_flags" [
        type [uint64]
        flags [uint32]
        return: [int32]
    ]
    type_name_from_instance: make-routine gobject "g_type_name_from_instance" [
        instance [pointer]
        return: [pointer]
    ]
    type_name_from_class: make-routine gobject "g_type_name_from_class" [
        g_class [pointer]
        return: [pointer]
    ]
    value_init: make-routine gobject "g_value_init" [
        value [pointer]
        g_type [uint64]
        return: [pointer]
    ]
    value_copy: make-routine gobject "g_value_copy" [
        src_value [pointer]
        dest_value [pointer]
        return: [void]
    ]
    value_reset: make-routine gobject "g_value_reset" [
        value [pointer]
        return: [pointer]
    ]
    value_unset: make-routine gobject "g_value_unset" [
        value [pointer]
        return: [void]
    ]
    value_set_instance: make-routine gobject "g_value_set_instance" [
        value [pointer]
        instance [pointer]
        return: [void]
    ]
    value_init_from_instance: make-routine gobject "g_value_init_from_instance" [
        value [pointer]
        instance [pointer]
        return: [void]
    ]
    value_fits_pointer: make-routine gobject "g_value_fits_pointer" [
        value [pointer]
        return: [int32]
    ]
    value_peek_pointer: make-routine gobject "g_value_peek_pointer" [
        value [pointer]
        return: [pointer]
    ]
    value_type_compatible: make-routine gobject "g_value_type_compatible" [
        src_type [uint64]
        dest_type [uint64]
        return: [int32]
    ]
    value_type_transformable: make-routine gobject "g_value_type_transformable" [
        src_type [uint64]
        dest_type [uint64]
        return: [int32]
    ]
    value_transform: make-routine gobject "g_value_transform" [
        src_value [pointer]
        dest_value [pointer]
        return: [int32]
    ]
    value_register_transform_func: make-routine gobject "g_value_register_transform_func" [
        src_type [uint64]
        dest_type [uint64]
        transform_func [pointer]
        return: [void]
    ]
    param_spec_ref: make-routine gobject "g_param_spec_ref" [
        pspec [pointer]
        return: [pointer]
    ]
    param_spec_unref: make-routine gobject "g_param_spec_unref" [
        pspec [pointer]
        return: [void]
    ]
    param_spec_sink: make-routine gobject "g_param_spec_sink" [
        pspec [pointer]
        return: [void]
    ]
    param_spec_ref_sink: make-routine gobject "g_param_spec_ref_sink" [
        pspec [pointer]
        return: [pointer]
    ]
    param_spec_get_qdata: make-routine gobject "g_param_spec_get_qdata" [
        pspec [pointer]
        quark [uint32]
        return: [pointer]
    ]
    param_spec_set_qdata: make-routine gobject "g_param_spec_set_qdata" [
        pspec [pointer]
        quark [uint32]
        data [pointer]
        return: [void]
    ]
    param_spec_set_qdata_full: make-routine gobject "g_param_spec_set_qdata_full" [
        pspec [pointer]
        quark [uint32]
        data [pointer]
        destroy [pointer]
        return: [void]
    ]
    param_spec_steal_qdata: make-routine gobject "g_param_spec_steal_qdata" [
        pspec [pointer]
        quark [uint32]
        return: [pointer]
    ]
    param_spec_get_redirect_target: make-routine gobject "g_param_spec_get_redirect_target" [
        pspec [pointer]
        return: [pointer]
    ]
    param_value_set_default: make-routine gobject "g_param_value_set_default" [
        pspec [pointer]
        value [pointer]
        return: [void]
    ]
    param_value_defaults: make-routine gobject "g_param_value_defaults" [
        pspec [pointer]
        value [pointer]
        return: [int32]
    ]
    param_value_validate: make-routine gobject "g_param_value_validate" [
        pspec [pointer]
        value [pointer]
        return: [int32]
    ]
    param_value_convert: make-routine gobject "g_param_value_convert" [
        pspec [pointer]
        src_value [pointer]
        dest_value [pointer]
        strict_validation [int32]
        return: [int32]
    ]
    param_values_cmp: make-routine gobject "g_param_values_cmp" [
        pspec [pointer]
        value1 [pointer]
        value2 [pointer]
        return: [int32]
    ]
    param_spec_get_name: make-routine gobject "g_param_spec_get_name" [
        pspec [pointer]
        return: [pointer]
    ]
    param_spec_get_nick: make-routine gobject "g_param_spec_get_nick" [
        pspec [pointer]
        return: [pointer]
    ]
    param_spec_get_blurb: make-routine gobject "g_param_spec_get_blurb" [
        pspec [pointer]
        return: [pointer]
    ]
    value_set_param: make-routine gobject "g_value_set_param" [
        value [pointer]
        param [pointer]
        return: [void]
    ]
    value_get_param: make-routine gobject "g_value_get_param" [
        value [pointer]
        return: [pointer]
    ]
    value_dup_param: make-routine gobject "g_value_dup_param" [
        value [pointer]
        return: [pointer]
    ]
    value_take_param: make-routine gobject "g_value_take_param" [
        value [pointer]
        param [pointer]
        return: [void]
    ]
    param_spec_get_default_value: make-routine gobject "g_param_spec_get_default_value" [
        param [pointer]
        return: [pointer]
    ]
    param_type_register_static: make-routine gobject "g_param_type_register_static" [
        name [pointer]
        pspec_info [pointer]
        return: [uint64]
    ]
    param_spec_internal: make-routine gobject "g_param_spec_internal" [
        param_type [uint64]
        name [pointer]
        nick [pointer]
        blurb [pointer]
        flags [int32]
        return: [pointer]
    ]
    param_spec_pool_new: make-routine gobject "g_param_spec_pool_new" [
        type_prefixing [int32]
        return: [pointer]
    ]
    param_spec_pool_insert: make-routine gobject "g_param_spec_pool_insert" [
        pool [pointer]
        pspec [pointer]
        owner_type [uint64]
        return: [void]
    ]
    param_spec_pool_remove: make-routine gobject "g_param_spec_pool_remove" [
        pool [pointer]
        pspec [pointer]
        return: [void]
    ]
    param_spec_pool_lookup: make-routine gobject "g_param_spec_pool_lookup" [
        pool [pointer]
        param_name [pointer]
        owner_type [uint64]
        walk_ancestors [int32]
        return: [pointer]
    ]
    param_spec_pool_list_owned: make-routine gobject "g_param_spec_pool_list_owned" [
        pool [pointer]
        owner_type [uint64]
        return: [pointer]
    ]
    param_spec_pool_list: make-routine gobject "g_param_spec_pool_list" [
        pool [pointer]
        owner_type [uint64]
        n_pspecs_p [pointer]
        return: [pointer]
    ]
    cclosure_new: make-routine gobject "g_cclosure_new" [
        callback_func [pointer]
        user_data [pointer]
        destroy_data [pointer]
        return: [pointer]
    ]
    cclosure_new_swap: make-routine gobject "g_cclosure_new_swap" [
        callback_func [pointer]
        user_data [pointer]
        destroy_data [pointer]
        return: [pointer]
    ]
    signal_type_cclosure_new: make-routine gobject "g_signal_type_cclosure_new" [
        itype [uint64]
        struct_offset [uint32]
        return: [pointer]
    ]
    closure_ref: make-routine gobject "g_closure_ref" [
        closure [pointer]
        return: [pointer]
    ]
    closure_sink: make-routine gobject "g_closure_sink" [
        closure [pointer]
        return: [void]
    ]
    closure_unref: make-routine gobject "g_closure_unref" [
        closure [pointer]
        return: [void]
    ]
    closure_new_simple: make-routine gobject "g_closure_new_simple" [
        sizeof_closure [uint32]
        data [pointer]
        return: [pointer]
    ]
    closure_add_finalize_notifier: make-routine gobject "g_closure_add_finalize_notifier" [
        closure [pointer]
        notify_data [pointer]
        notify_func [pointer]
        return: [void]
    ]
    closure_remove_finalize_notifier: make-routine gobject "g_closure_remove_finalize_notifier" [
        closure [pointer]
        notify_data [pointer]
        notify_func [pointer]
        return: [void]
    ]
    closure_add_invalidate_notifier: make-routine gobject "g_closure_add_invalidate_notifier" [
        closure [pointer]
        notify_data [pointer]
        notify_func [pointer]
        return: [void]
    ]
    closure_remove_invalidate_notifier: make-routine gobject "g_closure_remove_invalidate_notifier" [
        closure [pointer]
        notify_data [pointer]
        notify_func [pointer]
        return: [void]
    ]
    closure_add_marshal_guards: make-routine gobject "g_closure_add_marshal_guards" [
        closure [pointer]
        pre_marshal_data [pointer]
        pre_marshal_notify [pointer]
        post_marshal_data [pointer]
        post_marshal_notify [pointer]
        return: [void]
    ]
    closure_set_marshal: make-routine gobject "g_closure_set_marshal" [
        closure [pointer]
        marshal [pointer]
        return: [void]
    ]
    closure_set_meta_marshal: make-routine gobject "g_closure_set_meta_marshal" [
        closure [pointer]
        marshal_data [pointer]
        meta_marshal [pointer]
        return: [void]
    ]
    closure_invalidate: make-routine gobject "g_closure_invalidate" [
        closure [pointer]
        return: [void]
    ]
    closure_invoke: make-routine gobject "g_closure_invoke" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        return: [void]
    ]
    cclosure_marshal_generic: make-routine gobject "g_cclosure_marshal_generic" [
        closure [pointer]
        return_gvalue [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_generic_va: make-routine gobject "g_cclosure_marshal_generic_va" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args_list [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__VOID: make-routine gobject "g_cclosure_marshal_VOID__VOID" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__VOIDv: make-routine gobject "g_cclosure_marshal_VOID__VOIDv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__BOOLEAN: make-routine gobject "g_cclosure_marshal_VOID__BOOLEAN" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__BOOLEANv: make-routine gobject "g_cclosure_marshal_VOID__BOOLEANv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__CHAR: make-routine gobject "g_cclosure_marshal_VOID__CHAR" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__CHARv: make-routine gobject "g_cclosure_marshal_VOID__CHARv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__UCHAR: make-routine gobject "g_cclosure_marshal_VOID__UCHAR" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__UCHARv: make-routine gobject "g_cclosure_marshal_VOID__UCHARv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__INT: make-routine gobject "g_cclosure_marshal_VOID__INT" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__INTv: make-routine gobject "g_cclosure_marshal_VOID__INTv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__UINT: make-routine gobject "g_cclosure_marshal_VOID__UINT" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__UINTv: make-routine gobject "g_cclosure_marshal_VOID__UINTv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__LONG: make-routine gobject "g_cclosure_marshal_VOID__LONG" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__LONGv: make-routine gobject "g_cclosure_marshal_VOID__LONGv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__ULONG: make-routine gobject "g_cclosure_marshal_VOID__ULONG" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__ULONGv: make-routine gobject "g_cclosure_marshal_VOID__ULONGv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__ENUM: make-routine gobject "g_cclosure_marshal_VOID__ENUM" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__ENUMv: make-routine gobject "g_cclosure_marshal_VOID__ENUMv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__FLAGS: make-routine gobject "g_cclosure_marshal_VOID__FLAGS" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__FLAGSv: make-routine gobject "g_cclosure_marshal_VOID__FLAGSv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__FLOAT: make-routine gobject "g_cclosure_marshal_VOID__FLOAT" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__FLOATv: make-routine gobject "g_cclosure_marshal_VOID__FLOATv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__DOUBLE: make-routine gobject "g_cclosure_marshal_VOID__DOUBLE" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__DOUBLEv: make-routine gobject "g_cclosure_marshal_VOID__DOUBLEv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__STRING: make-routine gobject "g_cclosure_marshal_VOID__STRING" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__STRINGv: make-routine gobject "g_cclosure_marshal_VOID__STRINGv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__PARAM: make-routine gobject "g_cclosure_marshal_VOID__PARAM" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__PARAMv: make-routine gobject "g_cclosure_marshal_VOID__PARAMv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__BOXED: make-routine gobject "g_cclosure_marshal_VOID__BOXED" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__BOXEDv: make-routine gobject "g_cclosure_marshal_VOID__BOXEDv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__POINTER: make-routine gobject "g_cclosure_marshal_VOID__POINTER" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__POINTERv: make-routine gobject "g_cclosure_marshal_VOID__POINTERv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__OBJECT: make-routine gobject "g_cclosure_marshal_VOID__OBJECT" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__OBJECTv: make-routine gobject "g_cclosure_marshal_VOID__OBJECTv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__VARIANT: make-routine gobject "g_cclosure_marshal_VOID__VARIANT" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__VARIANTv: make-routine gobject "g_cclosure_marshal_VOID__VARIANTv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__UINT_POINTER: make-routine gobject "g_cclosure_marshal_VOID__UINT_POINTER" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_VOID__UINT_POINTERv: make-routine gobject "g_cclosure_marshal_VOID__UINT_POINTERv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_BOOLEAN__FLAGS: make-routine gobject "g_cclosure_marshal_BOOLEAN__FLAGS" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_BOOLEAN__FLAGSv: make-routine gobject "g_cclosure_marshal_BOOLEAN__FLAGSv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_STRING__OBJECT_POINTER: make-routine gobject "g_cclosure_marshal_STRING__OBJECT_POINTER" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_STRING__OBJECT_POINTERv: make-routine gobject "g_cclosure_marshal_STRING__OBJECT_POINTERv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    cclosure_marshal_BOOLEAN__BOXED_BOXED: make-routine gobject "g_cclosure_marshal_BOOLEAN__BOXED_BOXED" [
        closure [pointer]
        return_value [pointer]
        n_param_values [uint32]
        param_values [pointer]
        invocation_hint [pointer]
        marshal_data [pointer]
        return: [void]
    ]
    cclosure_marshal_BOOLEAN__BOXED_BOXEDv: make-routine gobject "g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv" [
        closure [pointer]
        return_value [pointer]
        instance [pointer]
        args [int32]
        marshal_data [pointer]
        n_params [int32]
        param_types [pointer]
        return: [void]
    ]
    signal_newv: make-routine gobject "g_signal_newv" [
        signal_name [pointer]
        itype [uint64]
        signal_flags [int32]
        class_closure [pointer]
        accumulator [pointer]
        accu_data [pointer]
        c_marshaller [pointer]
        return_type [uint64]
        n_params [uint32]
        param_types [pointer]
        return: [uint32]
    ]
    signal_new_valist: make-routine gobject "g_signal_new_valist" [
        signal_name [pointer]
        itype [uint64]
        signal_flags [int32]
        class_closure [pointer]
        accumulator [pointer]
        accu_data [pointer]
        c_marshaller [pointer]
        return_type [uint64]
        n_params [uint32]
        args [int32]
        return: [uint32]
    ]
    signal_new: make-routine gobject "g_signal_new" [
        signal_name [pointer]
        itype [uint64]
        signal_flags [int32]
        class_offset [uint32]
        accumulator [pointer]
        accu_data [pointer]
        c_marshaller [pointer]
        return_type [uint64]
        n_params [uint32]
        ...
        return: [uint32]
    ]
    signal_new_class_handler: make-routine gobject "g_signal_new_class_handler" [
        signal_name [pointer]
        itype [uint64]
        signal_flags [int32]
        class_handler [pointer]
        accumulator [pointer]
        accu_data [pointer]
        c_marshaller [pointer]
        return_type [uint64]
        n_params [uint32]
        ...
        return: [uint32]
    ]
    signal_set_va_marshaller: make-routine gobject "g_signal_set_va_marshaller" [
        signal_id [uint32]
        instance_type [uint64]
        va_marshaller [pointer]
        return: [void]
    ]
    signal_emitv: make-routine gobject "g_signal_emitv" [
        instance_and_params [pointer]
        signal_id [uint32]
        detail [uint32]
        return_value [pointer]
        return: [void]
    ]
    signal_emit_valist: make-routine gobject "g_signal_emit_valist" [
        instance [pointer]
        signal_id [uint32]
        detail [uint32]
        var_args [int32]
        return: [void]
    ]
    signal_emit: make-routine gobject "g_signal_emit" [
        instance [pointer]
        signal_id [uint32]
        detail [uint32]
        ...
        return: [void]
    ]
    signal_emit_by_name: make-routine gobject "g_signal_emit_by_name" [
        instance [pointer]
        detailed_signal [pointer]
        ...
        return: [void]
    ]
    signal_lookup: make-routine gobject "g_signal_lookup" [
        name [pointer]
        itype [uint64]
        return: [uint32]
    ]
    signal_name: make-routine gobject "g_signal_name" [
        signal_id [uint32]
        return: [pointer]
    ]
    signal_query: make-routine gobject "g_signal_query" [
        signal_id [uint32]
        query [pointer]
        return: [void]
    ]
    signal_list_ids: make-routine gobject "g_signal_list_ids" [
        itype [uint64]
        n_ids [pointer]
        return: [pointer]
    ]
    signal_parse_name: make-routine gobject "g_signal_parse_name" [
        detailed_signal [pointer]
        itype [uint64]
        signal_id_p [pointer]
        detail_p [pointer]
        force_detail_quark [int32]
        return: [int32]
    ]
    signal_get_invocation_hint: make-routine gobject "g_signal_get_invocation_hint" [
        instance [pointer]
        return: [pointer]
    ]
    signal_stop_emission: make-routine gobject "g_signal_stop_emission" [
        instance [pointer]
        signal_id [uint32]
        detail [uint32]
        return: [void]
    ]
    signal_stop_emission_by_name: make-routine gobject "g_signal_stop_emission_by_name" [
        instance [pointer]
        detailed_signal [pointer]
        return: [void]
    ]
    signal_add_emission_hook: make-routine gobject "g_signal_add_emission_hook" [
        signal_id [uint32]
        detail [uint32]
        hook_func [pointer]
        hook_data [pointer]
        data_destroy [pointer]
        return: [uint64]
    ]
    signal_remove_emission_hook: make-routine gobject "g_signal_remove_emission_hook" [
        signal_id [uint32]
        hook_id [uint64]
        return: [void]
    ]
    signal_has_handler_pending: make-routine gobject "g_signal_has_handler_pending" [
        instance [pointer]
        signal_id [uint32]
        detail [uint32]
        may_be_blocked [int32]
        return: [int32]
    ]
    signal_connect_closure_by_id: make-routine gobject "g_signal_connect_closure_by_id" [
        instance [pointer]
        signal_id [uint32]
        detail [uint32]
        closure [pointer]
        after [int32]
        return: [uint64]
    ]
    signal_connect_closure: make-routine gobject "g_signal_connect_closure" [
        instance [pointer]
        detailed_signal [pointer]
        closure [pointer]
        after [int32]
        return: [uint64]
    ]
    signal_connect_data: make-routine gobject "g_signal_connect_data" [
        instance [pointer]
        detailed_signal [pointer]
        c_handler [pointer]
        data [pointer]
        destroy_data [pointer]
        connect_flags [int32]
        return: [uint64]
    ]
    signal_handler_block: make-routine gobject "g_signal_handler_block" [
        instance [pointer]
        handler_id [uint64]
        return: [void]
    ]
    signal_handler_unblock: make-routine gobject "g_signal_handler_unblock" [
        instance [pointer]
        handler_id [uint64]
        return: [void]
    ]
    signal_handler_disconnect: make-routine gobject "g_signal_handler_disconnect" [
        instance [pointer]
        handler_id [uint64]
        return: [void]
    ]
    signal_handler_is_connected: make-routine gobject "g_signal_handler_is_connected" [
        instance [pointer]
        handler_id [uint64]
        return: [int32]
    ]
    signal_handler_find: make-routine gobject "g_signal_handler_find" [
        instance [pointer]
        mask [int32]
        signal_id [uint32]
        detail [uint32]
        closure [pointer]
        func [pointer]
        data [pointer]
        return: [uint64]
    ]
    signal_handlers_block_matched: make-routine gobject "g_signal_handlers_block_matched" [
        instance [pointer]
        mask [int32]
        signal_id [uint32]
        detail [uint32]
        closure [pointer]
        func [pointer]
        data [pointer]
        return: [uint32]
    ]
    signal_handlers_unblock_matched: make-routine gobject "g_signal_handlers_unblock_matched" [
        instance [pointer]
        mask [int32]
        signal_id [uint32]
        detail [uint32]
        closure [pointer]
        func [pointer]
        data [pointer]
        return: [uint32]
    ]
    signal_handlers_disconnect_matched: make-routine gobject "g_signal_handlers_disconnect_matched" [
        instance [pointer]
        mask [int32]
        signal_id [uint32]
        detail [uint32]
        closure [pointer]
        func [pointer]
        data [pointer]
        return: [uint32]
    ]
    signal_override_class_closure: make-routine gobject "g_signal_override_class_closure" [
        signal_id [uint32]
        instance_type [uint64]
        class_closure [pointer]
        return: [void]
    ]
    signal_override_class_handler: make-routine gobject "g_signal_override_class_handler" [
        signal_name [pointer]
        instance_type [uint64]
        class_handler [pointer]
        return: [void]
    ]
    signal_chain_from_overridden: make-routine gobject "g_signal_chain_from_overridden" [
        instance_and_params [pointer]
        return_value [pointer]
        return: [void]
    ]
    signal_chain_from_overridden_handler: make-routine gobject "g_signal_chain_from_overridden_handler" [
        instance [pointer]
        ...
        return: [void]
    ]
    signal_accumulator_true_handled: make-routine gobject "g_signal_accumulator_true_handled" [
        ihint [pointer]
        return_accu [pointer]
        handler_return [pointer]
        dummy [pointer]
        return: [int32]
    ]
    signal_accumulator_first_wins: make-routine gobject "g_signal_accumulator_first_wins" [
        ihint [pointer]
        return_accu [pointer]
        handler_return [pointer]
        dummy [pointer]
        return: [int32]
    ]
    signal_handlers_destroy: make-routine gobject "g_signal_handlers_destroy" [
        instance [pointer]
        return: [void]
    ]
    date_get_type: make-routine gobject "g_date_get_type" [
        return: [uint64]
    ]
    strv_get_type: make-routine gobject "g_strv_get_type" [
        return: [uint64]
    ]
    gstring_get_type: make-routine gobject "g_gstring_get_type" [
        return: [uint64]
    ]
    hash_table_get_type: make-routine gobject "g_hash_table_get_type" [
        return: [uint64]
    ]
    array_get_type: make-routine gobject "g_array_get_type" [
        return: [uint64]
    ]
    byte_array_get_type: make-routine gobject "g_byte_array_get_type" [
        return: [uint64]
    ]
    ptr_array_get_type: make-routine gobject "g_ptr_array_get_type" [
        return: [uint64]
    ]
    bytes_get_type: make-routine gobject "g_bytes_get_type" [
        return: [uint64]
    ]
    variant_type_get_gtype: make-routine gobject "g_variant_type_get_gtype" [
        return: [uint64]
    ]
    regex_get_type: make-routine gobject "g_regex_get_type" [
        return: [uint64]
    ]
    match_info_get_type: make-routine gobject "g_match_info_get_type" [
        return: [uint64]
    ]
    error_get_type: make-routine gobject "g_error_get_type" [
        return: [uint64]
    ]
    date_time_get_type: make-routine gobject "g_date_time_get_type" [
        return: [uint64]
    ]
    time_zone_get_type: make-routine gobject "g_time_zone_get_type" [
        return: [uint64]
    ]
    io_channel_get_type: make-routine gobject "g_io_channel_get_type" [
        return: [uint64]
    ]
    io_condition_get_type: make-routine gobject "g_io_condition_get_type" [
        return: [uint64]
    ]
    variant_builder_get_type: make-routine gobject "g_variant_builder_get_type" [
        return: [uint64]
    ]
    variant_dict_get_type: make-routine gobject "g_variant_dict_get_type" [
        return: [uint64]
    ]
    key_file_get_type: make-routine gobject "g_key_file_get_type" [
        return: [uint64]
    ]
    main_loop_get_type: make-routine gobject "g_main_loop_get_type" [
        return: [uint64]
    ]
    main_context_get_type: make-routine gobject "g_main_context_get_type" [
        return: [uint64]
    ]
    source_get_type: make-routine gobject "g_source_get_type" [
        return: [uint64]
    ]
    pollfd_get_type: make-routine gobject "g_pollfd_get_type" [
        return: [uint64]
    ]
    thread_get_type: make-routine gobject "g_thread_get_type" [
        return: [uint64]
    ]
    checksum_get_type: make-routine gobject "g_checksum_get_type" [
        return: [uint64]
    ]
    markup_parse_context_get_type: make-routine gobject "g_markup_parse_context_get_type" [
        return: [uint64]
    ]
    mapped_file_get_type: make-routine gobject "g_mapped_file_get_type" [
        return: [uint64]
    ]
    boxed_copy: make-routine gobject "g_boxed_copy" [
        boxed_type [uint64]
        src_boxed [pointer]
        return: [pointer]
    ]
    boxed_free: make-routine gobject "g_boxed_free" [
        boxed_type [uint64]
        boxed [pointer]
        return: [void]
    ]
    value_set_boxed: make-routine gobject "g_value_set_boxed" [
        value [pointer]
        v_boxed [pointer]
        return: [void]
    ]
    value_set_static_boxed: make-routine gobject "g_value_set_static_boxed" [
        value [pointer]
        v_boxed [pointer]
        return: [void]
    ]
    value_take_boxed: make-routine gobject "g_value_take_boxed" [
        value [pointer]
        v_boxed [pointer]
        return: [void]
    ]
    value_get_boxed: make-routine gobject "g_value_get_boxed" [
        value [pointer]
        return: [pointer]
    ]
    value_dup_boxed: make-routine gobject "g_value_dup_boxed" [
        value [pointer]
        return: [pointer]
    ]
    boxed_type_register_static: make-routine gobject "g_boxed_type_register_static" [
        name [pointer]
        boxed_copy [pointer]
        boxed_free [pointer]
        return: [uint64]
    ]
    closure_get_type: make-routine gobject "g_closure_get_type" [
        return: [uint64]
    ]
    value_get_type: make-routine gobject "g_value_get_type" [
        return: [uint64]
    ]
    initially_unowned_get_type: make-routine gobject "g_initially_unowned_get_type" [
        return: [uint64]
    ]
    object_class_install_property: make-routine gobject "g_object_class_install_property" [
        oclass [pointer]
        property_id [uint32]
        pspec [pointer]
        return: [void]
    ]
    object_class_find_property: make-routine gobject "g_object_class_find_property" [
        oclass [pointer]
        property_name [pointer]
        return: [pointer]
    ]
    object_class_list_properties: make-routine gobject "g_object_class_list_properties" [
        oclass [pointer]
        n_properties [pointer]
        return: [pointer]
    ]
    object_class_override_property: make-routine gobject "g_object_class_override_property" [
        oclass [pointer]
        property_id [uint32]
        name [pointer]
        return: [void]
    ]
    object_class_install_properties: make-routine gobject "g_object_class_install_properties" [
        oclass [pointer]
        n_pspecs [uint32]
        pspecs [pointer]
        return: [void]
    ]
    object_interface_install_property: make-routine gobject "g_object_interface_install_property" [
        g_iface [pointer]
        pspec [pointer]
        return: [void]
    ]
    object_interface_find_property: make-routine gobject "g_object_interface_find_property" [
        g_iface [pointer]
        property_name [pointer]
        return: [pointer]
    ]
    object_interface_list_properties: make-routine gobject "g_object_interface_list_properties" [
        g_iface [pointer]
        n_properties_p [pointer]
        return: [pointer]
    ]
    object_get_type: make-routine gobject "g_object_get_type" [
        return: [uint64]
    ]
    object_new: make-routine gobject "g_object_new" [
        object_type [uint64]
        first_property_name [pointer]
        ...
        return: [pointer]
    ]
    object_newv: make-routine gobject "g_object_newv" [
        object_type [uint64]
        n_parameters [uint32]
        parameters [pointer]
        return: [pointer]
    ]
    object_new_valist: make-routine gobject "g_object_new_valist" [
        object_type [uint64]
        first_property_name [pointer]
        var_args [int32]
        return: [pointer]
    ]
    object_set: make-routine gobject "g_object_set" [
        object [pointer]
        first_property_name [pointer]
        ...
        return: [void]
    ]
    object_get: make-routine gobject "g_object_get" [
        object [pointer]
        first_property_name [pointer]
        ...
        return: [void]
    ]
    object_connect: make-routine gobject "g_object_connect" [
        object [pointer]
        signal_spec [pointer]
        ...
        return: [pointer]
    ]
    object_disconnect: make-routine gobject "g_object_disconnect" [
        object [pointer]
        signal_spec [pointer]
        ...
        return: [void]
    ]
    object_set_valist: make-routine gobject "g_object_set_valist" [
        object [pointer]
        first_property_name [pointer]
        var_args [int32]
        return: [void]
    ]
    object_get_valist: make-routine gobject "g_object_get_valist" [
        object [pointer]
        first_property_name [pointer]
        var_args [int32]
        return: [void]
    ]
    object_set_property: make-routine gobject "g_object_set_property" [
        object [pointer]
        property_name [pointer]
        value [pointer]
        return: [void]
    ]
    object_get_property: make-routine gobject "g_object_get_property" [
        object [pointer]
        property_name [pointer]
        value [pointer]
        return: [void]
    ]
    object_freeze_notify: make-routine gobject "g_object_freeze_notify" [
        object [pointer]
        return: [void]
    ]
    object_notify: make-routine gobject "g_object_notify" [
        object [pointer]
        property_name [pointer]
        return: [void]
    ]
    object_notify_by_pspec: make-routine gobject "g_object_notify_by_pspec" [
        object [pointer]
        pspec [pointer]
        return: [void]
    ]
    object_thaw_notify: make-routine gobject "g_object_thaw_notify" [
        object [pointer]
        return: [void]
    ]
    object_is_floating: make-routine gobject "g_object_is_floating" [
        object [pointer]
        return: [int32]
    ]
    object_ref_sink: make-routine gobject "g_object_ref_sink" [
        object [pointer]
        return: [pointer]
    ]
    object_ref: make-routine gobject "g_object_ref" [
        object [pointer]
        return: [pointer]
    ]
    object_unref: make-routine gobject "g_object_unref" [
        object [pointer]
        return: [void]
    ]
    object_weak_ref: make-routine gobject "g_object_weak_ref" [
        object [pointer]
        notify [pointer]
        data [pointer]
        return: [void]
    ]
    object_weak_unref: make-routine gobject "g_object_weak_unref" [
        object [pointer]
        notify [pointer]
        data [pointer]
        return: [void]
    ]
    object_add_weak_pointer: make-routine gobject "g_object_add_weak_pointer" [
        object [pointer]
        weak_pointer_location [pointer]
        return: [void]
    ]
    object_remove_weak_pointer: make-routine gobject "g_object_remove_weak_pointer" [
        object [pointer]
        weak_pointer_location [pointer]
        return: [void]
    ]
    object_add_toggle_ref: make-routine gobject "g_object_add_toggle_ref" [
        object [pointer]
        notify [pointer]
        data [pointer]
        return: [void]
    ]
    object_remove_toggle_ref: make-routine gobject "g_object_remove_toggle_ref" [
        object [pointer]
        notify [pointer]
        data [pointer]
        return: [void]
    ]
    object_get_qdata: make-routine gobject "g_object_get_qdata" [
        object [pointer]
        quark [uint32]
        return: [pointer]
    ]
    object_set_qdata: make-routine gobject "g_object_set_qdata" [
        object [pointer]
        quark [uint32]
        data [pointer]
        return: [void]
    ]
    object_set_qdata_full: make-routine gobject "g_object_set_qdata_full" [
        object [pointer]
        quark [uint32]
        data [pointer]
        destroy [pointer]
        return: [void]
    ]
    object_steal_qdata: make-routine gobject "g_object_steal_qdata" [
        object [pointer]
        quark [uint32]
        return: [pointer]
    ]
    object_dup_qdata: make-routine gobject "g_object_dup_qdata" [
        object [pointer]
        quark [uint32]
        dup_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    object_replace_qdata: make-routine gobject "g_object_replace_qdata" [
        object [pointer]
        quark [uint32]
        oldval [pointer]
        newval [pointer]
        destroy [pointer]
        old_destroy [pointer]
        return: [int32]
    ]
    object_get_data: make-routine gobject "g_object_get_data" [
        object [pointer]
        key [pointer]
        return: [pointer]
    ]
    object_set_data: make-routine gobject "g_object_set_data" [
        object [pointer]
        key [pointer]
        data [pointer]
        return: [void]
    ]
    object_set_data_full: make-routine gobject "g_object_set_data_full" [
        object [pointer]
        key [pointer]
        data [pointer]
        destroy [pointer]
        return: [void]
    ]
    object_steal_data: make-routine gobject "g_object_steal_data" [
        object [pointer]
        key [pointer]
        return: [pointer]
    ]
    object_dup_data: make-routine gobject "g_object_dup_data" [
        object [pointer]
        key [pointer]
        dup_func [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    object_replace_data: make-routine gobject "g_object_replace_data" [
        object [pointer]
        key [pointer]
        oldval [pointer]
        newval [pointer]
        destroy [pointer]
        old_destroy [pointer]
        return: [int32]
    ]
    object_watch_closure: make-routine gobject "g_object_watch_closure" [
        object [pointer]
        closure [pointer]
        return: [void]
    ]
    cclosure_new_object: make-routine gobject "g_cclosure_new_object" [
        callback_func [pointer]
        object [pointer]
        return: [pointer]
    ]
    cclosure_new_object_swap: make-routine gobject "g_cclosure_new_object_swap" [
        callback_func [pointer]
        object [pointer]
        return: [pointer]
    ]
    closure_new_object: make-routine gobject "g_closure_new_object" [
        sizeof_closure [uint32]
        object [pointer]
        return: [pointer]
    ]
    value_set_object: make-routine gobject "g_value_set_object" [
        value [pointer]
        v_object [pointer]
        return: [void]
    ]
    value_get_object: make-routine gobject "g_value_get_object" [
        value [pointer]
        return: [pointer]
    ]
    value_dup_object: make-routine gobject "g_value_dup_object" [
        value [pointer]
        return: [pointer]
    ]
    signal_connect_object: make-routine gobject "g_signal_connect_object" [
        instance [pointer]
        detailed_signal [pointer]
        c_handler [pointer]
        gobject [pointer]
        connect_flags [int32]
        return: [uint64]
    ]
    object_force_floating: make-routine gobject "g_object_force_floating" [
        object [pointer]
        return: [void]
    ]
    object_run_dispose: make-routine gobject "g_object_run_dispose" [
        object [pointer]
        return: [void]
    ]
    value_take_object: make-routine gobject "g_value_take_object" [
        value [pointer]
        v_object [pointer]
        return: [void]
    ]
    clear_object: make-routine gobject "g_clear_object" [
        object_ptr [pointer]
        return: [void]
    ]
    weak_ref_init: make-routine gobject "g_weak_ref_init" [
        weak_ref [pointer]
        object [pointer]
        return: [void]
    ]
    weak_ref_clear: make-routine gobject "g_weak_ref_clear" [
        weak_ref [pointer]
        return: [void]
    ]
    weak_ref_get: make-routine gobject "g_weak_ref_get" [
        weak_ref [pointer]
        return: [pointer]
    ]
    weak_ref_set: make-routine gobject "g_weak_ref_set" [
        weak_ref [pointer]
        object [pointer]
        return: [void]
    ]
    binding_flags_get_type: make-routine gobject "g_binding_flags_get_type" [
        return: [uint64]
    ]
    binding_get_type: make-routine gobject "g_binding_get_type" [
        return: [uint64]
    ]
    binding_get_flags: make-routine gobject "g_binding_get_flags" [
        binding [pointer]
        return: [int32]
    ]
    binding_get_source: make-routine gobject "g_binding_get_source" [
        binding [pointer]
        return: [pointer]
    ]
    binding_get_target: make-routine gobject "g_binding_get_target" [
        binding [pointer]
        return: [pointer]
    ]
    binding_get_source_property: make-routine gobject "g_binding_get_source_property" [
        binding [pointer]
        return: [pointer]
    ]
    binding_get_target_property: make-routine gobject "g_binding_get_target_property" [
        binding [pointer]
        return: [pointer]
    ]
    binding_unbind: make-routine gobject "g_binding_unbind" [
        binding [pointer]
        return: [void]
    ]
    object_bind_property: make-routine gobject "g_object_bind_property" [
        source [pointer]
        source_property [pointer]
        target [pointer]
        target_property [pointer]
        flags [int32]
        return: [pointer]
    ]
    object_bind_property_full: make-routine gobject "g_object_bind_property_full" [
        source [pointer]
        source_property [pointer]
        target [pointer]
        target_property [pointer]
        flags [int32]
        transform_to [pointer]
        transform_from [pointer]
        user_data [pointer]
        notify [pointer]
        return: [pointer]
    ]
    object_bind_property_with_closures: make-routine gobject "g_object_bind_property_with_closures" [
        source [pointer]
        source_property [pointer]
        target [pointer]
        target_property [pointer]
        flags [int32]
        transform_to [pointer]
        transform_from [pointer]
        return: [pointer]
    ]
    enum_get_value: make-routine gobject "g_enum_get_value" [
        enum_class [pointer]
        value [int32]
        return: [pointer]
    ]
    enum_get_value_by_name: make-routine gobject "g_enum_get_value_by_name" [
        enum_class [pointer]
        name [pointer]
        return: [pointer]
    ]
    enum_get_value_by_nick: make-routine gobject "g_enum_get_value_by_nick" [
        enum_class [pointer]
        nick [pointer]
        return: [pointer]
    ]
    flags_get_first_value: make-routine gobject "g_flags_get_first_value" [
        flags_class [pointer]
        value [uint32]
        return: [pointer]
    ]
    flags_get_value_by_name: make-routine gobject "g_flags_get_value_by_name" [
        flags_class [pointer]
        name [pointer]
        return: [pointer]
    ]
    flags_get_value_by_nick: make-routine gobject "g_flags_get_value_by_nick" [
        flags_class [pointer]
        nick [pointer]
        return: [pointer]
    ]
    value_set_enum: make-routine gobject "g_value_set_enum" [
        value [pointer]
        v_enum [int32]
        return: [void]
    ]
    value_get_enum: make-routine gobject "g_value_get_enum" [
        value [pointer]
        return: [int32]
    ]
    value_set_flags: make-routine gobject "g_value_set_flags" [
        value [pointer]
        v_flags [uint32]
        return: [void]
    ]
    value_get_flags: make-routine gobject "g_value_get_flags" [
        value [pointer]
        return: [uint32]
    ]
    enum_register_static: make-routine gobject "g_enum_register_static" [
        name [pointer]
        const_static_values [pointer]
        return: [uint64]
    ]
    flags_register_static: make-routine gobject "g_flags_register_static" [
        name [pointer]
        const_static_values [pointer]
        return: [uint64]
    ]
    enum_complete_type_info: make-routine gobject "g_enum_complete_type_info" [
        g_enum_type [uint64]
        info [pointer]
        const_values [pointer]
        return: [void]
    ]
    flags_complete_type_info: make-routine gobject "g_flags_complete_type_info" [
        g_flags_type [uint64]
        info [pointer]
        const_values [pointer]
        return: [void]
    ]
    param_spec_char: make-routine gobject "g_param_spec_char" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [int8]
        maximum [int8]
        default_value [int8]
        flags [int32]
        return: [pointer]
    ]
    param_spec_uchar: make-routine gobject "g_param_spec_uchar" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [uint8]
        maximum [uint8]
        default_value [uint8]
        flags [int32]
        return: [pointer]
    ]
    param_spec_boolean: make-routine gobject "g_param_spec_boolean" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        default_value [int32]
        flags [int32]
        return: [pointer]
    ]
    param_spec_int: make-routine gobject "g_param_spec_int" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [int32]
        maximum [int32]
        default_value [int32]
        flags [int32]
        return: [pointer]
    ]
    param_spec_uint: make-routine gobject "g_param_spec_uint" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [uint32]
        maximum [uint32]
        default_value [uint32]
        flags [int32]
        return: [pointer]
    ]
    param_spec_long: make-routine gobject "g_param_spec_long" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [int64]
        maximum [int64]
        default_value [int64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_ulong: make-routine gobject "g_param_spec_ulong" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [uint64]
        maximum [uint64]
        default_value [uint64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_int64: make-routine gobject "g_param_spec_int64" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [int64]
        maximum [int64]
        default_value [int64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_uint64: make-routine gobject "g_param_spec_uint64" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [uint64]
        maximum [uint64]
        default_value [uint64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_unichar: make-routine gobject "g_param_spec_unichar" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        default_value [uint32]
        flags [int32]
        return: [pointer]
    ]
    param_spec_enum: make-routine gobject "g_param_spec_enum" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        enum_type [uint64]
        default_value [int32]
        flags [int32]
        return: [pointer]
    ]
    param_spec_flags: make-routine gobject "g_param_spec_flags" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        flags_type [uint64]
        default_value [uint32]
        flags [int32]
        return: [pointer]
    ]
    param_spec_float: make-routine gobject "g_param_spec_float" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [float]
        maximum [float]
        default_value [float]
        flags [int32]
        return: [pointer]
    ]
    param_spec_double: make-routine gobject "g_param_spec_double" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        minimum [double]
        maximum [double]
        default_value [double]
        flags [int32]
        return: [pointer]
    ]
    param_spec_string: make-routine gobject "g_param_spec_string" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        default_value [pointer]
        flags [int32]
        return: [pointer]
    ]
    param_spec_param: make-routine gobject "g_param_spec_param" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        param_type [uint64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_boxed: make-routine gobject "g_param_spec_boxed" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        boxed_type [uint64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_pointer: make-routine gobject "g_param_spec_pointer" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        flags [int32]
        return: [pointer]
    ]
    param_spec_value_array: make-routine gobject "g_param_spec_value_array" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        element_spec [pointer]
        flags [int32]
        return: [pointer]
    ]
    param_spec_object: make-routine gobject "g_param_spec_object" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        object_type [uint64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_override: make-routine gobject "g_param_spec_override" [
        name [pointer]
        overridden [pointer]
        return: [pointer]
    ]
    param_spec_gtype: make-routine gobject "g_param_spec_gtype" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        is_a_type [uint64]
        flags [int32]
        return: [pointer]
    ]
    param_spec_variant: make-routine gobject "g_param_spec_variant" [
        name [pointer]
        nick [pointer]
        blurb [pointer]
        type [pointer]
        default_value [pointer]
        flags [int32]
        return: [pointer]
    ]
    source_set_closure: make-routine gobject "g_source_set_closure" [
        source [pointer]
        closure [pointer]
        return: [void]
    ]
    source_set_dummy_callback: make-routine gobject "g_source_set_dummy_callback" [
        source [pointer]
        return: [void]
    ]
    type_module_get_type: make-routine gobject "g_type_module_get_type" [
        return: [uint64]
    ]
    type_module_use: make-routine gobject "g_type_module_use" [
        module [pointer]
        return: [int32]
    ]
    type_module_unuse: make-routine gobject "g_type_module_unuse" [
        module [pointer]
        return: [void]
    ]
    type_module_set_name: make-routine gobject "g_type_module_set_name" [
        module [pointer]
        name [pointer]
        return: [void]
    ]
    type_module_register_type: make-routine gobject "g_type_module_register_type" [
        module [pointer]
        parent_type [uint64]
        type_name [pointer]
        type_info [pointer]
        flags [int32]
        return: [uint64]
    ]
    type_module_add_interface: make-routine gobject "g_type_module_add_interface" [
        module [pointer]
        instance_type [uint64]
        interface_type [uint64]
        interface_info [pointer]
        return: [void]
    ]
    type_module_register_enum: make-routine gobject "g_type_module_register_enum" [
        module [pointer]
        name [pointer]
        const_static_values [pointer]
        return: [uint64]
    ]
    type_module_register_flags: make-routine gobject "g_type_module_register_flags" [
        module [pointer]
        name [pointer]
        const_static_values [pointer]
        return: [uint64]
    ]
    type_plugin_get_type: make-routine gobject "g_type_plugin_get_type" [
        return: [uint64]
    ]
    type_plugin_use: make-routine gobject "g_type_plugin_use" [
        plugin [pointer]
        return: [void]
    ]
    type_plugin_unuse: make-routine gobject "g_type_plugin_unuse" [
        plugin [pointer]
        return: [void]
    ]
    type_plugin_complete_type_info: make-routine gobject "g_type_plugin_complete_type_info" [
        plugin [pointer]
        g_type [uint64]
        info [pointer]
        value_table [pointer]
        return: [void]
    ]
    type_plugin_complete_interface_info: make-routine gobject "g_type_plugin_complete_interface_info" [
        plugin [pointer]
        instance_type [uint64]
        interface_type [uint64]
        info [pointer]
        return: [void]
    ]
    value_set_schar: make-routine gobject "g_value_set_schar" [
        value [pointer]
        v_char [int8]
        return: [void]
    ]
    value_get_schar: make-routine gobject "g_value_get_schar" [
        value [pointer]
        return: [int8]
    ]
    value_set_uchar: make-routine gobject "g_value_set_uchar" [
        value [pointer]
        v_uchar [uint8]
        return: [void]
    ]
    value_get_uchar: make-routine gobject "g_value_get_uchar" [
        value [pointer]
        return: [uint8]
    ]
    value_set_boolean: make-routine gobject "g_value_set_boolean" [
        value [pointer]
        v_boolean [int32]
        return: [void]
    ]
    value_get_boolean: make-routine gobject "g_value_get_boolean" [
        value [pointer]
        return: [int32]
    ]
    value_set_int: make-routine gobject "g_value_set_int" [
        value [pointer]
        v_int [int32]
        return: [void]
    ]
    value_get_int: make-routine gobject "g_value_get_int" [
        value [pointer]
        return: [int32]
    ]
    value_set_uint: make-routine gobject "g_value_set_uint" [
        value [pointer]
        v_uint [uint32]
        return: [void]
    ]
    value_get_uint: make-routine gobject "g_value_get_uint" [
        value [pointer]
        return: [uint32]
    ]
    value_set_long: make-routine gobject "g_value_set_long" [
        value [pointer]
        v_long [int64]
        return: [void]
    ]
    value_get_long: make-routine gobject "g_value_get_long" [
        value [pointer]
        return: [int64]
    ]
    value_set_ulong: make-routine gobject "g_value_set_ulong" [
        value [pointer]
        v_ulong [uint64]
        return: [void]
    ]
    value_get_ulong: make-routine gobject "g_value_get_ulong" [
        value [pointer]
        return: [uint64]
    ]
    value_set_int64: make-routine gobject "g_value_set_int64" [
        value [pointer]
        v_int64 [int64]
        return: [void]
    ]
    value_get_int64: make-routine gobject "g_value_get_int64" [
        value [pointer]
        return: [int64]
    ]
    value_set_uint64: make-routine gobject "g_value_set_uint64" [
        value [pointer]
        v_uint64 [uint64]
        return: [void]
    ]
    value_get_uint64: make-routine gobject "g_value_get_uint64" [
        value [pointer]
        return: [uint64]
    ]
    value_set_float: make-routine gobject "g_value_set_float" [
        value [pointer]
        v_float [float]
        return: [void]
    ]
    value_get_float: make-routine gobject "g_value_get_float" [
        value [pointer]
        return: [float]
    ]
    value_set_double: make-routine gobject "g_value_set_double" [
        value [pointer]
        v_double [double]
        return: [void]
    ]
    value_get_double: make-routine gobject "g_value_get_double" [
        value [pointer]
        return: [double]
    ]
    value_set_string: make-routine gobject "g_value_set_string" [
        value [pointer]
        v_string [pointer]
        return: [void]
    ]
    value_set_static_string: make-routine gobject "g_value_set_static_string" [
        value [pointer]
        v_string [pointer]
        return: [void]
    ]
    value_get_string: make-routine gobject "g_value_get_string" [
        value [pointer]
        return: [pointer]
    ]
    value_dup_string: make-routine gobject "g_value_dup_string" [
        value [pointer]
        return: [pointer]
    ]
    value_set_pointer: make-routine gobject "g_value_set_pointer" [
        value [pointer]
        v_pointer [pointer]
        return: [void]
    ]
    value_get_pointer: make-routine gobject "g_value_get_pointer" [
        value [pointer]
        return: [pointer]
    ]
    gtype_get_type: make-routine gobject "g_gtype_get_type" [
        return: [uint64]
    ]
    value_set_gtype: make-routine gobject "g_value_set_gtype" [
        value [pointer]
        v_gtype [uint64]
        return: [void]
    ]
    value_get_gtype: make-routine gobject "g_value_get_gtype" [
        value [pointer]
        return: [uint64]
    ]
    value_set_variant: make-routine gobject "g_value_set_variant" [
        value [pointer]
        variant [pointer]
        return: [void]
    ]
    value_take_variant: make-routine gobject "g_value_take_variant" [
        value [pointer]
        variant [pointer]
        return: [void]
    ]
    value_get_variant: make-routine gobject "g_value_get_variant" [
        value [pointer]
        return: [pointer]
    ]
    value_dup_variant: make-routine gobject "g_value_dup_variant" [
        value [pointer]
        return: [pointer]
    ]
    pointer_type_register_static: make-routine gobject "g_pointer_type_register_static" [
        name [pointer]
        return: [uint64]
    ]
    strdup_value_contents: make-routine gobject "g_strdup_value_contents" [
        value [pointer]
        return: [pointer]
    ]
    value_take_string: make-routine gobject "g_value_take_string" [
        value [pointer]
        v_string [pointer]
        return: [void]
    ]
    module_supported: make-routine gmodule "g_module_supported" [
        return: [int32]
    ]
    module_open: make-routine gmodule "g_module_open" [
        file_name [pointer]
        flags [int32]
        return: [pointer]
    ]
    module_close: make-routine gmodule "g_module_close" [
        module [pointer]
        return: [int32]
    ]
    module_make_resident: make-routine gmodule "g_module_make_resident" [
        module [pointer]
        return: [void]
    ]
    module_error: make-routine gmodule "g_module_error" [
        return: [pointer]
    ]
    module_symbol: make-routine gmodule "g_module_symbol" [
        module [pointer]
        symbol_name [pointer]
        symbol [pointer]
        return: [int32]
    ]
    module_name: make-routine gmodule "g_module_name" [
        module [pointer]
        return: [pointer]
    ]
    module_build_path: make-routine gmodule "g_module_build_path" [
        directory [pointer]
        module_name [pointer]
        return: [pointer]
    ]
    action_get_type: make-routine gio "g_action_get_type" [
        return: [uint64]
    ]
    action_get_name: make-routine gio "g_action_get_name" [
        action [pointer]
        return: [pointer]
    ]
    action_get_parameter_type: make-routine gio "g_action_get_parameter_type" [
        action [pointer]
        return: [pointer]
    ]
    action_get_state_type: make-routine gio "g_action_get_state_type" [
        action [pointer]
        return: [pointer]
    ]
    action_get_state_hint: make-routine gio "g_action_get_state_hint" [
        action [pointer]
        return: [pointer]
    ]
    action_get_enabled: make-routine gio "g_action_get_enabled" [
        action [pointer]
        return: [int32]
    ]
    action_get_state: make-routine gio "g_action_get_state" [
        action [pointer]
        return: [pointer]
    ]
    action_change_state: make-routine gio "g_action_change_state" [
        action [pointer]
        value [pointer]
        return: [void]
    ]
    action_activate: make-routine gio "g_action_activate" [
        action [pointer]
        parameter [pointer]
        return: [void]
    ]
    action_name_is_valid: make-routine gio "g_action_name_is_valid" [
        action_name [pointer]
        return: [int32]
    ]
    action_parse_detailed_name: make-routine gio "g_action_parse_detailed_name" [
        detailed_name [pointer]
        action_name [pointer]
        target_value [pointer]
        error [pointer]
        return: [int32]
    ]
    action_print_detailed_name: make-routine gio "g_action_print_detailed_name" [
        action_name [pointer]
        target_value [pointer]
        return: [pointer]
    ]
    action_group_get_type: make-routine gio "g_action_group_get_type" [
        return: [uint64]
    ]
    action_group_has_action: make-routine gio "g_action_group_has_action" [
        action_group [pointer]
        action_name [pointer]
        return: [int32]
    ]
    action_group_list_actions: make-routine gio "g_action_group_list_actions" [
        action_group [pointer]
        return: [pointer]
    ]
    action_group_get_action_parameter_type: make-routine gio "g_action_group_get_action_parameter_type" [
        action_group [pointer]
        action_name [pointer]
        return: [pointer]
    ]
    action_group_get_action_state_type: make-routine gio "g_action_group_get_action_state_type" [
        action_group [pointer]
        action_name [pointer]
        return: [pointer]
    ]
    action_group_get_action_state_hint: make-routine gio "g_action_group_get_action_state_hint" [
        action_group [pointer]
        action_name [pointer]
        return: [pointer]
    ]
    action_group_get_action_enabled: make-routine gio "g_action_group_get_action_enabled" [
        action_group [pointer]
        action_name [pointer]
        return: [int32]
    ]
    action_group_get_action_state: make-routine gio "g_action_group_get_action_state" [
        action_group [pointer]
        action_name [pointer]
        return: [pointer]
    ]
    action_group_change_action_state: make-routine gio "g_action_group_change_action_state" [
        action_group [pointer]
        action_name [pointer]
        value [pointer]
        return: [void]
    ]
    action_group_activate_action: make-routine gio "g_action_group_activate_action" [
        action_group [pointer]
        action_name [pointer]
        parameter [pointer]
        return: [void]
    ]
    action_group_action_added: make-routine gio "g_action_group_action_added" [
        action_group [pointer]
        action_name [pointer]
        return: [void]
    ]
    action_group_action_removed: make-routine gio "g_action_group_action_removed" [
        action_group [pointer]
        action_name [pointer]
        return: [void]
    ]
    action_group_action_enabled_changed: make-routine gio "g_action_group_action_enabled_changed" [
        action_group [pointer]
        action_name [pointer]
        enabled [int32]
        return: [void]
    ]
    action_group_action_state_changed: make-routine gio "g_action_group_action_state_changed" [
        action_group [pointer]
        action_name [pointer]
        state [pointer]
        return: [void]
    ]
    action_group_query_action: make-routine gio "g_action_group_query_action" [
        action_group [pointer]
        action_name [pointer]
        enabled [pointer]
        parameter_type [pointer]
        state_type [pointer]
        state_hint [pointer]
        state [pointer]
        return: [int32]
    ]
    dbus_connection_export_action_group: make-routine gio "g_dbus_connection_export_action_group" [
        connection [pointer]
        object_path [pointer]
        action_group [pointer]
        error [pointer]
        return: [uint32]
    ]
    dbus_connection_unexport_action_group: make-routine gio "g_dbus_connection_unexport_action_group" [
        connection [pointer]
        export_id [uint32]
        return: [void]
    ]
    action_map_get_type: make-routine gio "g_action_map_get_type" [
        return: [uint64]
    ]
    action_map_lookup_action: make-routine gio "g_action_map_lookup_action" [
        action_map [pointer]
        action_name [pointer]
        return: [pointer]
    ]
    action_map_add_action: make-routine gio "g_action_map_add_action" [
        action_map [pointer]
        action [pointer]
        return: [void]
    ]
    action_map_remove_action: make-routine gio "g_action_map_remove_action" [
        action_map [pointer]
        action_name [pointer]
        return: [void]
    ]
    action_map_add_action_entries: make-routine gio "g_action_map_add_action_entries" [
        action_map [pointer]
        entries [pointer]
        n_entries [int32]
        user_data [pointer]
        return: [void]
    ]
    app_info_get_type: make-routine gio "g_app_info_get_type" [
        return: [uint64]
    ]
    app_info_create_from_commandline: make-routine gio "g_app_info_create_from_commandline" [
        commandline [pointer]
        application_name [pointer]
        flags [int32]
        error [pointer]
        return: [pointer]
    ]
    app_info_dup: make-routine gio "g_app_info_dup" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_equal: make-routine gio "g_app_info_equal" [
        appinfo1 [pointer]
        appinfo2 [pointer]
        return: [int32]
    ]
    app_info_get_id: make-routine gio "g_app_info_get_id" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_get_name: make-routine gio "g_app_info_get_name" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_get_display_name: make-routine gio "g_app_info_get_display_name" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_get_description: make-routine gio "g_app_info_get_description" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_get_executable: make-routine gio "g_app_info_get_executable" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_get_commandline: make-routine gio "g_app_info_get_commandline" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_get_icon: make-routine gio "g_app_info_get_icon" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_launch: make-routine gio "g_app_info_launch" [
        appinfo [pointer]
        files [pointer]
        launch_context [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_supports_uris: make-routine gio "g_app_info_supports_uris" [
        appinfo [pointer]
        return: [int32]
    ]
    app_info_supports_files: make-routine gio "g_app_info_supports_files" [
        appinfo [pointer]
        return: [int32]
    ]
    app_info_launch_uris: make-routine gio "g_app_info_launch_uris" [
        appinfo [pointer]
        uris [pointer]
        launch_context [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_should_show: make-routine gio "g_app_info_should_show" [
        appinfo [pointer]
        return: [int32]
    ]
    app_info_set_as_default_for_type: make-routine gio "g_app_info_set_as_default_for_type" [
        appinfo [pointer]
        content_type [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_set_as_default_for_extension: make-routine gio "g_app_info_set_as_default_for_extension" [
        appinfo [pointer]
        extension [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_add_supports_type: make-routine gio "g_app_info_add_supports_type" [
        appinfo [pointer]
        content_type [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_can_remove_supports_type: make-routine gio "g_app_info_can_remove_supports_type" [
        appinfo [pointer]
        return: [int32]
    ]
    app_info_remove_supports_type: make-routine gio "g_app_info_remove_supports_type" [
        appinfo [pointer]
        content_type [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_get_supported_types: make-routine gio "g_app_info_get_supported_types" [
        appinfo [pointer]
        return: [pointer]
    ]
    app_info_can_delete: make-routine gio "g_app_info_can_delete" [
        appinfo [pointer]
        return: [int32]
    ]
    app_info_delete: make-routine gio "g_app_info_delete" [
        appinfo [pointer]
        return: [int32]
    ]
    app_info_set_as_last_used_for_type: make-routine gio "g_app_info_set_as_last_used_for_type" [
        appinfo [pointer]
        content_type [pointer]
        error [pointer]
        return: [int32]
    ]
    app_info_get_all: make-routine gio "g_app_info_get_all" [
        return: [pointer]
    ]
    app_info_get_all_for_type: make-routine gio "g_app_info_get_all_for_type" [
        content_type [pointer]
        return: [pointer]
    ]
    app_info_get_recommended_for_type: make-routine gio "g_app_info_get_recommended_for_type" [
        content_type [pointer]
        return: [pointer]
    ]
    app_info_get_fallback_for_type: make-routine gio "g_app_info_get_fallback_for_type" [
        content_type [pointer]
        return: [pointer]
    ]
    app_info_reset_type_associations: make-routine gio "g_app_info_reset_type_associations" [
        content_type [pointer]
        return: [void]
    ]
    app_info_get_default_for_type: make-routine gio "g_app_info_get_default_for_type" [
        content_type [pointer]
        must_support_uris [int32]
        return: [pointer]
    ]
    app_info_get_default_for_uri_scheme: make-routine gio "g_app_info_get_default_for_uri_scheme" [
        uri_scheme [pointer]
        return: [pointer]
    ]
    app_info_launch_default_for_uri: make-routine gio "g_app_info_launch_default_for_uri" [
        uri [pointer]
        launch_context [pointer]
        error [pointer]
        return: [int32]
    ]
    app_launch_context_get_type: make-routine gio "g_app_launch_context_get_type" [
        return: [uint64]
    ]
    app_launch_context_new: make-routine gio "g_app_launch_context_new" [
        return: [pointer]
    ]
    app_launch_context_setenv: make-routine gio "g_app_launch_context_setenv" [
        context [pointer]
        variable [pointer]
        value [pointer]
        return: [void]
    ]
    app_launch_context_unsetenv: make-routine gio "g_app_launch_context_unsetenv" [
        context [pointer]
        variable [pointer]
        return: [void]
    ]
    app_launch_context_get_environment: make-routine gio "g_app_launch_context_get_environment" [
        context [pointer]
        return: [pointer]
    ]
    app_launch_context_get_display: make-routine gio "g_app_launch_context_get_display" [
        context [pointer]
        info [pointer]
        files [pointer]
        return: [pointer]
    ]
    app_launch_context_get_startup_notify_id: make-routine gio "g_app_launch_context_get_startup_notify_id" [
        context [pointer]
        info [pointer]
        files [pointer]
        return: [pointer]
    ]
    app_launch_context_launch_failed: make-routine gio "g_app_launch_context_launch_failed" [
        context [pointer]
        startup_notify_id [pointer]
        return: [void]
    ]
    app_info_monitor_get_type: make-routine gio "g_app_info_monitor_get_type" [
        return: [uint64]
    ]
    app_info_monitor_get: make-routine gio "g_app_info_monitor_get" [
        return: [pointer]
    ]
    application_get_type: make-routine gio "g_application_get_type" [
        return: [uint64]
    ]
    application_id_is_valid: make-routine gio "g_application_id_is_valid" [
        application_id [pointer]
        return: [int32]
    ]
    application_new: make-routine gio "g_application_new" [
        application_id [pointer]
        flags [int32]
        return: [pointer]
    ]
    application_get_application_id: make-routine gio "g_application_get_application_id" [
        application [pointer]
        return: [pointer]
    ]
    application_set_application_id: make-routine gio "g_application_set_application_id" [
        application [pointer]
        application_id [pointer]
        return: [void]
    ]
    application_get_dbus_connection: make-routine gio "g_application_get_dbus_connection" [
        application [pointer]
        return: [pointer]
    ]
    application_get_dbus_object_path: make-routine gio "g_application_get_dbus_object_path" [
        application [pointer]
        return: [pointer]
    ]
    application_get_inactivity_timeout: make-routine gio "g_application_get_inactivity_timeout" [
        application [pointer]
        return: [uint32]
    ]
    application_set_inactivity_timeout: make-routine gio "g_application_set_inactivity_timeout" [
        application [pointer]
        inactivity_timeout [uint32]
        return: [void]
    ]
    application_get_flags: make-routine gio "g_application_get_flags" [
        application [pointer]
        return: [int32]
    ]
    application_set_flags: make-routine gio "g_application_set_flags" [
        application [pointer]
        flags [int32]
        return: [void]
    ]
    application_get_resource_base_path: make-routine gio "g_application_get_resource_base_path" [
        application [pointer]
        return: [pointer]
    ]
    application_set_resource_base_path: make-routine gio "g_application_set_resource_base_path" [
        application [pointer]
        resource_path [pointer]
        return: [void]
    ]
    application_add_main_option_entries: make-routine gio "g_application_add_main_option_entries" [
        application [pointer]
        entries [pointer]
        return: [void]
    ]
    application_add_main_option: make-routine gio "g_application_add_main_option" [
        application [pointer]
        long_name [pointer]
        short_name [int8]
        flags [int32]
        arg [int32]
        description [pointer]
        arg_description [pointer]
        return: [void]
    ]
    application_add_option_group: make-routine gio "g_application_add_option_group" [
        application [pointer]
        group [pointer]
        return: [void]
    ]
    application_get_is_registered: make-routine gio "g_application_get_is_registered" [
        application [pointer]
        return: [int32]
    ]
    application_get_is_remote: make-routine gio "g_application_get_is_remote" [
        application [pointer]
        return: [int32]
    ]
    application_register: make-routine gio "g_application_register" [
        application [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    application_hold: make-routine gio "g_application_hold" [
        application [pointer]
        return: [void]
    ]
    application_release: make-routine gio "g_application_release" [
        application [pointer]
        return: [void]
    ]
    application_activate: make-routine gio "g_application_activate" [
        application [pointer]
        return: [void]
    ]
    application_open: make-routine gio "g_application_open" [
        application [pointer]
        files [pointer]
        n_files [int32]
        hint [pointer]
        return: [void]
    ]
    application_run: make-routine gio "g_application_run" [
        application [pointer]
        argc [int32]
        argv [pointer]
        return: [int32]
    ]
    application_quit: make-routine gio "g_application_quit" [
        application [pointer]
        return: [void]
    ]
    application_get_default: make-routine gio "g_application_get_default" [
        return: [pointer]
    ]
    application_set_default: make-routine gio "g_application_set_default" [
        application [pointer]
        return: [void]
    ]
    application_mark_busy: make-routine gio "g_application_mark_busy" [
        application [pointer]
        return: [void]
    ]
    application_unmark_busy: make-routine gio "g_application_unmark_busy" [
        application [pointer]
        return: [void]
    ]
    application_send_notification: make-routine gio "g_application_send_notification" [
        application [pointer]
        id [pointer]
        notification [pointer]
        return: [void]
    ]
    application_withdraw_notification: make-routine gio "g_application_withdraw_notification" [
        application [pointer]
        id [pointer]
        return: [void]
    ]
    application_command_line_get_type: make-routine gio "g_application_command_line_get_type" [
        return: [uint64]
    ]
    application_command_line_get_arguments: make-routine gio "g_application_command_line_get_arguments" [
        cmdline [pointer]
        argc [pointer]
        return: [pointer]
    ]
    application_command_line_get_options_dict: make-routine gio "g_application_command_line_get_options_dict" [
        cmdline [pointer]
        return: [pointer]
    ]
    application_command_line_get_stdin: make-routine gio "g_application_command_line_get_stdin" [
        cmdline [pointer]
        return: [pointer]
    ]
    application_command_line_get_environ: make-routine gio "g_application_command_line_get_environ" [
        cmdline [pointer]
        return: [pointer]
    ]
    application_command_line_getenv: make-routine gio "g_application_command_line_getenv" [
        cmdline [pointer]
        name [pointer]
        return: [pointer]
    ]
    application_command_line_get_cwd: make-routine gio "g_application_command_line_get_cwd" [
        cmdline [pointer]
        return: [pointer]
    ]
    application_command_line_get_is_remote: make-routine gio "g_application_command_line_get_is_remote" [
        cmdline [pointer]
        return: [int32]
    ]
    application_command_line_print: make-routine gio "g_application_command_line_print" [
        cmdline [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    application_command_line_printerr: make-routine gio "g_application_command_line_printerr" [
        cmdline [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    application_command_line_get_exit_status: make-routine gio "g_application_command_line_get_exit_status" [
        cmdline [pointer]
        return: [int32]
    ]
    application_command_line_set_exit_status: make-routine gio "g_application_command_line_set_exit_status" [
        cmdline [pointer]
        exit_status [int32]
        return: [void]
    ]
    application_command_line_get_platform_data: make-routine gio "g_application_command_line_get_platform_data" [
        cmdline [pointer]
        return: [pointer]
    ]
    application_command_line_create_file_for_arg: make-routine gio "g_application_command_line_create_file_for_arg" [
        cmdline [pointer]
        arg [pointer]
        return: [pointer]
    ]
    initable_get_type: make-routine gio "g_initable_get_type" [
        return: [uint64]
    ]
    initable_init: make-routine gio "g_initable_init" [
        initable [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    initable_new: make-routine gio "g_initable_new" [
        object_type [uint64]
        cancellable [pointer]
        error [pointer]
        first_property_name [pointer]
        ...
        return: [pointer]
    ]
    initable_newv: make-routine gio "g_initable_newv" [
        object_type [uint64]
        n_parameters [uint32]
        parameters [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    initable_new_valist: make-routine gio "g_initable_new_valist" [
        object_type [uint64]
        first_property_name [pointer]
        var_args [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    async_initable_get_type: make-routine gio "g_async_initable_get_type" [
        return: [uint64]
    ]
    async_initable_init_async: make-routine gio "g_async_initable_init_async" [
        initable [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    async_initable_init_finish: make-routine gio "g_async_initable_init_finish" [
        initable [pointer]
        res [pointer]
        error [pointer]
        return: [int32]
    ]
    async_initable_new_async: make-routine gio "g_async_initable_new_async" [
        object_type [uint64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        first_property_name [pointer]
        ...
        return: [void]
    ]
    async_initable_newv_async: make-routine gio "g_async_initable_newv_async" [
        object_type [uint64]
        n_parameters [uint32]
        parameters [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    async_initable_new_valist_async: make-routine gio "g_async_initable_new_valist_async" [
        object_type [uint64]
        first_property_name [pointer]
        var_args [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    async_initable_new_finish: make-routine gio "g_async_initable_new_finish" [
        initable [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    async_result_get_type: make-routine gio "g_async_result_get_type" [
        return: [uint64]
    ]
    async_result_get_user_data: make-routine gio "g_async_result_get_user_data" [
        res [pointer]
        return: [pointer]
    ]
    async_result_get_source_object: make-routine gio "g_async_result_get_source_object" [
        res [pointer]
        return: [pointer]
    ]
    async_result_legacy_propagate_error: make-routine gio "g_async_result_legacy_propagate_error" [
        res [pointer]
        error [pointer]
        return: [int32]
    ]
    async_result_is_tagged: make-routine gio "g_async_result_is_tagged" [
        res [pointer]
        source_tag [pointer]
        return: [int32]
    ]
    input_stream_get_type: make-routine gio "g_input_stream_get_type" [
        return: [uint64]
    ]
    input_stream_read: make-routine gio "g_input_stream_read" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    input_stream_read_all: make-routine gio "g_input_stream_read_all" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        bytes_read [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    input_stream_read_bytes: make-routine gio "g_input_stream_read_bytes" [
        stream [pointer]
        count [uint64]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    input_stream_skip: make-routine gio "g_input_stream_skip" [
        stream [pointer]
        count [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    input_stream_close: make-routine gio "g_input_stream_close" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    input_stream_read_async: make-routine gio "g_input_stream_read_async" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    input_stream_read_finish: make-routine gio "g_input_stream_read_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int64]
    ]
    input_stream_read_bytes_async: make-routine gio "g_input_stream_read_bytes_async" [
        stream [pointer]
        count [uint64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    input_stream_read_bytes_finish: make-routine gio "g_input_stream_read_bytes_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    input_stream_skip_async: make-routine gio "g_input_stream_skip_async" [
        stream [pointer]
        count [uint64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    input_stream_skip_finish: make-routine gio "g_input_stream_skip_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int64]
    ]
    input_stream_close_async: make-routine gio "g_input_stream_close_async" [
        stream [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    input_stream_close_finish: make-routine gio "g_input_stream_close_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    input_stream_is_closed: make-routine gio "g_input_stream_is_closed" [
        stream [pointer]
        return: [int32]
    ]
    input_stream_has_pending: make-routine gio "g_input_stream_has_pending" [
        stream [pointer]
        return: [int32]
    ]
    input_stream_set_pending: make-routine gio "g_input_stream_set_pending" [
        stream [pointer]
        error [pointer]
        return: [int32]
    ]
    input_stream_clear_pending: make-routine gio "g_input_stream_clear_pending" [
        stream [pointer]
        return: [void]
    ]
    filter_input_stream_get_type: make-routine gio "g_filter_input_stream_get_type" [
        return: [uint64]
    ]
    filter_input_stream_get_base_stream: make-routine gio "g_filter_input_stream_get_base_stream" [
        stream [pointer]
        return: [pointer]
    ]
    filter_input_stream_get_close_base_stream: make-routine gio "g_filter_input_stream_get_close_base_stream" [
        stream [pointer]
        return: [int32]
    ]
    filter_input_stream_set_close_base_stream: make-routine gio "g_filter_input_stream_set_close_base_stream" [
        stream [pointer]
        close_base [int32]
        return: [void]
    ]
    buffered_input_stream_get_type: make-routine gio "g_buffered_input_stream_get_type" [
        return: [uint64]
    ]
    buffered_input_stream_new: make-routine gio "g_buffered_input_stream_new" [
        base_stream [pointer]
        return: [pointer]
    ]
    buffered_input_stream_new_sized: make-routine gio "g_buffered_input_stream_new_sized" [
        base_stream [pointer]
        size [uint64]
        return: [pointer]
    ]
    buffered_input_stream_get_buffer_size: make-routine gio "g_buffered_input_stream_get_buffer_size" [
        stream [pointer]
        return: [uint64]
    ]
    buffered_input_stream_set_buffer_size: make-routine gio "g_buffered_input_stream_set_buffer_size" [
        stream [pointer]
        size [uint64]
        return: [void]
    ]
    buffered_input_stream_get_available: make-routine gio "g_buffered_input_stream_get_available" [
        stream [pointer]
        return: [uint64]
    ]
    buffered_input_stream_peek: make-routine gio "g_buffered_input_stream_peek" [
        stream [pointer]
        buffer [pointer]
        offset [uint64]
        count [uint64]
        return: [uint64]
    ]
    buffered_input_stream_peek_buffer: make-routine gio "g_buffered_input_stream_peek_buffer" [
        stream [pointer]
        count [pointer]
        return: [pointer]
    ]
    buffered_input_stream_fill: make-routine gio "g_buffered_input_stream_fill" [
        stream [pointer]
        count [int64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    buffered_input_stream_fill_async: make-routine gio "g_buffered_input_stream_fill_async" [
        stream [pointer]
        count [int64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    buffered_input_stream_fill_finish: make-routine gio "g_buffered_input_stream_fill_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int64]
    ]
    buffered_input_stream_read_byte: make-routine gio "g_buffered_input_stream_read_byte" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_get_type: make-routine gio "g_output_stream_get_type" [
        return: [uint64]
    ]
    output_stream_write: make-routine gio "g_output_stream_write" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    output_stream_write_all: make-routine gio "g_output_stream_write_all" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        bytes_written [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_printf: make-routine gio "g_output_stream_printf" [
        stream [pointer]
        bytes_written [pointer]
        cancellable [pointer]
        error [pointer]
        format [pointer]
        ...
        return: [int32]
    ]
    output_stream_vprintf: make-routine gio "g_output_stream_vprintf" [
        stream [pointer]
        bytes_written [pointer]
        cancellable [pointer]
        error [pointer]
        format [pointer]
        args [int32]
        return: [int32]
    ]
    output_stream_write_bytes: make-routine gio "g_output_stream_write_bytes" [
        stream [pointer]
        bytes [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    output_stream_splice: make-routine gio "g_output_stream_splice" [
        stream [pointer]
        source [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    output_stream_flush: make-routine gio "g_output_stream_flush" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_close: make-routine gio "g_output_stream_close" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_write_async: make-routine gio "g_output_stream_write_async" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    output_stream_write_finish: make-routine gio "g_output_stream_write_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int64]
    ]
    output_stream_write_bytes_async: make-routine gio "g_output_stream_write_bytes_async" [
        stream [pointer]
        bytes [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    output_stream_write_bytes_finish: make-routine gio "g_output_stream_write_bytes_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int64]
    ]
    output_stream_splice_async: make-routine gio "g_output_stream_splice_async" [
        stream [pointer]
        source [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    output_stream_splice_finish: make-routine gio "g_output_stream_splice_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int64]
    ]
    output_stream_flush_async: make-routine gio "g_output_stream_flush_async" [
        stream [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    output_stream_flush_finish: make-routine gio "g_output_stream_flush_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_close_async: make-routine gio "g_output_stream_close_async" [
        stream [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    output_stream_close_finish: make-routine gio "g_output_stream_close_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_is_closed: make-routine gio "g_output_stream_is_closed" [
        stream [pointer]
        return: [int32]
    ]
    output_stream_is_closing: make-routine gio "g_output_stream_is_closing" [
        stream [pointer]
        return: [int32]
    ]
    output_stream_has_pending: make-routine gio "g_output_stream_has_pending" [
        stream [pointer]
        return: [int32]
    ]
    output_stream_set_pending: make-routine gio "g_output_stream_set_pending" [
        stream [pointer]
        error [pointer]
        return: [int32]
    ]
    output_stream_clear_pending: make-routine gio "g_output_stream_clear_pending" [
        stream [pointer]
        return: [void]
    ]
    filter_output_stream_get_type: make-routine gio "g_filter_output_stream_get_type" [
        return: [uint64]
    ]
    filter_output_stream_get_base_stream: make-routine gio "g_filter_output_stream_get_base_stream" [
        stream [pointer]
        return: [pointer]
    ]
    filter_output_stream_get_close_base_stream: make-routine gio "g_filter_output_stream_get_close_base_stream" [
        stream [pointer]
        return: [int32]
    ]
    filter_output_stream_set_close_base_stream: make-routine gio "g_filter_output_stream_set_close_base_stream" [
        stream [pointer]
        close_base [int32]
        return: [void]
    ]
    buffered_output_stream_get_type: make-routine gio "g_buffered_output_stream_get_type" [
        return: [uint64]
    ]
    buffered_output_stream_new: make-routine gio "g_buffered_output_stream_new" [
        base_stream [pointer]
        return: [pointer]
    ]
    buffered_output_stream_new_sized: make-routine gio "g_buffered_output_stream_new_sized" [
        base_stream [pointer]
        size [uint64]
        return: [pointer]
    ]
    buffered_output_stream_get_buffer_size: make-routine gio "g_buffered_output_stream_get_buffer_size" [
        stream [pointer]
        return: [uint64]
    ]
    buffered_output_stream_set_buffer_size: make-routine gio "g_buffered_output_stream_set_buffer_size" [
        stream [pointer]
        size [uint64]
        return: [void]
    ]
    buffered_output_stream_get_auto_grow: make-routine gio "g_buffered_output_stream_get_auto_grow" [
        stream [pointer]
        return: [int32]
    ]
    buffered_output_stream_set_auto_grow: make-routine gio "g_buffered_output_stream_set_auto_grow" [
        stream [pointer]
        auto_grow [int32]
        return: [void]
    ]
    bytes_icon_get_type: make-routine gio "g_bytes_icon_get_type" [
        return: [uint64]
    ]
    bytes_icon_new: make-routine gio "g_bytes_icon_new" [
        bytes [pointer]
        return: [pointer]
    ]
    bytes_icon_get_bytes: make-routine gio "g_bytes_icon_get_bytes" [
        icon [pointer]
        return: [pointer]
    ]
    cancellable_get_type: make-routine gio "g_cancellable_get_type" [
        return: [uint64]
    ]
    cancellable_new: make-routine gio "g_cancellable_new" [
        return: [pointer]
    ]
    cancellable_is_cancelled: make-routine gio "g_cancellable_is_cancelled" [
        cancellable [pointer]
        return: [int32]
    ]
    cancellable_set_error_if_cancelled: make-routine gio "g_cancellable_set_error_if_cancelled" [
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    cancellable_get_fd: make-routine gio "g_cancellable_get_fd" [
        cancellable [pointer]
        return: [int32]
    ]
    cancellable_make_pollfd: make-routine gio "g_cancellable_make_pollfd" [
        cancellable [pointer]
        pollfd [pointer]
        return: [int32]
    ]
    cancellable_release_fd: make-routine gio "g_cancellable_release_fd" [
        cancellable [pointer]
        return: [void]
    ]
    cancellable_source_new: make-routine gio "g_cancellable_source_new" [
        cancellable [pointer]
        return: [pointer]
    ]
    cancellable_get_current: make-routine gio "g_cancellable_get_current" [
        return: [pointer]
    ]
    cancellable_push_current: make-routine gio "g_cancellable_push_current" [
        cancellable [pointer]
        return: [void]
    ]
    cancellable_pop_current: make-routine gio "g_cancellable_pop_current" [
        cancellable [pointer]
        return: [void]
    ]
    cancellable_reset: make-routine gio "g_cancellable_reset" [
        cancellable [pointer]
        return: [void]
    ]
    cancellable_connect: make-routine gio "g_cancellable_connect" [
        cancellable [pointer]
        callback [pointer]
        data [pointer]
        data_destroy_func [pointer]
        return: [uint64]
    ]
    cancellable_disconnect: make-routine gio "g_cancellable_disconnect" [
        cancellable [pointer]
        handler_id [uint64]
        return: [void]
    ]
    cancellable_cancel: make-routine gio "g_cancellable_cancel" [
        cancellable [pointer]
        return: [void]
    ]
    converter_get_type: make-routine gio "g_converter_get_type" [
        return: [uint64]
    ]
    converter_convert: make-routine gio "g_converter_convert" [
        converter [pointer]
        inbuf [pointer]
        inbuf_size [uint64]
        outbuf [pointer]
        outbuf_size [uint64]
        flags [int32]
        bytes_read [pointer]
        bytes_written [pointer]
        error [pointer]
        return: [int32]
    ]
    converter_reset: make-routine gio "g_converter_reset" [
        converter [pointer]
        return: [void]
    ]
    charset_converter_get_type: make-routine gio "g_charset_converter_get_type" [
        return: [uint64]
    ]
    charset_converter_new: make-routine gio "g_charset_converter_new" [
        to_charset [pointer]
        from_charset [pointer]
        error [pointer]
        return: [pointer]
    ]
    charset_converter_set_use_fallback: make-routine gio "g_charset_converter_set_use_fallback" [
        converter [pointer]
        use_fallback [int32]
        return: [void]
    ]
    charset_converter_get_use_fallback: make-routine gio "g_charset_converter_get_use_fallback" [
        converter [pointer]
        return: [int32]
    ]
    charset_converter_get_num_fallbacks: make-routine gio "g_charset_converter_get_num_fallbacks" [
        converter [pointer]
        return: [uint32]
    ]
    content_type_equals: make-routine gio "g_content_type_equals" [
        type1 [pointer]
        type2 [pointer]
        return: [int32]
    ]
    content_type_is_a: make-routine gio "g_content_type_is_a" [
        type [pointer]
        supertype [pointer]
        return: [int32]
    ]
    content_type_is_unknown: make-routine gio "g_content_type_is_unknown" [
        type [pointer]
        return: [int32]
    ]
    content_type_get_description: make-routine gio "g_content_type_get_description" [
        type [pointer]
        return: [pointer]
    ]
    content_type_get_mime_type: make-routine gio "g_content_type_get_mime_type" [
        type [pointer]
        return: [pointer]
    ]
    content_type_get_icon: make-routine gio "g_content_type_get_icon" [
        type [pointer]
        return: [pointer]
    ]
    content_type_get_symbolic_icon: make-routine gio "g_content_type_get_symbolic_icon" [
        type [pointer]
        return: [pointer]
    ]
    content_type_get_generic_icon_name: make-routine gio "g_content_type_get_generic_icon_name" [
        type [pointer]
        return: [pointer]
    ]
    content_type_can_be_executable: make-routine gio "g_content_type_can_be_executable" [
        type [pointer]
        return: [int32]
    ]
    content_type_from_mime_type: make-routine gio "g_content_type_from_mime_type" [
        mime_type [pointer]
        return: [pointer]
    ]
    content_type_guess: make-routine gio "g_content_type_guess" [
        filename [pointer]
        data [pointer]
        data_size [uint64]
        result_uncertain [pointer]
        return: [pointer]
    ]
    content_type_guess_for_tree: make-routine gio "g_content_type_guess_for_tree" [
        root [pointer]
        return: [pointer]
    ]
    content_types_get_registered: make-routine gio "g_content_types_get_registered" [
        return: [pointer]
    ]
    converter_input_stream_get_type: make-routine gio "g_converter_input_stream_get_type" [
        return: [uint64]
    ]
    converter_input_stream_new: make-routine gio "g_converter_input_stream_new" [
        base_stream [pointer]
        converter [pointer]
        return: [pointer]
    ]
    converter_input_stream_get_converter: make-routine gio "g_converter_input_stream_get_converter" [
        converter_stream [pointer]
        return: [pointer]
    ]
    converter_output_stream_get_type: make-routine gio "g_converter_output_stream_get_type" [
        return: [uint64]
    ]
    converter_output_stream_new: make-routine gio "g_converter_output_stream_new" [
        base_stream [pointer]
        converter [pointer]
        return: [pointer]
    ]
    converter_output_stream_get_converter: make-routine gio "g_converter_output_stream_get_converter" [
        converter_stream [pointer]
        return: [pointer]
    ]
    credentials_get_type: make-routine gio "g_credentials_get_type" [
        return: [uint64]
    ]
    credentials_new: make-routine gio "g_credentials_new" [
        return: [pointer]
    ]
    credentials_to_string: make-routine gio "g_credentials_to_string" [
        credentials [pointer]
        return: [pointer]
    ]
    credentials_get_native: make-routine gio "g_credentials_get_native" [
        credentials [pointer]
        native_type [int32]
        return: [pointer]
    ]
    credentials_set_native: make-routine gio "g_credentials_set_native" [
        credentials [pointer]
        native_type [int32]
        native [pointer]
        return: [void]
    ]
    credentials_is_same_user: make-routine gio "g_credentials_is_same_user" [
        credentials [pointer]
        other_credentials [pointer]
        error [pointer]
        return: [int32]
    ]
    credentials_get_unix_pid: make-routine gio "g_credentials_get_unix_pid" [
        credentials [pointer]
        error [pointer]
        return: [int32]
    ]
    credentials_get_unix_user: make-routine gio "g_credentials_get_unix_user" [
        credentials [pointer]
        error [pointer]
        return: [uint32]
    ]
    credentials_set_unix_user: make-routine gio "g_credentials_set_unix_user" [
        credentials [pointer]
        uid [uint32]
        error [pointer]
        return: [int32]
    ]
    data_input_stream_get_type: make-routine gio "g_data_input_stream_get_type" [
        return: [uint64]
    ]
    data_input_stream_new: make-routine gio "g_data_input_stream_new" [
        base_stream [pointer]
        return: [pointer]
    ]
    data_input_stream_set_byte_order: make-routine gio "g_data_input_stream_set_byte_order" [
        stream [pointer]
        order [int32]
        return: [void]
    ]
    data_input_stream_get_byte_order: make-routine gio "g_data_input_stream_get_byte_order" [
        stream [pointer]
        return: [int32]
    ]
    data_input_stream_set_newline_type: make-routine gio "g_data_input_stream_set_newline_type" [
        stream [pointer]
        type [int32]
        return: [void]
    ]
    data_input_stream_get_newline_type: make-routine gio "g_data_input_stream_get_newline_type" [
        stream [pointer]
        return: [int32]
    ]
    data_input_stream_read_byte: make-routine gio "g_data_input_stream_read_byte" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [uint8]
    ]
    data_input_stream_read_int16: make-routine gio "g_data_input_stream_read_int16" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int16]
    ]
    data_input_stream_read_uint16: make-routine gio "g_data_input_stream_read_uint16" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [uint16]
    ]
    data_input_stream_read_int32: make-routine gio "g_data_input_stream_read_int32" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_input_stream_read_uint32: make-routine gio "g_data_input_stream_read_uint32" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [uint32]
    ]
    data_input_stream_read_int64: make-routine gio "g_data_input_stream_read_int64" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    data_input_stream_read_uint64: make-routine gio "g_data_input_stream_read_uint64" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [uint64]
    ]
    data_input_stream_read_line: make-routine gio "g_data_input_stream_read_line" [
        stream [pointer]
        length [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_line_utf8: make-routine gio "g_data_input_stream_read_line_utf8" [
        stream [pointer]
        length [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_line_async: make-routine gio "g_data_input_stream_read_line_async" [
        stream [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    data_input_stream_read_line_finish: make-routine gio "g_data_input_stream_read_line_finish" [
        stream [pointer]
        result [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_line_finish_utf8: make-routine gio "g_data_input_stream_read_line_finish_utf8" [
        stream [pointer]
        result [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_until: make-routine gio "g_data_input_stream_read_until" [
        stream [pointer]
        stop_chars [pointer]
        length [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_until_async: make-routine gio "g_data_input_stream_read_until_async" [
        stream [pointer]
        stop_chars [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    data_input_stream_read_until_finish: make-routine gio "g_data_input_stream_read_until_finish" [
        stream [pointer]
        result [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_upto: make-routine gio "g_data_input_stream_read_upto" [
        stream [pointer]
        stop_chars [pointer]
        stop_chars_len [int64]
        length [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_input_stream_read_upto_async: make-routine gio "g_data_input_stream_read_upto_async" [
        stream [pointer]
        stop_chars [pointer]
        stop_chars_len [int64]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    data_input_stream_read_upto_finish: make-routine gio "g_data_input_stream_read_upto_finish" [
        stream [pointer]
        result [pointer]
        length [pointer]
        error [pointer]
        return: [pointer]
    ]
    data_output_stream_get_type: make-routine gio "g_data_output_stream_get_type" [
        return: [uint64]
    ]
    data_output_stream_new: make-routine gio "g_data_output_stream_new" [
        base_stream [pointer]
        return: [pointer]
    ]
    data_output_stream_set_byte_order: make-routine gio "g_data_output_stream_set_byte_order" [
        stream [pointer]
        order [int32]
        return: [void]
    ]
    data_output_stream_get_byte_order: make-routine gio "g_data_output_stream_get_byte_order" [
        stream [pointer]
        return: [int32]
    ]
    data_output_stream_put_byte: make-routine gio "g_data_output_stream_put_byte" [
        stream [pointer]
        data [uint8]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_int16: make-routine gio "g_data_output_stream_put_int16" [
        stream [pointer]
        data [int16]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_uint16: make-routine gio "g_data_output_stream_put_uint16" [
        stream [pointer]
        data [uint16]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_int32: make-routine gio "g_data_output_stream_put_int32" [
        stream [pointer]
        data [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_uint32: make-routine gio "g_data_output_stream_put_uint32" [
        stream [pointer]
        data [uint32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_int64: make-routine gio "g_data_output_stream_put_int64" [
        stream [pointer]
        data [int64]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_uint64: make-routine gio "g_data_output_stream_put_uint64" [
        stream [pointer]
        data [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    data_output_stream_put_string: make-routine gio "g_data_output_stream_put_string" [
        stream [pointer]
        str [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_address_escape_value: make-routine gio "g_dbus_address_escape_value" [
        string [pointer]
        return: [pointer]
    ]
    dbus_is_address: make-routine gio "g_dbus_is_address" [
        string [pointer]
        return: [int32]
    ]
    dbus_is_supported_address: make-routine gio "g_dbus_is_supported_address" [
        string [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_address_get_stream: make-routine gio "g_dbus_address_get_stream" [
        address [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_address_get_stream_finish: make-routine gio "g_dbus_address_get_stream_finish" [
        res [pointer]
        out_guid [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_address_get_stream_sync: make-routine gio "g_dbus_address_get_stream_sync" [
        address [pointer]
        out_guid [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_address_get_for_bus_sync: make-routine gio "g_dbus_address_get_for_bus_sync" [
        bus_type [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_auth_observer_get_type: make-routine gio "g_dbus_auth_observer_get_type" [
        return: [uint64]
    ]
    dbus_auth_observer_new: make-routine gio "g_dbus_auth_observer_new" [
        return: [pointer]
    ]
    dbus_auth_observer_authorize_authenticated_peer: make-routine gio "g_dbus_auth_observer_authorize_authenticated_peer" [
        observer [pointer]
        stream [pointer]
        credentials [pointer]
        return: [int32]
    ]
    dbus_auth_observer_allow_mechanism: make-routine gio "g_dbus_auth_observer_allow_mechanism" [
        observer [pointer]
        mechanism [pointer]
        return: [int32]
    ]
    dbus_connection_get_type: make-routine gio "g_dbus_connection_get_type" [
        return: [uint64]
    ]
    bus_get: make-routine gio "g_bus_get" [
        bus_type [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    bus_get_finish: make-routine gio "g_bus_get_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    bus_get_sync: make-routine gio "g_bus_get_sync" [
        bus_type [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_new: make-routine gio "g_dbus_connection_new" [
        stream [pointer]
        guid [pointer]
        flags [int32]
        observer [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_new_finish: make-routine gio "g_dbus_connection_new_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_new_sync: make-routine gio "g_dbus_connection_new_sync" [
        stream [pointer]
        guid [pointer]
        flags [int32]
        observer [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_new_for_address: make-routine gio "g_dbus_connection_new_for_address" [
        address [pointer]
        flags [int32]
        observer [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_new_for_address_finish: make-routine gio "g_dbus_connection_new_for_address_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_new_for_address_sync: make-routine gio "g_dbus_connection_new_for_address_sync" [
        address [pointer]
        flags [int32]
        observer [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_start_message_processing: make-routine gio "g_dbus_connection_start_message_processing" [
        connection [pointer]
        return: [void]
    ]
    dbus_connection_is_closed: make-routine gio "g_dbus_connection_is_closed" [
        connection [pointer]
        return: [int32]
    ]
    dbus_connection_get_stream: make-routine gio "g_dbus_connection_get_stream" [
        connection [pointer]
        return: [pointer]
    ]
    dbus_connection_get_guid: make-routine gio "g_dbus_connection_get_guid" [
        connection [pointer]
        return: [pointer]
    ]
    dbus_connection_get_unique_name: make-routine gio "g_dbus_connection_get_unique_name" [
        connection [pointer]
        return: [pointer]
    ]
    dbus_connection_get_peer_credentials: make-routine gio "g_dbus_connection_get_peer_credentials" [
        connection [pointer]
        return: [pointer]
    ]
    dbus_connection_get_last_serial: make-routine gio "g_dbus_connection_get_last_serial" [
        connection [pointer]
        return: [uint32]
    ]
    dbus_connection_get_exit_on_close: make-routine gio "g_dbus_connection_get_exit_on_close" [
        connection [pointer]
        return: [int32]
    ]
    dbus_connection_set_exit_on_close: make-routine gio "g_dbus_connection_set_exit_on_close" [
        connection [pointer]
        exit_on_close [int32]
        return: [void]
    ]
    dbus_connection_get_capabilities: make-routine gio "g_dbus_connection_get_capabilities" [
        connection [pointer]
        return: [int32]
    ]
    dbus_connection_close: make-routine gio "g_dbus_connection_close" [
        connection [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_close_finish: make-routine gio "g_dbus_connection_close_finish" [
        connection [pointer]
        res [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_connection_close_sync: make-routine gio "g_dbus_connection_close_sync" [
        connection [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_connection_flush: make-routine gio "g_dbus_connection_flush" [
        connection [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_flush_finish: make-routine gio "g_dbus_connection_flush_finish" [
        connection [pointer]
        res [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_connection_flush_sync: make-routine gio "g_dbus_connection_flush_sync" [
        connection [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_connection_send_message: make-routine gio "g_dbus_connection_send_message" [
        connection [pointer]
        message [pointer]
        flags [int32]
        out_serial [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_connection_send_message_with_reply: make-routine gio "g_dbus_connection_send_message_with_reply" [
        connection [pointer]
        message [pointer]
        flags [int32]
        timeout_msec [int32]
        out_serial [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_send_message_with_reply_finish: make-routine gio "g_dbus_connection_send_message_with_reply_finish" [
        connection [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_send_message_with_reply_sync: make-routine gio "g_dbus_connection_send_message_with_reply_sync" [
        connection [pointer]
        message [pointer]
        flags [int32]
        timeout_msec [int32]
        out_serial [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_emit_signal: make-routine gio "g_dbus_connection_emit_signal" [
        connection [pointer]
        destination_bus_name [pointer]
        object_path [pointer]
        interface_name [pointer]
        signal_name [pointer]
        parameters [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_connection_call: make-routine gio "g_dbus_connection_call" [
        connection [pointer]
        bus_name [pointer]
        object_path [pointer]
        interface_name [pointer]
        method_name [pointer]
        parameters [pointer]
        reply_type [pointer]
        flags [int32]
        timeout_msec [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_call_finish: make-routine gio "g_dbus_connection_call_finish" [
        connection [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_call_sync: make-routine gio "g_dbus_connection_call_sync" [
        connection [pointer]
        bus_name [pointer]
        object_path [pointer]
        interface_name [pointer]
        method_name [pointer]
        parameters [pointer]
        reply_type [pointer]
        flags [int32]
        timeout_msec [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_call_with_unix_fd_list: make-routine gio "g_dbus_connection_call_with_unix_fd_list" [
        connection [pointer]
        bus_name [pointer]
        object_path [pointer]
        interface_name [pointer]
        method_name [pointer]
        parameters [pointer]
        reply_type [pointer]
        flags [int32]
        timeout_msec [int32]
        fd_list [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_connection_call_with_unix_fd_list_finish: make-routine gio "g_dbus_connection_call_with_unix_fd_list_finish" [
        connection [pointer]
        out_fd_list [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_call_with_unix_fd_list_sync: make-routine gio "g_dbus_connection_call_with_unix_fd_list_sync" [
        connection [pointer]
        bus_name [pointer]
        object_path [pointer]
        interface_name [pointer]
        method_name [pointer]
        parameters [pointer]
        reply_type [pointer]
        flags [int32]
        timeout_msec [int32]
        fd_list [pointer]
        out_fd_list [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_connection_register_object: make-routine gio "g_dbus_connection_register_object" [
        connection [pointer]
        object_path [pointer]
        interface_info [pointer]
        vtable [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        error [pointer]
        return: [uint32]
    ]
    dbus_connection_unregister_object: make-routine gio "g_dbus_connection_unregister_object" [
        connection [pointer]
        registration_id [uint32]
        return: [int32]
    ]
    dbus_connection_register_subtree: make-routine gio "g_dbus_connection_register_subtree" [
        connection [pointer]
        object_path [pointer]
        vtable [pointer]
        flags [int32]
        user_data [pointer]
        user_data_free_func [pointer]
        error [pointer]
        return: [uint32]
    ]
    dbus_connection_unregister_subtree: make-routine gio "g_dbus_connection_unregister_subtree" [
        connection [pointer]
        registration_id [uint32]
        return: [int32]
    ]
    dbus_connection_signal_subscribe: make-routine gio "g_dbus_connection_signal_subscribe" [
        connection [pointer]
        sender [pointer]
        interface_name [pointer]
        member [pointer]
        object_path [pointer]
        arg0 [pointer]
        flags [int32]
        callback [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        return: [uint32]
    ]
    dbus_connection_signal_unsubscribe: make-routine gio "g_dbus_connection_signal_unsubscribe" [
        connection [pointer]
        subscription_id [uint32]
        return: [void]
    ]
    dbus_connection_add_filter: make-routine gio "g_dbus_connection_add_filter" [
        connection [pointer]
        filter_function [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        return: [uint32]
    ]
    dbus_connection_remove_filter: make-routine gio "g_dbus_connection_remove_filter" [
        connection [pointer]
        filter_id [uint32]
        return: [void]
    ]
    dbus_error_quark: make-routine gio "g_dbus_error_quark" [
        return: [uint32]
    ]
    dbus_error_is_remote_error: make-routine gio "g_dbus_error_is_remote_error" [
        error [pointer]
        return: [int32]
    ]
    dbus_error_get_remote_error: make-routine gio "g_dbus_error_get_remote_error" [
        error [pointer]
        return: [pointer]
    ]
    dbus_error_strip_remote_error: make-routine gio "g_dbus_error_strip_remote_error" [
        error [pointer]
        return: [int32]
    ]
    dbus_error_register_error: make-routine gio "g_dbus_error_register_error" [
        error_domain [uint32]
        error_code [int32]
        dbus_error_name [pointer]
        return: [int32]
    ]
    dbus_error_unregister_error: make-routine gio "g_dbus_error_unregister_error" [
        error_domain [uint32]
        error_code [int32]
        dbus_error_name [pointer]
        return: [int32]
    ]
    dbus_error_register_error_domain: make-routine gio "g_dbus_error_register_error_domain" [
        error_domain_quark_name [pointer]
        quark_volatile [pointer]
        entries [pointer]
        num_entries [uint32]
        return: [void]
    ]
    dbus_error_new_for_dbus_error: make-routine gio "g_dbus_error_new_for_dbus_error" [
        dbus_error_name [pointer]
        dbus_error_message [pointer]
        return: [pointer]
    ]
    dbus_error_set_dbus_error: make-routine gio "g_dbus_error_set_dbus_error" [
        error [pointer]
        dbus_error_name [pointer]
        dbus_error_message [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    dbus_error_set_dbus_error_valist: make-routine gio "g_dbus_error_set_dbus_error_valist" [
        error [pointer]
        dbus_error_name [pointer]
        dbus_error_message [pointer]
        format [pointer]
        var_args [int32]
        return: [void]
    ]
    dbus_error_encode_gerror: make-routine gio "g_dbus_error_encode_gerror" [
        error [pointer]
        return: [pointer]
    ]
    dbus_annotation_info_lookup: make-routine gio "g_dbus_annotation_info_lookup" [
        annotations [pointer]
        name [pointer]
        return: [pointer]
    ]
    dbus_interface_info_lookup_method: make-routine gio "g_dbus_interface_info_lookup_method" [
        info [pointer]
        name [pointer]
        return: [pointer]
    ]
    dbus_interface_info_lookup_signal: make-routine gio "g_dbus_interface_info_lookup_signal" [
        info [pointer]
        name [pointer]
        return: [pointer]
    ]
    dbus_interface_info_lookup_property: make-routine gio "g_dbus_interface_info_lookup_property" [
        info [pointer]
        name [pointer]
        return: [pointer]
    ]
    dbus_interface_info_cache_build: make-routine gio "g_dbus_interface_info_cache_build" [
        info [pointer]
        return: [void]
    ]
    dbus_interface_info_cache_release: make-routine gio "g_dbus_interface_info_cache_release" [
        info [pointer]
        return: [void]
    ]
    dbus_interface_info_generate_xml: make-routine gio "g_dbus_interface_info_generate_xml" [
        info [pointer]
        indent [uint32]
        string_builder [pointer]
        return: [void]
    ]
    dbus_node_info_new_for_xml: make-routine gio "g_dbus_node_info_new_for_xml" [
        xml_data [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_node_info_lookup_interface: make-routine gio "g_dbus_node_info_lookup_interface" [
        info [pointer]
        name [pointer]
        return: [pointer]
    ]
    dbus_node_info_generate_xml: make-routine gio "g_dbus_node_info_generate_xml" [
        info [pointer]
        indent [uint32]
        string_builder [pointer]
        return: [void]
    ]
    dbus_node_info_ref: make-routine gio "g_dbus_node_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_interface_info_ref: make-routine gio "g_dbus_interface_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_method_info_ref: make-routine gio "g_dbus_method_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_signal_info_ref: make-routine gio "g_dbus_signal_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_property_info_ref: make-routine gio "g_dbus_property_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_arg_info_ref: make-routine gio "g_dbus_arg_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_annotation_info_ref: make-routine gio "g_dbus_annotation_info_ref" [
        info [pointer]
        return: [pointer]
    ]
    dbus_node_info_unref: make-routine gio "g_dbus_node_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_interface_info_unref: make-routine gio "g_dbus_interface_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_method_info_unref: make-routine gio "g_dbus_method_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_signal_info_unref: make-routine gio "g_dbus_signal_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_property_info_unref: make-routine gio "g_dbus_property_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_arg_info_unref: make-routine gio "g_dbus_arg_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_annotation_info_unref: make-routine gio "g_dbus_annotation_info_unref" [
        info [pointer]
        return: [void]
    ]
    dbus_node_info_get_type: make-routine gio "g_dbus_node_info_get_type" [
        return: [uint64]
    ]
    dbus_interface_info_get_type: make-routine gio "g_dbus_interface_info_get_type" [
        return: [uint64]
    ]
    dbus_method_info_get_type: make-routine gio "g_dbus_method_info_get_type" [
        return: [uint64]
    ]
    dbus_signal_info_get_type: make-routine gio "g_dbus_signal_info_get_type" [
        return: [uint64]
    ]
    dbus_property_info_get_type: make-routine gio "g_dbus_property_info_get_type" [
        return: [uint64]
    ]
    dbus_arg_info_get_type: make-routine gio "g_dbus_arg_info_get_type" [
        return: [uint64]
    ]
    dbus_annotation_info_get_type: make-routine gio "g_dbus_annotation_info_get_type" [
        return: [uint64]
    ]
    dbus_message_get_type: make-routine gio "g_dbus_message_get_type" [
        return: [uint64]
    ]
    dbus_message_new: make-routine gio "g_dbus_message_new" [
        return: [pointer]
    ]
    dbus_message_new_signal: make-routine gio "g_dbus_message_new_signal" [
        path [pointer]
        interface_ [pointer]
        signal [pointer]
        return: [pointer]
    ]
    dbus_message_new_method_call: make-routine gio "g_dbus_message_new_method_call" [
        name [pointer]
        path [pointer]
        interface_ [pointer]
        method [pointer]
        return: [pointer]
    ]
    dbus_message_new_method_reply: make-routine gio "g_dbus_message_new_method_reply" [
        method_call_message [pointer]
        return: [pointer]
    ]
    dbus_message_new_method_error: make-routine gio "g_dbus_message_new_method_error" [
        method_call_message [pointer]
        error_name [pointer]
        error_message_format [pointer]
        ...
        return: [pointer]
    ]
    dbus_message_new_method_error_valist: make-routine gio "g_dbus_message_new_method_error_valist" [
        method_call_message [pointer]
        error_name [pointer]
        error_message_format [pointer]
        var_args [int32]
        return: [pointer]
    ]
    dbus_message_new_method_error_literal: make-routine gio "g_dbus_message_new_method_error_literal" [
        method_call_message [pointer]
        error_name [pointer]
        error_message [pointer]
        return: [pointer]
    ]
    dbus_message_print: make-routine gio "g_dbus_message_print" [
        message [pointer]
        indent [uint32]
        return: [pointer]
    ]
    dbus_message_get_locked: make-routine gio "g_dbus_message_get_locked" [
        message [pointer]
        return: [int32]
    ]
    dbus_message_lock: make-routine gio "g_dbus_message_lock" [
        message [pointer]
        return: [void]
    ]
    dbus_message_copy: make-routine gio "g_dbus_message_copy" [
        message [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_message_get_byte_order: make-routine gio "g_dbus_message_get_byte_order" [
        message [pointer]
        return: [int32]
    ]
    dbus_message_set_byte_order: make-routine gio "g_dbus_message_set_byte_order" [
        message [pointer]
        byte_order [int32]
        return: [void]
    ]
    dbus_message_get_message_type: make-routine gio "g_dbus_message_get_message_type" [
        message [pointer]
        return: [int32]
    ]
    dbus_message_set_message_type: make-routine gio "g_dbus_message_set_message_type" [
        message [pointer]
        type [int32]
        return: [void]
    ]
    dbus_message_get_flags: make-routine gio "g_dbus_message_get_flags" [
        message [pointer]
        return: [int32]
    ]
    dbus_message_set_flags: make-routine gio "g_dbus_message_set_flags" [
        message [pointer]
        flags [int32]
        return: [void]
    ]
    dbus_message_get_serial: make-routine gio "g_dbus_message_get_serial" [
        message [pointer]
        return: [uint32]
    ]
    dbus_message_set_serial: make-routine gio "g_dbus_message_set_serial" [
        message [pointer]
        serial [uint32]
        return: [void]
    ]
    dbus_message_get_header: make-routine gio "g_dbus_message_get_header" [
        message [pointer]
        header_field [int32]
        return: [pointer]
    ]
    dbus_message_set_header: make-routine gio "g_dbus_message_set_header" [
        message [pointer]
        header_field [int32]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_header_fields: make-routine gio "g_dbus_message_get_header_fields" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_get_body: make-routine gio "g_dbus_message_get_body" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_body: make-routine gio "g_dbus_message_set_body" [
        message [pointer]
        body [pointer]
        return: [void]
    ]
    dbus_message_get_unix_fd_list: make-routine gio "g_dbus_message_get_unix_fd_list" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_unix_fd_list: make-routine gio "g_dbus_message_set_unix_fd_list" [
        message [pointer]
        fd_list [pointer]
        return: [void]
    ]
    dbus_message_get_reply_serial: make-routine gio "g_dbus_message_get_reply_serial" [
        message [pointer]
        return: [uint32]
    ]
    dbus_message_set_reply_serial: make-routine gio "g_dbus_message_set_reply_serial" [
        message [pointer]
        value [uint32]
        return: [void]
    ]
    dbus_message_get_interface: make-routine gio "g_dbus_message_get_interface" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_interface: make-routine gio "g_dbus_message_set_interface" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_member: make-routine gio "g_dbus_message_get_member" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_member: make-routine gio "g_dbus_message_set_member" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_path: make-routine gio "g_dbus_message_get_path" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_path: make-routine gio "g_dbus_message_set_path" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_sender: make-routine gio "g_dbus_message_get_sender" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_sender: make-routine gio "g_dbus_message_set_sender" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_destination: make-routine gio "g_dbus_message_get_destination" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_destination: make-routine gio "g_dbus_message_set_destination" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_error_name: make-routine gio "g_dbus_message_get_error_name" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_error_name: make-routine gio "g_dbus_message_set_error_name" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_signature: make-routine gio "g_dbus_message_get_signature" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_set_signature: make-routine gio "g_dbus_message_set_signature" [
        message [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_message_get_num_unix_fds: make-routine gio "g_dbus_message_get_num_unix_fds" [
        message [pointer]
        return: [uint32]
    ]
    dbus_message_set_num_unix_fds: make-routine gio "g_dbus_message_set_num_unix_fds" [
        message [pointer]
        value [uint32]
        return: [void]
    ]
    dbus_message_get_arg0: make-routine gio "g_dbus_message_get_arg0" [
        message [pointer]
        return: [pointer]
    ]
    dbus_message_new_from_blob: make-routine gio "g_dbus_message_new_from_blob" [
        blob [pointer]
        blob_len [uint64]
        capabilities [int32]
        error [pointer]
        return: [pointer]
    ]
    dbus_message_bytes_needed: make-routine gio "g_dbus_message_bytes_needed" [
        blob [pointer]
        blob_len [uint64]
        error [pointer]
        return: [int64]
    ]
    dbus_message_to_blob: make-routine gio "g_dbus_message_to_blob" [
        message [pointer]
        out_size [pointer]
        capabilities [int32]
        error [pointer]
        return: [pointer]
    ]
    dbus_message_to_gerror: make-routine gio "g_dbus_message_to_gerror" [
        message [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_method_invocation_get_type: make-routine gio "g_dbus_method_invocation_get_type" [
        return: [uint64]
    ]
    dbus_method_invocation_get_sender: make-routine gio "g_dbus_method_invocation_get_sender" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_object_path: make-routine gio "g_dbus_method_invocation_get_object_path" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_interface_name: make-routine gio "g_dbus_method_invocation_get_interface_name" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_method_name: make-routine gio "g_dbus_method_invocation_get_method_name" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_method_info: make-routine gio "g_dbus_method_invocation_get_method_info" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_property_info: make-routine gio "g_dbus_method_invocation_get_property_info" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_connection: make-routine gio "g_dbus_method_invocation_get_connection" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_message: make-routine gio "g_dbus_method_invocation_get_message" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_parameters: make-routine gio "g_dbus_method_invocation_get_parameters" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_get_user_data: make-routine gio "g_dbus_method_invocation_get_user_data" [
        invocation [pointer]
        return: [pointer]
    ]
    dbus_method_invocation_return_value: make-routine gio "g_dbus_method_invocation_return_value" [
        invocation [pointer]
        parameters [pointer]
        return: [void]
    ]
    dbus_method_invocation_return_value_with_unix_fd_list: make-routine gio {g_dbus_method_invocation_return_value_with_unix_fd_list} [
        invocation [pointer]
        parameters [pointer]
        fd_list [pointer]
        return: [void]
    ]
    dbus_method_invocation_return_error: make-routine gio "g_dbus_method_invocation_return_error" [
        invocation [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [void]
    ]
    dbus_method_invocation_return_error_valist: make-routine gio "g_dbus_method_invocation_return_error_valist" [
        invocation [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        var_args [int32]
        return: [void]
    ]
    dbus_method_invocation_return_error_literal: make-routine gio "g_dbus_method_invocation_return_error_literal" [
        invocation [pointer]
        domain [uint32]
        code [int32]
        message [pointer]
        return: [void]
    ]
    dbus_method_invocation_return_gerror: make-routine gio "g_dbus_method_invocation_return_gerror" [
        invocation [pointer]
        error [pointer]
        return: [void]
    ]
    dbus_method_invocation_take_error: make-routine gio "g_dbus_method_invocation_take_error" [
        invocation [pointer]
        error [pointer]
        return: [void]
    ]
    dbus_method_invocation_return_dbus_error: make-routine gio "g_dbus_method_invocation_return_dbus_error" [
        invocation [pointer]
        error_name [pointer]
        error_message [pointer]
        return: [void]
    ]
    bus_own_name: make-routine gio "g_bus_own_name" [
        bus_type [int32]
        name [pointer]
        flags [int32]
        bus_acquired_handler [pointer]
        name_acquired_handler [pointer]
        name_lost_handler [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        return: [uint32]
    ]
    bus_own_name_on_connection: make-routine gio "g_bus_own_name_on_connection" [
        connection [pointer]
        name [pointer]
        flags [int32]
        name_acquired_handler [pointer]
        name_lost_handler [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        return: [uint32]
    ]
    bus_own_name_with_closures: make-routine gio "g_bus_own_name_with_closures" [
        bus_type [int32]
        name [pointer]
        flags [int32]
        bus_acquired_closure [pointer]
        name_acquired_closure [pointer]
        name_lost_closure [pointer]
        return: [uint32]
    ]
    bus_own_name_on_connection_with_closures: make-routine gio "g_bus_own_name_on_connection_with_closures" [
        connection [pointer]
        name [pointer]
        flags [int32]
        name_acquired_closure [pointer]
        name_lost_closure [pointer]
        return: [uint32]
    ]
    bus_unown_name: make-routine gio "g_bus_unown_name" [
        owner_id [uint32]
        return: [void]
    ]
    bus_watch_name: make-routine gio "g_bus_watch_name" [
        bus_type [int32]
        name [pointer]
        flags [int32]
        name_appeared_handler [pointer]
        name_vanished_handler [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        return: [uint32]
    ]
    bus_watch_name_on_connection: make-routine gio "g_bus_watch_name_on_connection" [
        connection [pointer]
        name [pointer]
        flags [int32]
        name_appeared_handler [pointer]
        name_vanished_handler [pointer]
        user_data [pointer]
        user_data_free_func [pointer]
        return: [uint32]
    ]
    bus_watch_name_with_closures: make-routine gio "g_bus_watch_name_with_closures" [
        bus_type [int32]
        name [pointer]
        flags [int32]
        name_appeared_closure [pointer]
        name_vanished_closure [pointer]
        return: [uint32]
    ]
    bus_watch_name_on_connection_with_closures: make-routine gio "g_bus_watch_name_on_connection_with_closures" [
        connection [pointer]
        name [pointer]
        flags [int32]
        name_appeared_closure [pointer]
        name_vanished_closure [pointer]
        return: [uint32]
    ]
    bus_unwatch_name: make-routine gio "g_bus_unwatch_name" [
        watcher_id [uint32]
        return: [void]
    ]
    dbus_proxy_get_type: make-routine gio "g_dbus_proxy_get_type" [
        return: [uint64]
    ]
    dbus_proxy_new: make-routine gio "g_dbus_proxy_new" [
        connection [pointer]
        flags [int32]
        info [pointer]
        name [pointer]
        object_path [pointer]
        interface_name [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_proxy_new_finish: make-routine gio "g_dbus_proxy_new_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_new_sync: make-routine gio "g_dbus_proxy_new_sync" [
        connection [pointer]
        flags [int32]
        info [pointer]
        name [pointer]
        object_path [pointer]
        interface_name [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_new_for_bus: make-routine gio "g_dbus_proxy_new_for_bus" [
        bus_type [int32]
        flags [int32]
        info [pointer]
        name [pointer]
        object_path [pointer]
        interface_name [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_proxy_new_for_bus_finish: make-routine gio "g_dbus_proxy_new_for_bus_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_new_for_bus_sync: make-routine gio "g_dbus_proxy_new_for_bus_sync" [
        bus_type [int32]
        flags [int32]
        info [pointer]
        name [pointer]
        object_path [pointer]
        interface_name [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_get_connection: make-routine gio "g_dbus_proxy_get_connection" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_get_flags: make-routine gio "g_dbus_proxy_get_flags" [
        proxy [pointer]
        return: [int32]
    ]
    dbus_proxy_get_name: make-routine gio "g_dbus_proxy_get_name" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_get_name_owner: make-routine gio "g_dbus_proxy_get_name_owner" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_get_object_path: make-routine gio "g_dbus_proxy_get_object_path" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_get_interface_name: make-routine gio "g_dbus_proxy_get_interface_name" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_get_default_timeout: make-routine gio "g_dbus_proxy_get_default_timeout" [
        proxy [pointer]
        return: [int32]
    ]
    dbus_proxy_set_default_timeout: make-routine gio "g_dbus_proxy_set_default_timeout" [
        proxy [pointer]
        timeout_msec [int32]
        return: [void]
    ]
    dbus_proxy_get_interface_info: make-routine gio "g_dbus_proxy_get_interface_info" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_set_interface_info: make-routine gio "g_dbus_proxy_set_interface_info" [
        proxy [pointer]
        info [pointer]
        return: [void]
    ]
    dbus_proxy_get_cached_property: make-routine gio "g_dbus_proxy_get_cached_property" [
        proxy [pointer]
        property_name [pointer]
        return: [pointer]
    ]
    dbus_proxy_set_cached_property: make-routine gio "g_dbus_proxy_set_cached_property" [
        proxy [pointer]
        property_name [pointer]
        value [pointer]
        return: [void]
    ]
    dbus_proxy_get_cached_property_names: make-routine gio "g_dbus_proxy_get_cached_property_names" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_proxy_call: make-routine gio "g_dbus_proxy_call" [
        proxy [pointer]
        method_name [pointer]
        parameters [pointer]
        flags [int32]
        timeout_msec [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_proxy_call_finish: make-routine gio "g_dbus_proxy_call_finish" [
        proxy [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_call_sync: make-routine gio "g_dbus_proxy_call_sync" [
        proxy [pointer]
        method_name [pointer]
        parameters [pointer]
        flags [int32]
        timeout_msec [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_call_with_unix_fd_list: make-routine gio "g_dbus_proxy_call_with_unix_fd_list" [
        proxy [pointer]
        method_name [pointer]
        parameters [pointer]
        flags [int32]
        timeout_msec [int32]
        fd_list [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_proxy_call_with_unix_fd_list_finish: make-routine gio "g_dbus_proxy_call_with_unix_fd_list_finish" [
        proxy [pointer]
        out_fd_list [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_proxy_call_with_unix_fd_list_sync: make-routine gio "g_dbus_proxy_call_with_unix_fd_list_sync" [
        proxy [pointer]
        method_name [pointer]
        parameters [pointer]
        flags [int32]
        timeout_msec [int32]
        fd_list [pointer]
        out_fd_list [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_server_get_type: make-routine gio "g_dbus_server_get_type" [
        return: [uint64]
    ]
    dbus_server_new_sync: make-routine gio "g_dbus_server_new_sync" [
        address [pointer]
        flags [int32]
        guid [pointer]
        observer [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_server_get_client_address: make-routine gio "g_dbus_server_get_client_address" [
        server [pointer]
        return: [pointer]
    ]
    dbus_server_get_guid: make-routine gio "g_dbus_server_get_guid" [
        server [pointer]
        return: [pointer]
    ]
    dbus_server_get_flags: make-routine gio "g_dbus_server_get_flags" [
        server [pointer]
        return: [int32]
    ]
    dbus_server_start: make-routine gio "g_dbus_server_start" [
        server [pointer]
        return: [void]
    ]
    dbus_server_stop: make-routine gio "g_dbus_server_stop" [
        server [pointer]
        return: [void]
    ]
    dbus_server_is_active: make-routine gio "g_dbus_server_is_active" [
        server [pointer]
        return: [int32]
    ]
    dbus_is_guid: make-routine gio "g_dbus_is_guid" [
        string [pointer]
        return: [int32]
    ]
    dbus_generate_guid: make-routine gio "g_dbus_generate_guid" [
        return: [pointer]
    ]
    dbus_is_name: make-routine gio "g_dbus_is_name" [
        string [pointer]
        return: [int32]
    ]
    dbus_is_unique_name: make-routine gio "g_dbus_is_unique_name" [
        string [pointer]
        return: [int32]
    ]
    dbus_is_member_name: make-routine gio "g_dbus_is_member_name" [
        string [pointer]
        return: [int32]
    ]
    dbus_is_interface_name: make-routine gio "g_dbus_is_interface_name" [
        string [pointer]
        return: [int32]
    ]
    dbus_gvariant_to_gvalue: make-routine gio "g_dbus_gvariant_to_gvalue" [
        value [pointer]
        out_gvalue [pointer]
        return: [void]
    ]
    dbus_gvalue_to_gvariant: make-routine gio "g_dbus_gvalue_to_gvariant" [
        gvalue [pointer]
        type [pointer]
        return: [pointer]
    ]
    drive_get_type: make-routine gio "g_drive_get_type" [
        return: [uint64]
    ]
    drive_get_name: make-routine gio "g_drive_get_name" [
        drive [pointer]
        return: [pointer]
    ]
    drive_get_icon: make-routine gio "g_drive_get_icon" [
        drive [pointer]
        return: [pointer]
    ]
    drive_get_symbolic_icon: make-routine gio "g_drive_get_symbolic_icon" [
        drive [pointer]
        return: [pointer]
    ]
    drive_has_volumes: make-routine gio "g_drive_has_volumes" [
        drive [pointer]
        return: [int32]
    ]
    drive_get_volumes: make-routine gio "g_drive_get_volumes" [
        drive [pointer]
        return: [pointer]
    ]
    drive_is_media_removable: make-routine gio "g_drive_is_media_removable" [
        drive [pointer]
        return: [int32]
    ]
    drive_has_media: make-routine gio "g_drive_has_media" [
        drive [pointer]
        return: [int32]
    ]
    drive_is_media_check_automatic: make-routine gio "g_drive_is_media_check_automatic" [
        drive [pointer]
        return: [int32]
    ]
    drive_can_poll_for_media: make-routine gio "g_drive_can_poll_for_media" [
        drive [pointer]
        return: [int32]
    ]
    drive_can_eject: make-routine gio "g_drive_can_eject" [
        drive [pointer]
        return: [int32]
    ]
    drive_poll_for_media: make-routine gio "g_drive_poll_for_media" [
        drive [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    drive_poll_for_media_finish: make-routine gio "g_drive_poll_for_media_finish" [
        drive [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    drive_get_identifier: make-routine gio "g_drive_get_identifier" [
        drive [pointer]
        kind [pointer]
        return: [pointer]
    ]
    drive_enumerate_identifiers: make-routine gio "g_drive_enumerate_identifiers" [
        drive [pointer]
        return: [pointer]
    ]
    drive_get_start_stop_type: make-routine gio "g_drive_get_start_stop_type" [
        drive [pointer]
        return: [int32]
    ]
    drive_can_start: make-routine gio "g_drive_can_start" [
        drive [pointer]
        return: [int32]
    ]
    drive_can_start_degraded: make-routine gio "g_drive_can_start_degraded" [
        drive [pointer]
        return: [int32]
    ]
    drive_start: make-routine gio "g_drive_start" [
        drive [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    drive_start_finish: make-routine gio "g_drive_start_finish" [
        drive [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    drive_can_stop: make-routine gio "g_drive_can_stop" [
        drive [pointer]
        return: [int32]
    ]
    drive_stop: make-routine gio "g_drive_stop" [
        drive [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    drive_stop_finish: make-routine gio "g_drive_stop_finish" [
        drive [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    drive_eject_with_operation: make-routine gio "g_drive_eject_with_operation" [
        drive [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    drive_eject_with_operation_finish: make-routine gio "g_drive_eject_with_operation_finish" [
        drive [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    drive_get_sort_key: make-routine gio "g_drive_get_sort_key" [
        drive [pointer]
        return: [pointer]
    ]
    icon_get_type: make-routine gio "g_icon_get_type" [
        return: [uint64]
    ]
    icon_hash: make-routine gio "g_icon_hash" [
        icon [pointer]
        return: [uint32]
    ]
    icon_equal: make-routine gio "g_icon_equal" [
        icon1 [pointer]
        icon2 [pointer]
        return: [int32]
    ]
    icon_to_string: make-routine gio "g_icon_to_string" [
        icon [pointer]
        return: [pointer]
    ]
    icon_new_for_string: make-routine gio "g_icon_new_for_string" [
        str [pointer]
        error [pointer]
        return: [pointer]
    ]
    icon_serialize: make-routine gio "g_icon_serialize" [
        icon [pointer]
        return: [pointer]
    ]
    icon_deserialize: make-routine gio "g_icon_deserialize" [
        value [pointer]
        return: [pointer]
    ]
    emblem_get_type: make-routine gio "g_emblem_get_type" [
        return: [uint64]
    ]
    emblem_new: make-routine gio "g_emblem_new" [
        icon [pointer]
        return: [pointer]
    ]
    emblem_new_with_origin: make-routine gio "g_emblem_new_with_origin" [
        icon [pointer]
        origin [int32]
        return: [pointer]
    ]
    emblem_get_icon: make-routine gio "g_emblem_get_icon" [
        emblem [pointer]
        return: [pointer]
    ]
    emblem_get_origin: make-routine gio "g_emblem_get_origin" [
        emblem [pointer]
        return: [int32]
    ]
    emblemed_icon_get_type: make-routine gio "g_emblemed_icon_get_type" [
        return: [uint64]
    ]
    emblemed_icon_new: make-routine gio "g_emblemed_icon_new" [
        icon [pointer]
        emblem [pointer]
        return: [pointer]
    ]
    emblemed_icon_get_icon: make-routine gio "g_emblemed_icon_get_icon" [
        emblemed [pointer]
        return: [pointer]
    ]
    emblemed_icon_get_emblems: make-routine gio "g_emblemed_icon_get_emblems" [
        emblemed [pointer]
        return: [pointer]
    ]
    emblemed_icon_add_emblem: make-routine gio "g_emblemed_icon_add_emblem" [
        emblemed [pointer]
        emblem [pointer]
        return: [void]
    ]
    emblemed_icon_clear_emblems: make-routine gio "g_emblemed_icon_clear_emblems" [
        emblemed [pointer]
        return: [void]
    ]
    file_attribute_info_list_get_type: make-routine gio "g_file_attribute_info_list_get_type" [
        return: [uint64]
    ]
    file_attribute_info_list_new: make-routine gio "g_file_attribute_info_list_new" [
        return: [pointer]
    ]
    file_attribute_info_list_ref: make-routine gio "g_file_attribute_info_list_ref" [
        list [pointer]
        return: [pointer]
    ]
    file_attribute_info_list_unref: make-routine gio "g_file_attribute_info_list_unref" [
        list [pointer]
        return: [void]
    ]
    file_attribute_info_list_dup: make-routine gio "g_file_attribute_info_list_dup" [
        list [pointer]
        return: [pointer]
    ]
    file_attribute_info_list_lookup: make-routine gio "g_file_attribute_info_list_lookup" [
        list [pointer]
        name [pointer]
        return: [pointer]
    ]
    file_attribute_info_list_add: make-routine gio "g_file_attribute_info_list_add" [
        list [pointer]
        name [pointer]
        type [int32]
        flags [int32]
        return: [void]
    ]
    file_enumerator_get_type: make-routine gio "g_file_enumerator_get_type" [
        return: [uint64]
    ]
    file_enumerator_next_file: make-routine gio "g_file_enumerator_next_file" [
        enumerator [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_enumerator_close: make-routine gio "g_file_enumerator_close" [
        enumerator [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_enumerator_next_files_async: make-routine gio "g_file_enumerator_next_files_async" [
        enumerator [pointer]
        num_files [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_enumerator_next_files_finish: make-routine gio "g_file_enumerator_next_files_finish" [
        enumerator [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_enumerator_close_async: make-routine gio "g_file_enumerator_close_async" [
        enumerator [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_enumerator_close_finish: make-routine gio "g_file_enumerator_close_finish" [
        enumerator [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_enumerator_is_closed: make-routine gio "g_file_enumerator_is_closed" [
        enumerator [pointer]
        return: [int32]
    ]
    file_enumerator_has_pending: make-routine gio "g_file_enumerator_has_pending" [
        enumerator [pointer]
        return: [int32]
    ]
    file_enumerator_set_pending: make-routine gio "g_file_enumerator_set_pending" [
        enumerator [pointer]
        pending [int32]
        return: [void]
    ]
    file_enumerator_get_container: make-routine gio "g_file_enumerator_get_container" [
        enumerator [pointer]
        return: [pointer]
    ]
    file_enumerator_get_child: make-routine gio "g_file_enumerator_get_child" [
        enumerator [pointer]
        info [pointer]
        return: [pointer]
    ]
    file_get_type: make-routine gio "g_file_get_type" [
        return: [uint64]
    ]
    file_new_for_path: make-routine gio "g_file_new_for_path" [
        path [pointer]
        return: [pointer]
    ]
    file_new_for_uri: make-routine gio "g_file_new_for_uri" [
        uri [pointer]
        return: [pointer]
    ]
    file_new_for_commandline_arg: make-routine gio "g_file_new_for_commandline_arg" [
        arg [pointer]
        return: [pointer]
    ]
    file_new_for_commandline_arg_and_cwd: make-routine gio "g_file_new_for_commandline_arg_and_cwd" [
        arg [pointer]
        cwd [pointer]
        return: [pointer]
    ]
    file_new_tmp: make-routine gio "g_file_new_tmp" [
        tmpl [pointer]
        iostream [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_parse_name: make-routine gio "g_file_parse_name" [
        parse_name [pointer]
        return: [pointer]
    ]
    file_dup: make-routine gio "g_file_dup" [
        file [pointer]
        return: [pointer]
    ]
    file_hash: make-routine gio "g_file_hash" [
        file [pointer]
        return: [uint32]
    ]
    file_equal: make-routine gio "g_file_equal" [
        file1 [pointer]
        file2 [pointer]
        return: [int32]
    ]
    file_get_basename: make-routine gio "g_file_get_basename" [
        file [pointer]
        return: [pointer]
    ]
    file_get_path: make-routine gio "g_file_get_path" [
        file [pointer]
        return: [pointer]
    ]
    file_get_uri: make-routine gio "g_file_get_uri" [
        file [pointer]
        return: [pointer]
    ]
    file_get_parse_name: make-routine gio "g_file_get_parse_name" [
        file [pointer]
        return: [pointer]
    ]
    file_get_parent: make-routine gio "g_file_get_parent" [
        file [pointer]
        return: [pointer]
    ]
    file_has_parent: make-routine gio "g_file_has_parent" [
        file [pointer]
        parent [pointer]
        return: [int32]
    ]
    file_get_child: make-routine gio "g_file_get_child" [
        file [pointer]
        name [pointer]
        return: [pointer]
    ]
    file_get_child_for_display_name: make-routine gio "g_file_get_child_for_display_name" [
        file [pointer]
        display_name [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_has_prefix: make-routine gio "g_file_has_prefix" [
        file [pointer]
        prefix [pointer]
        return: [int32]
    ]
    file_get_relative_path: make-routine gio "g_file_get_relative_path" [
        parent [pointer]
        descendant [pointer]
        return: [pointer]
    ]
    file_resolve_relative_path: make-routine gio "g_file_resolve_relative_path" [
        file [pointer]
        relative_path [pointer]
        return: [pointer]
    ]
    file_is_native: make-routine gio "g_file_is_native" [
        file [pointer]
        return: [int32]
    ]
    file_has_uri_scheme: make-routine gio "g_file_has_uri_scheme" [
        file [pointer]
        uri_scheme [pointer]
        return: [int32]
    ]
    file_get_uri_scheme: make-routine gio "g_file_get_uri_scheme" [
        file [pointer]
        return: [pointer]
    ]
    file_read: make-routine gio "g_file_read" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_read_async: make-routine gio "g_file_read_async" [
        file [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_read_finish: make-routine gio "g_file_read_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_append_to: make-routine gio "g_file_append_to" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_create: make-routine gio "g_file_create" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_replace: make-routine gio "g_file_replace" [
        file [pointer]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_append_to_async: make-routine gio "g_file_append_to_async" [
        file [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_append_to_finish: make-routine gio "g_file_append_to_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_create_async: make-routine gio "g_file_create_async" [
        file [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_create_finish: make-routine gio "g_file_create_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_replace_async: make-routine gio "g_file_replace_async" [
        file [pointer]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_replace_finish: make-routine gio "g_file_replace_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_open_readwrite: make-routine gio "g_file_open_readwrite" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_open_readwrite_async: make-routine gio "g_file_open_readwrite_async" [
        file [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_open_readwrite_finish: make-routine gio "g_file_open_readwrite_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_create_readwrite: make-routine gio "g_file_create_readwrite" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_create_readwrite_async: make-routine gio "g_file_create_readwrite_async" [
        file [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_create_readwrite_finish: make-routine gio "g_file_create_readwrite_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_replace_readwrite: make-routine gio "g_file_replace_readwrite" [
        file [pointer]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_replace_readwrite_async: make-routine gio "g_file_replace_readwrite_async" [
        file [pointer]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_replace_readwrite_finish: make-routine gio "g_file_replace_readwrite_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_query_exists: make-routine gio "g_file_query_exists" [
        file [pointer]
        cancellable [pointer]
        return: [int32]
    ]
    file_query_file_type: make-routine gio "g_file_query_file_type" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        return: [int32]
    ]
    file_query_info: make-routine gio "g_file_query_info" [
        file [pointer]
        attributes [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_query_info_async: make-routine gio "g_file_query_info_async" [
        file [pointer]
        attributes [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_query_info_finish: make-routine gio "g_file_query_info_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_query_filesystem_info: make-routine gio "g_file_query_filesystem_info" [
        file [pointer]
        attributes [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_query_filesystem_info_async: make-routine gio "g_file_query_filesystem_info_async" [
        file [pointer]
        attributes [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_query_filesystem_info_finish: make-routine gio "g_file_query_filesystem_info_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_find_enclosing_mount: make-routine gio "g_file_find_enclosing_mount" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_find_enclosing_mount_async: make-routine gio "g_file_find_enclosing_mount_async" [
        file [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_find_enclosing_mount_finish: make-routine gio "g_file_find_enclosing_mount_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_enumerate_children: make-routine gio "g_file_enumerate_children" [
        file [pointer]
        attributes [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_enumerate_children_async: make-routine gio "g_file_enumerate_children_async" [
        file [pointer]
        attributes [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_enumerate_children_finish: make-routine gio "g_file_enumerate_children_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_set_display_name: make-routine gio "g_file_set_display_name" [
        file [pointer]
        display_name [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_set_display_name_async: make-routine gio "g_file_set_display_name_async" [
        file [pointer]
        display_name [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_set_display_name_finish: make-routine gio "g_file_set_display_name_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_delete: make-routine gio "g_file_delete" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_delete_async: make-routine gio "g_file_delete_async" [
        file [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_delete_finish: make-routine gio "g_file_delete_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_trash: make-routine gio "g_file_trash" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_trash_async: make-routine gio "g_file_trash_async" [
        file [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_trash_finish: make-routine gio "g_file_trash_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_copy: make-routine gio "g_file_copy" [
        source [pointer]
        destination [pointer]
        flags [int32]
        cancellable [pointer]
        progress_callback [pointer]
        progress_callback_data [pointer]
        error [pointer]
        return: [int32]
    ]
    file_copy_async: make-routine gio "g_file_copy_async" [
        source [pointer]
        destination [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        progress_callback [pointer]
        progress_callback_data [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_copy_finish: make-routine gio "g_file_copy_finish" [
        file [pointer]
        res [pointer]
        error [pointer]
        return: [int32]
    ]
    file_move: make-routine gio "g_file_move" [
        source [pointer]
        destination [pointer]
        flags [int32]
        cancellable [pointer]
        progress_callback [pointer]
        progress_callback_data [pointer]
        error [pointer]
        return: [int32]
    ]
    file_make_directory: make-routine gio "g_file_make_directory" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_make_directory_async: make-routine gio "g_file_make_directory_async" [
        file [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_make_directory_finish: make-routine gio "g_file_make_directory_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_make_directory_with_parents: make-routine gio "g_file_make_directory_with_parents" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_make_symbolic_link: make-routine gio "g_file_make_symbolic_link" [
        file [pointer]
        symlink_value [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_query_settable_attributes: make-routine gio "g_file_query_settable_attributes" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_query_writable_namespaces: make-routine gio "g_file_query_writable_namespaces" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_set_attribute: make-routine gio "g_file_set_attribute" [
        file [pointer]
        attribute [pointer]
        type [int32]
        value_p [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attributes_from_info: make-routine gio "g_file_set_attributes_from_info" [
        file [pointer]
        info [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attributes_async: make-routine gio "g_file_set_attributes_async" [
        file [pointer]
        info [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_set_attributes_finish: make-routine gio "g_file_set_attributes_finish" [
        file [pointer]
        result [pointer]
        info [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attribute_string: make-routine gio "g_file_set_attribute_string" [
        file [pointer]
        attribute [pointer]
        value [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attribute_byte_string: make-routine gio "g_file_set_attribute_byte_string" [
        file [pointer]
        attribute [pointer]
        value [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attribute_uint32: make-routine gio "g_file_set_attribute_uint32" [
        file [pointer]
        attribute [pointer]
        value [uint32]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attribute_int32: make-routine gio "g_file_set_attribute_int32" [
        file [pointer]
        attribute [pointer]
        value [int32]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attribute_uint64: make-routine gio "g_file_set_attribute_uint64" [
        file [pointer]
        attribute [pointer]
        value [uint64]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_set_attribute_int64: make-routine gio "g_file_set_attribute_int64" [
        file [pointer]
        attribute [pointer]
        value [int64]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_mount_enclosing_volume: make-routine gio "g_file_mount_enclosing_volume" [
        location [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_mount_enclosing_volume_finish: make-routine gio "g_file_mount_enclosing_volume_finish" [
        location [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_mount_mountable: make-routine gio "g_file_mount_mountable" [
        file [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_mount_mountable_finish: make-routine gio "g_file_mount_mountable_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_unmount_mountable_with_operation: make-routine gio "g_file_unmount_mountable_with_operation" [
        file [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_unmount_mountable_with_operation_finish: make-routine gio "g_file_unmount_mountable_with_operation_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_eject_mountable_with_operation: make-routine gio "g_file_eject_mountable_with_operation" [
        file [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_eject_mountable_with_operation_finish: make-routine gio "g_file_eject_mountable_with_operation_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_copy_attributes: make-routine gio "g_file_copy_attributes" [
        source [pointer]
        destination [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_monitor_directory: make-routine gio "g_file_monitor_directory" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_monitor_file: make-routine gio "g_file_monitor_file" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_monitor: make-routine gio "g_file_monitor" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_measure_disk_usage: make-routine gio "g_file_measure_disk_usage" [
        file [pointer]
        flags [int32]
        cancellable [pointer]
        progress_callback [pointer]
        progress_data [pointer]
        disk_usage [pointer]
        num_dirs [pointer]
        num_files [pointer]
        error [pointer]
        return: [int32]
    ]
    file_measure_disk_usage_async: make-routine gio "g_file_measure_disk_usage_async" [
        file [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        progress_callback [pointer]
        progress_data [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_measure_disk_usage_finish: make-routine gio "g_file_measure_disk_usage_finish" [
        file [pointer]
        result [pointer]
        disk_usage [pointer]
        num_dirs [pointer]
        num_files [pointer]
        error [pointer]
        return: [int32]
    ]
    file_start_mountable: make-routine gio "g_file_start_mountable" [
        file [pointer]
        flags [int32]
        start_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_start_mountable_finish: make-routine gio "g_file_start_mountable_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_stop_mountable: make-routine gio "g_file_stop_mountable" [
        file [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_stop_mountable_finish: make-routine gio "g_file_stop_mountable_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_poll_mountable: make-routine gio "g_file_poll_mountable" [
        file [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_poll_mountable_finish: make-routine gio "g_file_poll_mountable_finish" [
        file [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    file_query_default_handler: make-routine gio "g_file_query_default_handler" [
        file [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_load_contents: make-routine gio "g_file_load_contents" [
        file [pointer]
        cancellable [pointer]
        contents [pointer]
        length [pointer]
        etag_out [pointer]
        error [pointer]
        return: [int32]
    ]
    file_load_contents_async: make-routine gio "g_file_load_contents_async" [
        file [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_load_contents_finish: make-routine gio "g_file_load_contents_finish" [
        file [pointer]
        res [pointer]
        contents [pointer]
        length [pointer]
        etag_out [pointer]
        error [pointer]
        return: [int32]
    ]
    file_load_partial_contents_async: make-routine gio "g_file_load_partial_contents_async" [
        file [pointer]
        cancellable [pointer]
        read_more_callback [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_load_partial_contents_finish: make-routine gio "g_file_load_partial_contents_finish" [
        file [pointer]
        res [pointer]
        contents [pointer]
        length [pointer]
        etag_out [pointer]
        error [pointer]
        return: [int32]
    ]
    file_replace_contents: make-routine gio "g_file_replace_contents" [
        file [pointer]
        contents [pointer]
        length [uint64]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        new_etag [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    file_replace_contents_async: make-routine gio "g_file_replace_contents_async" [
        file [pointer]
        contents [pointer]
        length [uint64]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_replace_contents_bytes_async: make-routine gio "g_file_replace_contents_bytes_async" [
        file [pointer]
        contents [pointer]
        etag [pointer]
        make_backup [int32]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_replace_contents_finish: make-routine gio "g_file_replace_contents_finish" [
        file [pointer]
        res [pointer]
        new_etag [pointer]
        error [pointer]
        return: [int32]
    ]
    file_supports_thread_contexts: make-routine gio "g_file_supports_thread_contexts" [
        file [pointer]
        return: [int32]
    ]
    file_icon_get_type: make-routine gio "g_file_icon_get_type" [
        return: [uint64]
    ]
    file_icon_new: make-routine gio "g_file_icon_new" [
        file [pointer]
        return: [pointer]
    ]
    file_icon_get_file: make-routine gio "g_file_icon_get_file" [
        icon [pointer]
        return: [pointer]
    ]
    file_info_get_type: make-routine gio "g_file_info_get_type" [
        return: [uint64]
    ]
    file_info_new: make-routine gio "g_file_info_new" [
        return: [pointer]
    ]
    file_info_dup: make-routine gio "g_file_info_dup" [
        other [pointer]
        return: [pointer]
    ]
    file_info_copy_into: make-routine gio "g_file_info_copy_into" [
        src_info [pointer]
        dest_info [pointer]
        return: [void]
    ]
    file_info_has_attribute: make-routine gio "g_file_info_has_attribute" [
        info [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_info_has_namespace: make-routine gio "g_file_info_has_namespace" [
        info [pointer]
        name_space [pointer]
        return: [int32]
    ]
    file_info_list_attributes: make-routine gio "g_file_info_list_attributes" [
        info [pointer]
        name_space [pointer]
        return: [pointer]
    ]
    file_info_get_attribute_data: make-routine gio "g_file_info_get_attribute_data" [
        info [pointer]
        attribute [pointer]
        type [pointer]
        value_pp [pointer]
        status [pointer]
        return: [int32]
    ]
    file_info_get_attribute_type: make-routine gio "g_file_info_get_attribute_type" [
        info [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_info_remove_attribute: make-routine gio "g_file_info_remove_attribute" [
        info [pointer]
        attribute [pointer]
        return: [void]
    ]
    file_info_get_attribute_status: make-routine gio "g_file_info_get_attribute_status" [
        info [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_info_set_attribute_status: make-routine gio "g_file_info_set_attribute_status" [
        info [pointer]
        attribute [pointer]
        status [int32]
        return: [int32]
    ]
    file_info_get_attribute_as_string: make-routine gio "g_file_info_get_attribute_as_string" [
        info [pointer]
        attribute [pointer]
        return: [pointer]
    ]
    file_info_get_attribute_string: make-routine gio "g_file_info_get_attribute_string" [
        info [pointer]
        attribute [pointer]
        return: [pointer]
    ]
    file_info_get_attribute_byte_string: make-routine gio "g_file_info_get_attribute_byte_string" [
        info [pointer]
        attribute [pointer]
        return: [pointer]
    ]
    file_info_get_attribute_boolean: make-routine gio "g_file_info_get_attribute_boolean" [
        info [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_info_get_attribute_uint32: make-routine gio "g_file_info_get_attribute_uint32" [
        info [pointer]
        attribute [pointer]
        return: [uint32]
    ]
    file_info_get_attribute_int32: make-routine gio "g_file_info_get_attribute_int32" [
        info [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_info_get_attribute_uint64: make-routine gio "g_file_info_get_attribute_uint64" [
        info [pointer]
        attribute [pointer]
        return: [uint64]
    ]
    file_info_get_attribute_int64: make-routine gio "g_file_info_get_attribute_int64" [
        info [pointer]
        attribute [pointer]
        return: [int64]
    ]
    file_info_get_attribute_object: make-routine gio "g_file_info_get_attribute_object" [
        info [pointer]
        attribute [pointer]
        return: [pointer]
    ]
    file_info_get_attribute_stringv: make-routine gio "g_file_info_get_attribute_stringv" [
        info [pointer]
        attribute [pointer]
        return: [pointer]
    ]
    file_info_set_attribute: make-routine gio "g_file_info_set_attribute" [
        info [pointer]
        attribute [pointer]
        type [int32]
        value_p [pointer]
        return: [void]
    ]
    file_info_set_attribute_string: make-routine gio "g_file_info_set_attribute_string" [
        info [pointer]
        attribute [pointer]
        attr_value [pointer]
        return: [void]
    ]
    file_info_set_attribute_byte_string: make-routine gio "g_file_info_set_attribute_byte_string" [
        info [pointer]
        attribute [pointer]
        attr_value [pointer]
        return: [void]
    ]
    file_info_set_attribute_boolean: make-routine gio "g_file_info_set_attribute_boolean" [
        info [pointer]
        attribute [pointer]
        attr_value [int32]
        return: [void]
    ]
    file_info_set_attribute_uint32: make-routine gio "g_file_info_set_attribute_uint32" [
        info [pointer]
        attribute [pointer]
        attr_value [uint32]
        return: [void]
    ]
    file_info_set_attribute_int32: make-routine gio "g_file_info_set_attribute_int32" [
        info [pointer]
        attribute [pointer]
        attr_value [int32]
        return: [void]
    ]
    file_info_set_attribute_uint64: make-routine gio "g_file_info_set_attribute_uint64" [
        info [pointer]
        attribute [pointer]
        attr_value [uint64]
        return: [void]
    ]
    file_info_set_attribute_int64: make-routine gio "g_file_info_set_attribute_int64" [
        info [pointer]
        attribute [pointer]
        attr_value [int64]
        return: [void]
    ]
    file_info_set_attribute_object: make-routine gio "g_file_info_set_attribute_object" [
        info [pointer]
        attribute [pointer]
        attr_value [pointer]
        return: [void]
    ]
    file_info_set_attribute_stringv: make-routine gio "g_file_info_set_attribute_stringv" [
        info [pointer]
        attribute [pointer]
        attr_value [pointer]
        return: [void]
    ]
    file_info_clear_status: make-routine gio "g_file_info_clear_status" [
        info [pointer]
        return: [void]
    ]
    file_info_get_deletion_date: make-routine gio "g_file_info_get_deletion_date" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_file_type: make-routine gio "g_file_info_get_file_type" [
        info [pointer]
        return: [int32]
    ]
    file_info_get_is_hidden: make-routine gio "g_file_info_get_is_hidden" [
        info [pointer]
        return: [int32]
    ]
    file_info_get_is_backup: make-routine gio "g_file_info_get_is_backup" [
        info [pointer]
        return: [int32]
    ]
    file_info_get_is_symlink: make-routine gio "g_file_info_get_is_symlink" [
        info [pointer]
        return: [int32]
    ]
    file_info_get_name: make-routine gio "g_file_info_get_name" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_display_name: make-routine gio "g_file_info_get_display_name" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_edit_name: make-routine gio "g_file_info_get_edit_name" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_icon: make-routine gio "g_file_info_get_icon" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_symbolic_icon: make-routine gio "g_file_info_get_symbolic_icon" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_content_type: make-routine gio "g_file_info_get_content_type" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_size: make-routine gio "g_file_info_get_size" [
        info [pointer]
        return: [int64]
    ]
    file_info_get_modification_time: make-routine gio "g_file_info_get_modification_time" [
        info [pointer]
        result [pointer]
        return: [void]
    ]
    file_info_get_symlink_target: make-routine gio "g_file_info_get_symlink_target" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_etag: make-routine gio "g_file_info_get_etag" [
        info [pointer]
        return: [pointer]
    ]
    file_info_get_sort_order: make-routine gio "g_file_info_get_sort_order" [
        info [pointer]
        return: [int32]
    ]
    file_info_set_attribute_mask: make-routine gio "g_file_info_set_attribute_mask" [
        info [pointer]
        mask [pointer]
        return: [void]
    ]
    file_info_unset_attribute_mask: make-routine gio "g_file_info_unset_attribute_mask" [
        info [pointer]
        return: [void]
    ]
    file_info_set_file_type: make-routine gio "g_file_info_set_file_type" [
        info [pointer]
        type [int32]
        return: [void]
    ]
    file_info_set_is_hidden: make-routine gio "g_file_info_set_is_hidden" [
        info [pointer]
        is_hidden [int32]
        return: [void]
    ]
    file_info_set_is_symlink: make-routine gio "g_file_info_set_is_symlink" [
        info [pointer]
        is_symlink [int32]
        return: [void]
    ]
    file_info_set_name: make-routine gio "g_file_info_set_name" [
        info [pointer]
        name [pointer]
        return: [void]
    ]
    file_info_set_display_name: make-routine gio "g_file_info_set_display_name" [
        info [pointer]
        display_name [pointer]
        return: [void]
    ]
    file_info_set_edit_name: make-routine gio "g_file_info_set_edit_name" [
        info [pointer]
        edit_name [pointer]
        return: [void]
    ]
    file_info_set_icon: make-routine gio "g_file_info_set_icon" [
        info [pointer]
        icon [pointer]
        return: [void]
    ]
    file_info_set_symbolic_icon: make-routine gio "g_file_info_set_symbolic_icon" [
        info [pointer]
        icon [pointer]
        return: [void]
    ]
    file_info_set_content_type: make-routine gio "g_file_info_set_content_type" [
        info [pointer]
        content_type [pointer]
        return: [void]
    ]
    file_info_set_size: make-routine gio "g_file_info_set_size" [
        info [pointer]
        size [int64]
        return: [void]
    ]
    file_info_set_modification_time: make-routine gio "g_file_info_set_modification_time" [
        info [pointer]
        mtime [pointer]
        return: [void]
    ]
    file_info_set_symlink_target: make-routine gio "g_file_info_set_symlink_target" [
        info [pointer]
        symlink_target [pointer]
        return: [void]
    ]
    file_info_set_sort_order: make-routine gio "g_file_info_set_sort_order" [
        info [pointer]
        sort_order [int32]
        return: [void]
    ]
    file_attribute_matcher_get_type: make-routine gio "g_file_attribute_matcher_get_type" [
        return: [uint64]
    ]
    file_attribute_matcher_new: make-routine gio "g_file_attribute_matcher_new" [
        attributes [pointer]
        return: [pointer]
    ]
    file_attribute_matcher_ref: make-routine gio "g_file_attribute_matcher_ref" [
        matcher [pointer]
        return: [pointer]
    ]
    file_attribute_matcher_unref: make-routine gio "g_file_attribute_matcher_unref" [
        matcher [pointer]
        return: [void]
    ]
    file_attribute_matcher_subtract: make-routine gio "g_file_attribute_matcher_subtract" [
        matcher [pointer]
        subtract [pointer]
        return: [pointer]
    ]
    file_attribute_matcher_matches: make-routine gio "g_file_attribute_matcher_matches" [
        matcher [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_attribute_matcher_matches_only: make-routine gio "g_file_attribute_matcher_matches_only" [
        matcher [pointer]
        attribute [pointer]
        return: [int32]
    ]
    file_attribute_matcher_enumerate_namespace: make-routine gio "g_file_attribute_matcher_enumerate_namespace" [
        matcher [pointer]
        ns [pointer]
        return: [int32]
    ]
    file_attribute_matcher_enumerate_next: make-routine gio "g_file_attribute_matcher_enumerate_next" [
        matcher [pointer]
        return: [pointer]
    ]
    file_attribute_matcher_to_string: make-routine gio "g_file_attribute_matcher_to_string" [
        matcher [pointer]
        return: [pointer]
    ]
    file_input_stream_get_type: make-routine gio "g_file_input_stream_get_type" [
        return: [uint64]
    ]
    file_input_stream_query_info: make-routine gio "g_file_input_stream_query_info" [
        stream [pointer]
        attributes [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_input_stream_query_info_async: make-routine gio "g_file_input_stream_query_info_async" [
        stream [pointer]
        attributes [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_input_stream_query_info_finish: make-routine gio "g_file_input_stream_query_info_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    io_error_quark: make-routine gio "g_io_error_quark" [
        return: [uint32]
    ]
    io_error_from_errno: make-routine gio "g_io_error_from_errno" [
        err_no [int32]
        return: [int32]
    ]
    io_stream_get_type: make-routine gio "g_io_stream_get_type" [
        return: [uint64]
    ]
    io_stream_get_input_stream: make-routine gio "g_io_stream_get_input_stream" [
        stream [pointer]
        return: [pointer]
    ]
    io_stream_get_output_stream: make-routine gio "g_io_stream_get_output_stream" [
        stream [pointer]
        return: [pointer]
    ]
    io_stream_splice_async: make-routine gio "g_io_stream_splice_async" [
        stream1 [pointer]
        stream2 [pointer]
        flags [int32]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    io_stream_splice_finish: make-routine gio "g_io_stream_splice_finish" [
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    io_stream_close: make-routine gio "g_io_stream_close" [
        stream [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    io_stream_close_async: make-routine gio "g_io_stream_close_async" [
        stream [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    io_stream_close_finish: make-routine gio "g_io_stream_close_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    io_stream_is_closed: make-routine gio "g_io_stream_is_closed" [
        stream [pointer]
        return: [int32]
    ]
    io_stream_has_pending: make-routine gio "g_io_stream_has_pending" [
        stream [pointer]
        return: [int32]
    ]
    io_stream_set_pending: make-routine gio "g_io_stream_set_pending" [
        stream [pointer]
        error [pointer]
        return: [int32]
    ]
    io_stream_clear_pending: make-routine gio "g_io_stream_clear_pending" [
        stream [pointer]
        return: [void]
    ]
    file_io_stream_get_type: make-routine gio "g_file_io_stream_get_type" [
        return: [uint64]
    ]
    file_io_stream_query_info: make-routine gio "g_file_io_stream_query_info" [
        stream [pointer]
        attributes [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_io_stream_query_info_async: make-routine gio "g_file_io_stream_query_info_async" [
        stream [pointer]
        attributes [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_io_stream_query_info_finish: make-routine gio "g_file_io_stream_query_info_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_io_stream_get_etag: make-routine gio "g_file_io_stream_get_etag" [
        stream [pointer]
        return: [pointer]
    ]
    file_monitor_get_type: make-routine gio "g_file_monitor_get_type" [
        return: [uint64]
    ]
    file_monitor_cancel: make-routine gio "g_file_monitor_cancel" [
        monitor [pointer]
        return: [int32]
    ]
    file_monitor_is_cancelled: make-routine gio "g_file_monitor_is_cancelled" [
        monitor [pointer]
        return: [int32]
    ]
    file_monitor_set_rate_limit: make-routine gio "g_file_monitor_set_rate_limit" [
        monitor [pointer]
        limit_msecs [int32]
        return: [void]
    ]
    file_monitor_emit_event: make-routine gio "g_file_monitor_emit_event" [
        monitor [pointer]
        child [pointer]
        other_file [pointer]
        event_type [int32]
        return: [void]
    ]
    filename_completer_get_type: make-routine gio "g_filename_completer_get_type" [
        return: [uint64]
    ]
    filename_completer_new: make-routine gio "g_filename_completer_new" [
        return: [pointer]
    ]
    filename_completer_get_completion_suffix: make-routine gio "g_filename_completer_get_completion_suffix" [
        completer [pointer]
        initial_text [pointer]
        return: [pointer]
    ]
    filename_completer_get_completions: make-routine gio "g_filename_completer_get_completions" [
        completer [pointer]
        initial_text [pointer]
        return: [pointer]
    ]
    filename_completer_set_dirs_only: make-routine gio "g_filename_completer_set_dirs_only" [
        completer [pointer]
        dirs_only [int32]
        return: [void]
    ]
    file_output_stream_get_type: make-routine gio "g_file_output_stream_get_type" [
        return: [uint64]
    ]
    file_output_stream_query_info: make-routine gio "g_file_output_stream_query_info" [
        stream [pointer]
        attributes [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_output_stream_query_info_async: make-routine gio "g_file_output_stream_query_info_async" [
        stream [pointer]
        attributes [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    file_output_stream_query_info_finish: make-routine gio "g_file_output_stream_query_info_finish" [
        stream [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    file_output_stream_get_etag: make-routine gio "g_file_output_stream_get_etag" [
        stream [pointer]
        return: [pointer]
    ]
    inet_address_get_type: make-routine gio "g_inet_address_get_type" [
        return: [uint64]
    ]
    inet_address_new_from_string: make-routine gio "g_inet_address_new_from_string" [
        string [pointer]
        return: [pointer]
    ]
    inet_address_new_from_bytes: make-routine gio "g_inet_address_new_from_bytes" [
        bytes [pointer]
        family [int32]
        return: [pointer]
    ]
    inet_address_new_loopback: make-routine gio "g_inet_address_new_loopback" [
        family [int32]
        return: [pointer]
    ]
    inet_address_new_any: make-routine gio "g_inet_address_new_any" [
        family [int32]
        return: [pointer]
    ]
    inet_address_equal: make-routine gio "g_inet_address_equal" [
        address [pointer]
        other_address [pointer]
        return: [int32]
    ]
    inet_address_to_string: make-routine gio "g_inet_address_to_string" [
        address [pointer]
        return: [pointer]
    ]
    inet_address_to_bytes: make-routine gio "g_inet_address_to_bytes" [
        address [pointer]
        return: [pointer]
    ]
    inet_address_get_native_size: make-routine gio "g_inet_address_get_native_size" [
        address [pointer]
        return: [uint64]
    ]
    inet_address_get_family: make-routine gio "g_inet_address_get_family" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_any: make-routine gio "g_inet_address_get_is_any" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_loopback: make-routine gio "g_inet_address_get_is_loopback" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_link_local: make-routine gio "g_inet_address_get_is_link_local" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_site_local: make-routine gio "g_inet_address_get_is_site_local" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_multicast: make-routine gio "g_inet_address_get_is_multicast" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_mc_global: make-routine gio "g_inet_address_get_is_mc_global" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_mc_link_local: make-routine gio "g_inet_address_get_is_mc_link_local" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_mc_node_local: make-routine gio "g_inet_address_get_is_mc_node_local" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_mc_org_local: make-routine gio "g_inet_address_get_is_mc_org_local" [
        address [pointer]
        return: [int32]
    ]
    inet_address_get_is_mc_site_local: make-routine gio "g_inet_address_get_is_mc_site_local" [
        address [pointer]
        return: [int32]
    ]
    inet_address_mask_get_type: make-routine gio "g_inet_address_mask_get_type" [
        return: [uint64]
    ]
    inet_address_mask_new: make-routine gio "g_inet_address_mask_new" [
        addr [pointer]
        length [uint32]
        error [pointer]
        return: [pointer]
    ]
    inet_address_mask_new_from_string: make-routine gio "g_inet_address_mask_new_from_string" [
        mask_string [pointer]
        error [pointer]
        return: [pointer]
    ]
    inet_address_mask_to_string: make-routine gio "g_inet_address_mask_to_string" [
        mask [pointer]
        return: [pointer]
    ]
    inet_address_mask_get_family: make-routine gio "g_inet_address_mask_get_family" [
        mask [pointer]
        return: [int32]
    ]
    inet_address_mask_get_address: make-routine gio "g_inet_address_mask_get_address" [
        mask [pointer]
        return: [pointer]
    ]
    inet_address_mask_get_length: make-routine gio "g_inet_address_mask_get_length" [
        mask [pointer]
        return: [uint32]
    ]
    inet_address_mask_matches: make-routine gio "g_inet_address_mask_matches" [
        mask [pointer]
        address [pointer]
        return: [int32]
    ]
    inet_address_mask_equal: make-routine gio "g_inet_address_mask_equal" [
        mask [pointer]
        mask2 [pointer]
        return: [int32]
    ]
    socket_address_get_type: make-routine gio "g_socket_address_get_type" [
        return: [uint64]
    ]
    socket_address_get_family: make-routine gio "g_socket_address_get_family" [
        address [pointer]
        return: [int32]
    ]
    socket_address_new_from_native: make-routine gio "g_socket_address_new_from_native" [
        native [pointer]
        len [uint64]
        return: [pointer]
    ]
    socket_address_to_native: make-routine gio "g_socket_address_to_native" [
        address [pointer]
        dest [pointer]
        destlen [uint64]
        error [pointer]
        return: [int32]
    ]
    socket_address_get_native_size: make-routine gio "g_socket_address_get_native_size" [
        address [pointer]
        return: [int64]
    ]
    inet_socket_address_get_type: make-routine gio "g_inet_socket_address_get_type" [
        return: [uint64]
    ]
    inet_socket_address_new: make-routine gio "g_inet_socket_address_new" [
        address [pointer]
        port [uint16]
        return: [pointer]
    ]
    inet_socket_address_new_from_string: make-routine gio "g_inet_socket_address_new_from_string" [
        address [pointer]
        port [uint32]
        return: [pointer]
    ]
    inet_socket_address_get_address: make-routine gio "g_inet_socket_address_get_address" [
        address [pointer]
        return: [pointer]
    ]
    inet_socket_address_get_port: make-routine gio "g_inet_socket_address_get_port" [
        address [pointer]
        return: [uint16]
    ]
    inet_socket_address_get_flowinfo: make-routine gio "g_inet_socket_address_get_flowinfo" [
        address [pointer]
        return: [uint32]
    ]
    inet_socket_address_get_scope_id: make-routine gio "g_inet_socket_address_get_scope_id" [
        address [pointer]
        return: [uint32]
    ]
    app_info_create_flags_get_type: make-routine gio "g_app_info_create_flags_get_type" [
        return: [uint64]
    ]
    converter_flags_get_type: make-routine gio "g_converter_flags_get_type" [
        return: [uint64]
    ]
    converter_result_get_type: make-routine gio "g_converter_result_get_type" [
        return: [uint64]
    ]
    data_stream_byte_order_get_type: make-routine gio "g_data_stream_byte_order_get_type" [
        return: [uint64]
    ]
    data_stream_newline_type_get_type: make-routine gio "g_data_stream_newline_type_get_type" [
        return: [uint64]
    ]
    file_attribute_type_get_type: make-routine gio "g_file_attribute_type_get_type" [
        return: [uint64]
    ]
    file_attribute_info_flags_get_type: make-routine gio "g_file_attribute_info_flags_get_type" [
        return: [uint64]
    ]
    file_attribute_status_get_type: make-routine gio "g_file_attribute_status_get_type" [
        return: [uint64]
    ]
    file_query_info_flags_get_type: make-routine gio "g_file_query_info_flags_get_type" [
        return: [uint64]
    ]
    file_create_flags_get_type: make-routine gio "g_file_create_flags_get_type" [
        return: [uint64]
    ]
    file_measure_flags_get_type: make-routine gio "g_file_measure_flags_get_type" [
        return: [uint64]
    ]
    mount_mount_flags_get_type: make-routine gio "g_mount_mount_flags_get_type" [
        return: [uint64]
    ]
    mount_unmount_flags_get_type: make-routine gio "g_mount_unmount_flags_get_type" [
        return: [uint64]
    ]
    drive_start_flags_get_type: make-routine gio "g_drive_start_flags_get_type" [
        return: [uint64]
    ]
    drive_start_stop_type_get_type: make-routine gio "g_drive_start_stop_type_get_type" [
        return: [uint64]
    ]
    file_copy_flags_get_type: make-routine gio "g_file_copy_flags_get_type" [
        return: [uint64]
    ]
    file_monitor_flags_get_type: make-routine gio "g_file_monitor_flags_get_type" [
        return: [uint64]
    ]
    file_type_get_type: make-routine gio "g_file_type_get_type" [
        return: [uint64]
    ]
    filesystem_preview_type_get_type: make-routine gio "g_filesystem_preview_type_get_type" [
        return: [uint64]
    ]
    file_monitor_event_get_type: make-routine gio "g_file_monitor_event_get_type" [
        return: [uint64]
    ]
    io_error_enum_get_type: make-routine gio "g_io_error_enum_get_type" [
        return: [uint64]
    ]
    ask_password_flags_get_type: make-routine gio "g_ask_password_flags_get_type" [
        return: [uint64]
    ]
    password_save_get_type: make-routine gio "g_password_save_get_type" [
        return: [uint64]
    ]
    mount_operation_result_get_type: make-routine gio "g_mount_operation_result_get_type" [
        return: [uint64]
    ]
    output_stream_splice_flags_get_type: make-routine gio "g_output_stream_splice_flags_get_type" [
        return: [uint64]
    ]
    io_stream_splice_flags_get_type: make-routine gio "g_io_stream_splice_flags_get_type" [
        return: [uint64]
    ]
    emblem_origin_get_type: make-routine gio "g_emblem_origin_get_type" [
        return: [uint64]
    ]
    resolver_error_get_type: make-routine gio "g_resolver_error_get_type" [
        return: [uint64]
    ]
    resolver_record_type_get_type: make-routine gio "g_resolver_record_type_get_type" [
        return: [uint64]
    ]
    resource_error_get_type: make-routine gio "g_resource_error_get_type" [
        return: [uint64]
    ]
    resource_flags_get_type: make-routine gio "g_resource_flags_get_type" [
        return: [uint64]
    ]
    resource_lookup_flags_get_type: make-routine gio "g_resource_lookup_flags_get_type" [
        return: [uint64]
    ]
    socket_family_get_type: make-routine gio "g_socket_family_get_type" [
        return: [uint64]
    ]
    socket_type_get_type: make-routine gio "g_socket_type_get_type" [
        return: [uint64]
    ]
    socket_msg_flags_get_type: make-routine gio "g_socket_msg_flags_get_type" [
        return: [uint64]
    ]
    socket_protocol_get_type: make-routine gio "g_socket_protocol_get_type" [
        return: [uint64]
    ]
    zlib_compressor_format_get_type: make-routine gio "g_zlib_compressor_format_get_type" [
        return: [uint64]
    ]
    unix_socket_address_type_get_type: make-routine gio "g_unix_socket_address_type_get_type" [
        return: [uint64]
    ]
    bus_type_get_type: make-routine gio "g_bus_type_get_type" [
        return: [uint64]
    ]
    bus_name_owner_flags_get_type: make-routine gio "g_bus_name_owner_flags_get_type" [
        return: [uint64]
    ]
    bus_name_watcher_flags_get_type: make-routine gio "g_bus_name_watcher_flags_get_type" [
        return: [uint64]
    ]
    dbus_proxy_flags_get_type: make-routine gio "g_dbus_proxy_flags_get_type" [
        return: [uint64]
    ]
    dbus_error_get_type: make-routine gio "g_dbus_error_get_type" [
        return: [uint64]
    ]
    dbus_connection_flags_get_type: make-routine gio "g_dbus_connection_flags_get_type" [
        return: [uint64]
    ]
    dbus_capability_flags_get_type: make-routine gio "g_dbus_capability_flags_get_type" [
        return: [uint64]
    ]
    dbus_call_flags_get_type: make-routine gio "g_dbus_call_flags_get_type" [
        return: [uint64]
    ]
    dbus_message_type_get_type: make-routine gio "g_dbus_message_type_get_type" [
        return: [uint64]
    ]
    dbus_message_flags_get_type: make-routine gio "g_dbus_message_flags_get_type" [
        return: [uint64]
    ]
    dbus_message_header_field_get_type: make-routine gio "g_dbus_message_header_field_get_type" [
        return: [uint64]
    ]
    dbus_property_info_flags_get_type: make-routine gio "g_dbus_property_info_flags_get_type" [
        return: [uint64]
    ]
    dbus_subtree_flags_get_type: make-routine gio "g_dbus_subtree_flags_get_type" [
        return: [uint64]
    ]
    dbus_server_flags_get_type: make-routine gio "g_dbus_server_flags_get_type" [
        return: [uint64]
    ]
    dbus_signal_flags_get_type: make-routine gio "g_dbus_signal_flags_get_type" [
        return: [uint64]
    ]
    dbus_send_message_flags_get_type: make-routine gio "g_dbus_send_message_flags_get_type" [
        return: [uint64]
    ]
    credentials_type_get_type: make-routine gio "g_credentials_type_get_type" [
        return: [uint64]
    ]
    dbus_message_byte_order_get_type: make-routine gio "g_dbus_message_byte_order_get_type" [
        return: [uint64]
    ]
    application_flags_get_type: make-routine gio "g_application_flags_get_type" [
        return: [uint64]
    ]
    tls_error_get_type: make-routine gio "g_tls_error_get_type" [
        return: [uint64]
    ]
    tls_certificate_flags_get_type: make-routine gio "g_tls_certificate_flags_get_type" [
        return: [uint64]
    ]
    tls_authentication_mode_get_type: make-routine gio "g_tls_authentication_mode_get_type" [
        return: [uint64]
    ]
    tls_rehandshake_mode_get_type: make-routine gio "g_tls_rehandshake_mode_get_type" [
        return: [uint64]
    ]
    tls_password_flags_get_type: make-routine gio "g_tls_password_flags_get_type" [
        return: [uint64]
    ]
    tls_interaction_result_get_type: make-routine gio "g_tls_interaction_result_get_type" [
        return: [uint64]
    ]
    dbus_interface_skeleton_flags_get_type: make-routine gio "g_dbus_interface_skeleton_flags_get_type" [
        return: [uint64]
    ]
    dbus_object_manager_client_flags_get_type: make-routine gio "g_dbus_object_manager_client_flags_get_type" [
        return: [uint64]
    ]
    tls_database_verify_flags_get_type: make-routine gio "g_tls_database_verify_flags_get_type" [
        return: [uint64]
    ]
    tls_database_lookup_flags_get_type: make-routine gio "g_tls_database_lookup_flags_get_type" [
        return: [uint64]
    ]
    tls_certificate_request_flags_get_type: make-routine gio "g_tls_certificate_request_flags_get_type" [
        return: [uint64]
    ]
    io_module_scope_flags_get_type: make-routine gio "g_io_module_scope_flags_get_type" [
        return: [uint64]
    ]
    socket_client_event_get_type: make-routine gio "g_socket_client_event_get_type" [
        return: [uint64]
    ]
    test_dbus_flags_get_type: make-routine gio "g_test_dbus_flags_get_type" [
        return: [uint64]
    ]
    subprocess_flags_get_type: make-routine gio "g_subprocess_flags_get_type" [
        return: [uint64]
    ]
    notification_priority_get_type: make-routine gio "g_notification_priority_get_type" [
        return: [uint64]
    ]
    settings_bind_flags_get_type: make-routine gio "g_settings_bind_flags_get_type" [
        return: [uint64]
    ]
    io_module_scope_new: make-routine gio "g_io_module_scope_new" [
        flags [int32]
        return: [pointer]
    ]
    io_module_scope_free: make-routine gio "g_io_module_scope_free" [
        scope [pointer]
        return: [void]
    ]
    io_module_scope_block: make-routine gio "g_io_module_scope_block" [
        scope [pointer]
        basename [pointer]
        return: [void]
    ]
    io_module_get_type: make-routine gio "g_io_module_get_type" [
        return: [uint64]
    ]
    io_module_new: make-routine gio "g_io_module_new" [
        filename [pointer]
        return: [pointer]
    ]
    io_modules_scan_all_in_directory: make-routine gio "g_io_modules_scan_all_in_directory" [
        dirname [pointer]
        return: [void]
    ]
    io_modules_load_all_in_directory: make-routine gio "g_io_modules_load_all_in_directory" [
        dirname [pointer]
        return: [pointer]
    ]
    io_modules_scan_all_in_directory_with_scope: make-routine gio "g_io_modules_scan_all_in_directory_with_scope" [
        dirname [pointer]
        scope [pointer]
        return: [void]
    ]
    io_modules_load_all_in_directory_with_scope: make-routine gio "g_io_modules_load_all_in_directory_with_scope" [
        dirname [pointer]
        scope [pointer]
        return: [pointer]
    ]
    io_extension_point_register: make-routine gio "g_io_extension_point_register" [
        name [pointer]
        return: [pointer]
    ]
    io_extension_point_lookup: make-routine gio "g_io_extension_point_lookup" [
        name [pointer]
        return: [pointer]
    ]
    io_extension_point_set_required_type: make-routine gio "g_io_extension_point_set_required_type" [
        extension_point [pointer]
        type [uint64]
        return: [void]
    ]
    io_extension_point_get_required_type: make-routine gio "g_io_extension_point_get_required_type" [
        extension_point [pointer]
        return: [uint64]
    ]
    io_extension_point_get_extensions: make-routine gio "g_io_extension_point_get_extensions" [
        extension_point [pointer]
        return: [pointer]
    ]
    io_extension_point_get_extension_by_name: make-routine gio "g_io_extension_point_get_extension_by_name" [
        extension_point [pointer]
        name [pointer]
        return: [pointer]
    ]
    io_extension_point_implement: make-routine gio "g_io_extension_point_implement" [
        extension_point_name [pointer]
        type [uint64]
        extension_name [pointer]
        priority [int32]
        return: [pointer]
    ]
    io_extension_get_type: make-routine gio "g_io_extension_get_type" [
        extension [pointer]
        return: [uint64]
    ]
    io_extension_get_name: make-routine gio "g_io_extension_get_name" [
        extension [pointer]
        return: [pointer]
    ]
    io_extension_get_priority: make-routine gio "g_io_extension_get_priority" [
        extension [pointer]
        return: [int32]
    ]
    io_extension_ref_class: make-routine gio "g_io_extension_ref_class" [
        extension [pointer]
        return: [pointer]
    ]
    loadable_icon_get_type: make-routine gio "g_loadable_icon_get_type" [
        return: [uint64]
    ]
    loadable_icon_load: make-routine gio "g_loadable_icon_load" [
        icon [pointer]
        size [int32]
        type [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    loadable_icon_load_async: make-routine gio "g_loadable_icon_load_async" [
        icon [pointer]
        size [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    loadable_icon_load_finish: make-routine gio "g_loadable_icon_load_finish" [
        icon [pointer]
        res [pointer]
        type [pointer]
        error [pointer]
        return: [pointer]
    ]
    memory_input_stream_get_type: make-routine gio "g_memory_input_stream_get_type" [
        return: [uint64]
    ]
    memory_input_stream_new: make-routine gio "g_memory_input_stream_new" [
        return: [pointer]
    ]
    memory_input_stream_new_from_data: make-routine gio "g_memory_input_stream_new_from_data" [
        data [pointer]
        len [int64]
        destroy [pointer]
        return: [pointer]
    ]
    memory_input_stream_new_from_bytes: make-routine gio "g_memory_input_stream_new_from_bytes" [
        bytes [pointer]
        return: [pointer]
    ]
    memory_input_stream_add_data: make-routine gio "g_memory_input_stream_add_data" [
        stream [pointer]
        data [pointer]
        len [int64]
        destroy [pointer]
        return: [void]
    ]
    memory_input_stream_add_bytes: make-routine gio "g_memory_input_stream_add_bytes" [
        stream [pointer]
        bytes [pointer]
        return: [void]
    ]
    memory_output_stream_get_type: make-routine gio "g_memory_output_stream_get_type" [
        return: [uint64]
    ]
    memory_output_stream_new: make-routine gio "g_memory_output_stream_new" [
        data [pointer]
        size [uint64]
        realloc_function [pointer]
        destroy_function [pointer]
        return: [pointer]
    ]
    memory_output_stream_new_resizable: make-routine gio "g_memory_output_stream_new_resizable" [
        return: [pointer]
    ]
    memory_output_stream_get_data: make-routine gio "g_memory_output_stream_get_data" [
        ostream [pointer]
        return: [pointer]
    ]
    memory_output_stream_get_size: make-routine gio "g_memory_output_stream_get_size" [
        ostream [pointer]
        return: [uint64]
    ]
    memory_output_stream_get_data_size: make-routine gio "g_memory_output_stream_get_data_size" [
        ostream [pointer]
        return: [uint64]
    ]
    memory_output_stream_steal_data: make-routine gio "g_memory_output_stream_steal_data" [
        ostream [pointer]
        return: [pointer]
    ]
    memory_output_stream_steal_as_bytes: make-routine gio "g_memory_output_stream_steal_as_bytes" [
        ostream [pointer]
        return: [pointer]
    ]
    mount_get_type: make-routine gio "g_mount_get_type" [
        return: [uint64]
    ]
    mount_get_root: make-routine gio "g_mount_get_root" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_default_location: make-routine gio "g_mount_get_default_location" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_name: make-routine gio "g_mount_get_name" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_icon: make-routine gio "g_mount_get_icon" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_symbolic_icon: make-routine gio "g_mount_get_symbolic_icon" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_uuid: make-routine gio "g_mount_get_uuid" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_volume: make-routine gio "g_mount_get_volume" [
        mount [pointer]
        return: [pointer]
    ]
    mount_get_drive: make-routine gio "g_mount_get_drive" [
        mount [pointer]
        return: [pointer]
    ]
    mount_can_unmount: make-routine gio "g_mount_can_unmount" [
        mount [pointer]
        return: [int32]
    ]
    mount_can_eject: make-routine gio "g_mount_can_eject" [
        mount [pointer]
        return: [int32]
    ]
    mount_remount: make-routine gio "g_mount_remount" [
        mount [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    mount_remount_finish: make-routine gio "g_mount_remount_finish" [
        mount [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    mount_guess_content_type: make-routine gio "g_mount_guess_content_type" [
        mount [pointer]
        force_rescan [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    mount_guess_content_type_finish: make-routine gio "g_mount_guess_content_type_finish" [
        mount [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    mount_guess_content_type_sync: make-routine gio "g_mount_guess_content_type_sync" [
        mount [pointer]
        force_rescan [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    mount_is_shadowed: make-routine gio "g_mount_is_shadowed" [
        mount [pointer]
        return: [int32]
    ]
    mount_shadow: make-routine gio "g_mount_shadow" [
        mount [pointer]
        return: [void]
    ]
    mount_unshadow: make-routine gio "g_mount_unshadow" [
        mount [pointer]
        return: [void]
    ]
    mount_unmount_with_operation: make-routine gio "g_mount_unmount_with_operation" [
        mount [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    mount_unmount_with_operation_finish: make-routine gio "g_mount_unmount_with_operation_finish" [
        mount [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    mount_eject_with_operation: make-routine gio "g_mount_eject_with_operation" [
        mount [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    mount_eject_with_operation_finish: make-routine gio "g_mount_eject_with_operation_finish" [
        mount [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    mount_get_sort_key: make-routine gio "g_mount_get_sort_key" [
        mount [pointer]
        return: [pointer]
    ]
    mount_operation_get_type: make-routine gio "g_mount_operation_get_type" [
        return: [uint64]
    ]
    mount_operation_new: make-routine gio "g_mount_operation_new" [
        return: [pointer]
    ]
    mount_operation_get_username: make-routine gio "g_mount_operation_get_username" [
        op [pointer]
        return: [pointer]
    ]
    mount_operation_set_username: make-routine gio "g_mount_operation_set_username" [
        op [pointer]
        username [pointer]
        return: [void]
    ]
    mount_operation_get_password: make-routine gio "g_mount_operation_get_password" [
        op [pointer]
        return: [pointer]
    ]
    mount_operation_set_password: make-routine gio "g_mount_operation_set_password" [
        op [pointer]
        password [pointer]
        return: [void]
    ]
    mount_operation_get_anonymous: make-routine gio "g_mount_operation_get_anonymous" [
        op [pointer]
        return: [int32]
    ]
    mount_operation_set_anonymous: make-routine gio "g_mount_operation_set_anonymous" [
        op [pointer]
        anonymous [int32]
        return: [void]
    ]
    mount_operation_get_domain: make-routine gio "g_mount_operation_get_domain" [
        op [pointer]
        return: [pointer]
    ]
    mount_operation_set_domain: make-routine gio "g_mount_operation_set_domain" [
        op [pointer]
        domain [pointer]
        return: [void]
    ]
    mount_operation_get_password_save: make-routine gio "g_mount_operation_get_password_save" [
        op [pointer]
        return: [int32]
    ]
    mount_operation_set_password_save: make-routine gio "g_mount_operation_set_password_save" [
        op [pointer]
        save [int32]
        return: [void]
    ]
    mount_operation_get_choice: make-routine gio "g_mount_operation_get_choice" [
        op [pointer]
        return: [int32]
    ]
    mount_operation_set_choice: make-routine gio "g_mount_operation_set_choice" [
        op [pointer]
        choice [int32]
        return: [void]
    ]
    mount_operation_reply: make-routine gio "g_mount_operation_reply" [
        op [pointer]
        result [int32]
        return: [void]
    ]
    volume_monitor_get_type: make-routine gio "g_volume_monitor_get_type" [
        return: [uint64]
    ]
    volume_monitor_get: make-routine gio "g_volume_monitor_get" [
        return: [pointer]
    ]
    volume_monitor_get_connected_drives: make-routine gio "g_volume_monitor_get_connected_drives" [
        volume_monitor [pointer]
        return: [pointer]
    ]
    volume_monitor_get_volumes: make-routine gio "g_volume_monitor_get_volumes" [
        volume_monitor [pointer]
        return: [pointer]
    ]
    volume_monitor_get_mounts: make-routine gio "g_volume_monitor_get_mounts" [
        volume_monitor [pointer]
        return: [pointer]
    ]
    volume_monitor_get_volume_for_uuid: make-routine gio "g_volume_monitor_get_volume_for_uuid" [
        volume_monitor [pointer]
        uuid [pointer]
        return: [pointer]
    ]
    volume_monitor_get_mount_for_uuid: make-routine gio "g_volume_monitor_get_mount_for_uuid" [
        volume_monitor [pointer]
        uuid [pointer]
        return: [pointer]
    ]
    native_volume_monitor_get_type: make-routine gio "g_native_volume_monitor_get_type" [
        return: [uint64]
    ]
    network_address_get_type: make-routine gio "g_network_address_get_type" [
        return: [uint64]
    ]
    network_address_new: make-routine gio "g_network_address_new" [
        hostname [pointer]
        port [uint16]
        return: [pointer]
    ]
    network_address_parse: make-routine gio "g_network_address_parse" [
        host_and_port [pointer]
        default_port [uint16]
        error [pointer]
        return: [pointer]
    ]
    network_address_parse_uri: make-routine gio "g_network_address_parse_uri" [
        uri [pointer]
        default_port [uint16]
        error [pointer]
        return: [pointer]
    ]
    network_address_get_hostname: make-routine gio "g_network_address_get_hostname" [
        addr [pointer]
        return: [pointer]
    ]
    network_address_get_port: make-routine gio "g_network_address_get_port" [
        addr [pointer]
        return: [uint16]
    ]
    network_address_get_scheme: make-routine gio "g_network_address_get_scheme" [
        addr [pointer]
        return: [pointer]
    ]
    network_monitor_get_type: make-routine gio "g_network_monitor_get_type" [
        return: [uint64]
    ]
    network_monitor_get_default: make-routine gio "g_network_monitor_get_default" [
        return: [pointer]
    ]
    network_monitor_get_network_available: make-routine gio "g_network_monitor_get_network_available" [
        monitor [pointer]
        return: [int32]
    ]
    network_monitor_can_reach: make-routine gio "g_network_monitor_can_reach" [
        monitor [pointer]
        connectable [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    network_monitor_can_reach_async: make-routine gio "g_network_monitor_can_reach_async" [
        monitor [pointer]
        connectable [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    network_monitor_can_reach_finish: make-routine gio "g_network_monitor_can_reach_finish" [
        monitor [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    network_service_get_type: make-routine gio "g_network_service_get_type" [
        return: [uint64]
    ]
    network_service_new: make-routine gio "g_network_service_new" [
        service [pointer]
        protocol [pointer]
        domain [pointer]
        return: [pointer]
    ]
    network_service_get_service: make-routine gio "g_network_service_get_service" [
        srv [pointer]
        return: [pointer]
    ]
    network_service_get_protocol: make-routine gio "g_network_service_get_protocol" [
        srv [pointer]
        return: [pointer]
    ]
    network_service_get_domain: make-routine gio "g_network_service_get_domain" [
        srv [pointer]
        return: [pointer]
    ]
    network_service_get_scheme: make-routine gio "g_network_service_get_scheme" [
        srv [pointer]
        return: [pointer]
    ]
    network_service_set_scheme: make-routine gio "g_network_service_set_scheme" [
        srv [pointer]
        scheme [pointer]
        return: [void]
    ]
    permission_get_type: make-routine gio "g_permission_get_type" [
        return: [uint64]
    ]
    permission_acquire: make-routine gio "g_permission_acquire" [
        permission [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    permission_acquire_async: make-routine gio "g_permission_acquire_async" [
        permission [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    permission_acquire_finish: make-routine gio "g_permission_acquire_finish" [
        permission [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    permission_release: make-routine gio "g_permission_release" [
        permission [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    permission_release_async: make-routine gio "g_permission_release_async" [
        permission [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    permission_release_finish: make-routine gio "g_permission_release_finish" [
        permission [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    permission_get_allowed: make-routine gio "g_permission_get_allowed" [
        permission [pointer]
        return: [int32]
    ]
    permission_get_can_acquire: make-routine gio "g_permission_get_can_acquire" [
        permission [pointer]
        return: [int32]
    ]
    permission_get_can_release: make-routine gio "g_permission_get_can_release" [
        permission [pointer]
        return: [int32]
    ]
    permission_impl_update: make-routine gio "g_permission_impl_update" [
        permission [pointer]
        allowed [int32]
        can_acquire [int32]
        can_release [int32]
        return: [void]
    ]
    pollable_input_stream_get_type: make-routine gio "g_pollable_input_stream_get_type" [
        return: [uint64]
    ]
    pollable_input_stream_can_poll: make-routine gio "g_pollable_input_stream_can_poll" [
        stream [pointer]
        return: [int32]
    ]
    pollable_input_stream_is_readable: make-routine gio "g_pollable_input_stream_is_readable" [
        stream [pointer]
        return: [int32]
    ]
    pollable_input_stream_create_source: make-routine gio "g_pollable_input_stream_create_source" [
        stream [pointer]
        cancellable [pointer]
        return: [pointer]
    ]
    pollable_input_stream_read_nonblocking: make-routine gio "g_pollable_input_stream_read_nonblocking" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    pollable_output_stream_get_type: make-routine gio "g_pollable_output_stream_get_type" [
        return: [uint64]
    ]
    pollable_output_stream_can_poll: make-routine gio "g_pollable_output_stream_can_poll" [
        stream [pointer]
        return: [int32]
    ]
    pollable_output_stream_is_writable: make-routine gio "g_pollable_output_stream_is_writable" [
        stream [pointer]
        return: [int32]
    ]
    pollable_output_stream_create_source: make-routine gio "g_pollable_output_stream_create_source" [
        stream [pointer]
        cancellable [pointer]
        return: [pointer]
    ]
    pollable_output_stream_write_nonblocking: make-routine gio "g_pollable_output_stream_write_nonblocking" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    pollable_source_new: make-routine gio "g_pollable_source_new" [
        pollable_stream [pointer]
        return: [pointer]
    ]
    pollable_source_new_full: make-routine gio "g_pollable_source_new_full" [
        pollable_stream [pointer]
        child_source [pointer]
        cancellable [pointer]
        return: [pointer]
    ]
    pollable_stream_read: make-routine gio "g_pollable_stream_read" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        blocking [int32]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    pollable_stream_write: make-routine gio "g_pollable_stream_write" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        blocking [int32]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    pollable_stream_write_all: make-routine gio "g_pollable_stream_write_all" [
        stream [pointer]
        buffer [pointer]
        count [uint64]
        blocking [int32]
        bytes_written [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    property_action_get_type: make-routine gio "g_property_action_get_type" [
        return: [uint64]
    ]
    property_action_new: make-routine gio "g_property_action_new" [
        name [pointer]
        object [pointer]
        property_name [pointer]
        return: [pointer]
    ]
    proxy_get_type: make-routine gio "g_proxy_get_type" [
        return: [uint64]
    ]
    proxy_get_default_for_protocol: make-routine gio "g_proxy_get_default_for_protocol" [
        protocol [pointer]
        return: [pointer]
    ]
    proxy_connect: make-routine gio "g_proxy_connect" [
        proxy [pointer]
        connection [pointer]
        proxy_address [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    proxy_connect_async: make-routine gio "g_proxy_connect_async" [
        proxy [pointer]
        connection [pointer]
        proxy_address [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    proxy_connect_finish: make-routine gio "g_proxy_connect_finish" [
        proxy [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    proxy_supports_hostname: make-routine gio "g_proxy_supports_hostname" [
        proxy [pointer]
        return: [int32]
    ]
    proxy_address_get_type: make-routine gio "g_proxy_address_get_type" [
        return: [uint64]
    ]
    proxy_address_new: make-routine gio "g_proxy_address_new" [
        inetaddr [pointer]
        port [uint16]
        protocol [pointer]
        dest_hostname [pointer]
        dest_port [uint16]
        username [pointer]
        password [pointer]
        return: [pointer]
    ]
    proxy_address_get_protocol: make-routine gio "g_proxy_address_get_protocol" [
        proxy [pointer]
        return: [pointer]
    ]
    proxy_address_get_destination_protocol: make-routine gio "g_proxy_address_get_destination_protocol" [
        proxy [pointer]
        return: [pointer]
    ]
    proxy_address_get_destination_hostname: make-routine gio "g_proxy_address_get_destination_hostname" [
        proxy [pointer]
        return: [pointer]
    ]
    proxy_address_get_destination_port: make-routine gio "g_proxy_address_get_destination_port" [
        proxy [pointer]
        return: [uint16]
    ]
    proxy_address_get_username: make-routine gio "g_proxy_address_get_username" [
        proxy [pointer]
        return: [pointer]
    ]
    proxy_address_get_password: make-routine gio "g_proxy_address_get_password" [
        proxy [pointer]
        return: [pointer]
    ]
    proxy_address_get_uri: make-routine gio "g_proxy_address_get_uri" [
        proxy [pointer]
        return: [pointer]
    ]
    socket_address_enumerator_get_type: make-routine gio "g_socket_address_enumerator_get_type" [
        return: [uint64]
    ]
    socket_address_enumerator_next: make-routine gio "g_socket_address_enumerator_next" [
        enumerator [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_address_enumerator_next_async: make-routine gio "g_socket_address_enumerator_next_async" [
        enumerator [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_address_enumerator_next_finish: make-routine gio "g_socket_address_enumerator_next_finish" [
        enumerator [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    proxy_address_enumerator_get_type: make-routine gio "g_proxy_address_enumerator_get_type" [
        return: [uint64]
    ]
    proxy_resolver_get_type: make-routine gio "g_proxy_resolver_get_type" [
        return: [uint64]
    ]
    proxy_resolver_get_default: make-routine gio "g_proxy_resolver_get_default" [
        return: [pointer]
    ]
    proxy_resolver_is_supported: make-routine gio "g_proxy_resolver_is_supported" [
        resolver [pointer]
        return: [int32]
    ]
    proxy_resolver_lookup: make-routine gio "g_proxy_resolver_lookup" [
        resolver [pointer]
        uri [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    proxy_resolver_lookup_async: make-routine gio "g_proxy_resolver_lookup_async" [
        resolver [pointer]
        uri [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    proxy_resolver_lookup_finish: make-routine gio "g_proxy_resolver_lookup_finish" [
        resolver [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_get_type: make-routine gio "g_resolver_get_type" [
        return: [uint64]
    ]
    resolver_get_default: make-routine gio "g_resolver_get_default" [
        return: [pointer]
    ]
    resolver_set_default: make-routine gio "g_resolver_set_default" [
        resolver [pointer]
        return: [void]
    ]
    resolver_lookup_by_name: make-routine gio "g_resolver_lookup_by_name" [
        resolver [pointer]
        hostname [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_lookup_by_name_async: make-routine gio "g_resolver_lookup_by_name_async" [
        resolver [pointer]
        hostname [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    resolver_lookup_by_name_finish: make-routine gio "g_resolver_lookup_by_name_finish" [
        resolver [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_free_addresses: make-routine gio "g_resolver_free_addresses" [
        addresses [pointer]
        return: [void]
    ]
    resolver_lookup_by_address: make-routine gio "g_resolver_lookup_by_address" [
        resolver [pointer]
        address [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_lookup_by_address_async: make-routine gio "g_resolver_lookup_by_address_async" [
        resolver [pointer]
        address [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    resolver_lookup_by_address_finish: make-routine gio "g_resolver_lookup_by_address_finish" [
        resolver [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_lookup_service: make-routine gio "g_resolver_lookup_service" [
        resolver [pointer]
        service [pointer]
        protocol [pointer]
        domain [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_lookup_service_async: make-routine gio "g_resolver_lookup_service_async" [
        resolver [pointer]
        service [pointer]
        protocol [pointer]
        domain [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    resolver_lookup_service_finish: make-routine gio "g_resolver_lookup_service_finish" [
        resolver [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_lookup_records: make-routine gio "g_resolver_lookup_records" [
        resolver [pointer]
        rrname [pointer]
        record_type [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_lookup_records_async: make-routine gio "g_resolver_lookup_records_async" [
        resolver [pointer]
        rrname [pointer]
        record_type [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    resolver_lookup_records_finish: make-routine gio "g_resolver_lookup_records_finish" [
        resolver [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    resolver_free_targets: make-routine gio "g_resolver_free_targets" [
        targets [pointer]
        return: [void]
    ]
    resolver_error_quark: make-routine gio "g_resolver_error_quark" [
        return: [uint32]
    ]
    resource_error_quark: make-routine gio "g_resource_error_quark" [
        return: [uint32]
    ]
    resource_get_type: make-routine gio "g_resource_get_type" [
        return: [uint64]
    ]
    resource_new_from_data: make-routine gio "g_resource_new_from_data" [
        data [pointer]
        error [pointer]
        return: [pointer]
    ]
    resource_ref: make-routine gio "g_resource_ref" [
        resource [pointer]
        return: [pointer]
    ]
    resource_unref: make-routine gio "g_resource_unref" [
        resource [pointer]
        return: [void]
    ]
    resource_load: make-routine gio "g_resource_load" [
        filename [pointer]
        error [pointer]
        return: [pointer]
    ]
    resource_open_stream: make-routine gio "g_resource_open_stream" [
        resource [pointer]
        path [pointer]
        lookup_flags [int32]
        error [pointer]
        return: [pointer]
    ]
    resource_lookup_data: make-routine gio "g_resource_lookup_data" [
        resource [pointer]
        path [pointer]
        lookup_flags [int32]
        error [pointer]
        return: [pointer]
    ]
    resource_enumerate_children: make-routine gio "g_resource_enumerate_children" [
        resource [pointer]
        path [pointer]
        lookup_flags [int32]
        error [pointer]
        return: [pointer]
    ]
    resource_get_info: make-routine gio "g_resource_get_info" [
        resource [pointer]
        path [pointer]
        lookup_flags [int32]
        size [pointer]
        flags [pointer]
        error [pointer]
        return: [int32]
    ]
    resources_register: make-routine gio "g_resources_register" [
        resource [pointer]
        return: [void]
    ]
    resources_unregister: make-routine gio "g_resources_unregister" [
        resource [pointer]
        return: [void]
    ]
    resources_open_stream: make-routine gio "g_resources_open_stream" [
        path [pointer]
        lookup_flags [int32]
        error [pointer]
        return: [pointer]
    ]
    resources_lookup_data: make-routine gio "g_resources_lookup_data" [
        path [pointer]
        lookup_flags [int32]
        error [pointer]
        return: [pointer]
    ]
    resources_enumerate_children: make-routine gio "g_resources_enumerate_children" [
        path [pointer]
        lookup_flags [int32]
        error [pointer]
        return: [pointer]
    ]
    resources_get_info: make-routine gio "g_resources_get_info" [
        path [pointer]
        lookup_flags [int32]
        size [pointer]
        flags [pointer]
        error [pointer]
        return: [int32]
    ]
    static_resource_init: make-routine gio "g_static_resource_init" [
        static_resource [pointer]
        return: [void]
    ]
    static_resource_fini: make-routine gio "g_static_resource_fini" [
        static_resource [pointer]
        return: [void]
    ]
    static_resource_get_resource: make-routine gio "g_static_resource_get_resource" [
        static_resource [pointer]
        return: [pointer]
    ]
    seekable_get_type: make-routine gio "g_seekable_get_type" [
        return: [uint64]
    ]
    seekable_tell: make-routine gio "g_seekable_tell" [
        seekable [pointer]
        return: [int64]
    ]
    seekable_can_seek: make-routine gio "g_seekable_can_seek" [
        seekable [pointer]
        return: [int32]
    ]
    seekable_seek: make-routine gio "g_seekable_seek" [
        seekable [pointer]
        offset [int64]
        type [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    seekable_can_truncate: make-routine gio "g_seekable_can_truncate" [
        seekable [pointer]
        return: [int32]
    ]
    seekable_truncate: make-routine gio "g_seekable_truncate" [
        seekable [pointer]
        offset [int64]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    settings_schema_source_get_type: make-routine gio "g_settings_schema_source_get_type" [
        return: [uint64]
    ]
    settings_schema_source_get_default: make-routine gio "g_settings_schema_source_get_default" [
        return: [pointer]
    ]
    settings_schema_source_ref: make-routine gio "g_settings_schema_source_ref" [
        source [pointer]
        return: [pointer]
    ]
    settings_schema_source_unref: make-routine gio "g_settings_schema_source_unref" [
        source [pointer]
        return: [void]
    ]
    settings_schema_source_new_from_directory: make-routine gio "g_settings_schema_source_new_from_directory" [
        directory [pointer]
        parent [pointer]
        trusted [int32]
        error [pointer]
        return: [pointer]
    ]
    settings_schema_source_lookup: make-routine gio "g_settings_schema_source_lookup" [
        source [pointer]
        schema_id [pointer]
        recursive [int32]
        return: [pointer]
    ]
    settings_schema_source_list_schemas: make-routine gio "g_settings_schema_source_list_schemas" [
        source [pointer]
        recursive [int32]
        non_relocatable [pointer]
        relocatable [pointer]
        return: [void]
    ]
    settings_schema_get_type: make-routine gio "g_settings_schema_get_type" [
        return: [uint64]
    ]
    settings_schema_ref: make-routine gio "g_settings_schema_ref" [
        schema [pointer]
        return: [pointer]
    ]
    settings_schema_unref: make-routine gio "g_settings_schema_unref" [
        schema [pointer]
        return: [void]
    ]
    settings_schema_get_id: make-routine gio "g_settings_schema_get_id" [
        schema [pointer]
        return: [pointer]
    ]
    settings_schema_get_path: make-routine gio "g_settings_schema_get_path" [
        schema [pointer]
        return: [pointer]
    ]
    settings_schema_get_key: make-routine gio "g_settings_schema_get_key" [
        schema [pointer]
        name [pointer]
        return: [pointer]
    ]
    settings_schema_has_key: make-routine gio "g_settings_schema_has_key" [
        schema [pointer]
        name [pointer]
        return: [int32]
    ]
    settings_schema_key_get_type: make-routine gio "g_settings_schema_key_get_type" [
        return: [uint64]
    ]
    settings_schema_key_ref: make-routine gio "g_settings_schema_key_ref" [
        key [pointer]
        return: [pointer]
    ]
    settings_schema_key_unref: make-routine gio "g_settings_schema_key_unref" [
        key [pointer]
        return: [void]
    ]
    settings_schema_key_get_value_type: make-routine gio "g_settings_schema_key_get_value_type" [
        key [pointer]
        return: [pointer]
    ]
    settings_schema_key_get_default_value: make-routine gio "g_settings_schema_key_get_default_value" [
        key [pointer]
        return: [pointer]
    ]
    settings_schema_key_get_range: make-routine gio "g_settings_schema_key_get_range" [
        key [pointer]
        return: [pointer]
    ]
    settings_schema_key_range_check: make-routine gio "g_settings_schema_key_range_check" [
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    settings_schema_key_get_summary: make-routine gio "g_settings_schema_key_get_summary" [
        key [pointer]
        return: [pointer]
    ]
    settings_schema_key_get_description: make-routine gio "g_settings_schema_key_get_description" [
        key [pointer]
        return: [pointer]
    ]
    settings_get_type: make-routine gio "g_settings_get_type" [
        return: [uint64]
    ]
    settings_new: make-routine gio "g_settings_new" [
        schema_id [pointer]
        return: [pointer]
    ]
    settings_new_with_path: make-routine gio "g_settings_new_with_path" [
        schema_id [pointer]
        path [pointer]
        return: [pointer]
    ]
    settings_new_with_backend: make-routine gio "g_settings_new_with_backend" [
        schema_id [pointer]
        backend [pointer]
        return: [pointer]
    ]
    settings_new_with_backend_and_path: make-routine gio "g_settings_new_with_backend_and_path" [
        schema_id [pointer]
        backend [pointer]
        path [pointer]
        return: [pointer]
    ]
    settings_new_full: make-routine gio "g_settings_new_full" [
        schema [pointer]
        backend [pointer]
        path [pointer]
        return: [pointer]
    ]
    settings_list_children: make-routine gio "g_settings_list_children" [
        settings [pointer]
        return: [pointer]
    ]
    settings_list_keys: make-routine gio "g_settings_list_keys" [
        settings [pointer]
        return: [pointer]
    ]
    settings_set_value: make-routine gio "g_settings_set_value" [
        settings [pointer]
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    settings_get_value: make-routine gio "g_settings_get_value" [
        settings [pointer]
        key [pointer]
        return: [pointer]
    ]
    settings_get_user_value: make-routine gio "g_settings_get_user_value" [
        settings [pointer]
        key [pointer]
        return: [pointer]
    ]
    settings_get_default_value: make-routine gio "g_settings_get_default_value" [
        settings [pointer]
        key [pointer]
        return: [pointer]
    ]
    settings_set: make-routine gio "g_settings_set" [
        settings [pointer]
        key [pointer]
        format [pointer]
        ...
        return: [int32]
    ]
    settings_get: make-routine gio "g_settings_get" [
        settings [pointer]
        key [pointer]
        format [pointer]
        ...
        return: [void]
    ]
    settings_reset: make-routine gio "g_settings_reset" [
        settings [pointer]
        key [pointer]
        return: [void]
    ]
    settings_get_int: make-routine gio "g_settings_get_int" [
        settings [pointer]
        key [pointer]
        return: [int32]
    ]
    settings_set_int: make-routine gio "g_settings_set_int" [
        settings [pointer]
        key [pointer]
        value [int32]
        return: [int32]
    ]
    settings_get_uint: make-routine gio "g_settings_get_uint" [
        settings [pointer]
        key [pointer]
        return: [uint32]
    ]
    settings_set_uint: make-routine gio "g_settings_set_uint" [
        settings [pointer]
        key [pointer]
        value [uint32]
        return: [int32]
    ]
    settings_get_string: make-routine gio "g_settings_get_string" [
        settings [pointer]
        key [pointer]
        return: [pointer]
    ]
    settings_set_string: make-routine gio "g_settings_set_string" [
        settings [pointer]
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    settings_get_boolean: make-routine gio "g_settings_get_boolean" [
        settings [pointer]
        key [pointer]
        return: [int32]
    ]
    settings_set_boolean: make-routine gio "g_settings_set_boolean" [
        settings [pointer]
        key [pointer]
        value [int32]
        return: [int32]
    ]
    settings_get_double: make-routine gio "g_settings_get_double" [
        settings [pointer]
        key [pointer]
        return: [double]
    ]
    settings_set_double: make-routine gio "g_settings_set_double" [
        settings [pointer]
        key [pointer]
        value [double]
        return: [int32]
    ]
    settings_get_strv: make-routine gio "g_settings_get_strv" [
        settings [pointer]
        key [pointer]
        return: [pointer]
    ]
    settings_set_strv: make-routine gio "g_settings_set_strv" [
        settings [pointer]
        key [pointer]
        value [pointer]
        return: [int32]
    ]
    settings_get_enum: make-routine gio "g_settings_get_enum" [
        settings [pointer]
        key [pointer]
        return: [int32]
    ]
    settings_set_enum: make-routine gio "g_settings_set_enum" [
        settings [pointer]
        key [pointer]
        value [int32]
        return: [int32]
    ]
    settings_get_flags: make-routine gio "g_settings_get_flags" [
        settings [pointer]
        key [pointer]
        return: [uint32]
    ]
    settings_set_flags: make-routine gio "g_settings_set_flags" [
        settings [pointer]
        key [pointer]
        value [uint32]
        return: [int32]
    ]
    settings_get_child: make-routine gio "g_settings_get_child" [
        settings [pointer]
        name [pointer]
        return: [pointer]
    ]
    settings_is_writable: make-routine gio "g_settings_is_writable" [
        settings [pointer]
        name [pointer]
        return: [int32]
    ]
    settings_delay: make-routine gio "g_settings_delay" [
        settings [pointer]
        return: [void]
    ]
    settings_apply: make-routine gio "g_settings_apply" [
        settings [pointer]
        return: [void]
    ]
    settings_revert: make-routine gio "g_settings_revert" [
        settings [pointer]
        return: [void]
    ]
    settings_get_has_unapplied: make-routine gio "g_settings_get_has_unapplied" [
        settings [pointer]
        return: [int32]
    ]
    settings_sync: make-routine gio "g_settings_sync" [
        return: [void]
    ]
    settings_bind: make-routine gio "g_settings_bind" [
        settings [pointer]
        key [pointer]
        object [pointer]
        property [pointer]
        flags [int32]
        return: [void]
    ]
    settings_bind_with_mapping: make-routine gio "g_settings_bind_with_mapping" [
        settings [pointer]
        key [pointer]
        object [pointer]
        property [pointer]
        flags [int32]
        get_mapping [pointer]
        set_mapping [pointer]
        user_data [pointer]
        destroy [pointer]
        return: [void]
    ]
    settings_bind_writable: make-routine gio "g_settings_bind_writable" [
        settings [pointer]
        key [pointer]
        object [pointer]
        property [pointer]
        inverted [int32]
        return: [void]
    ]
    settings_unbind: make-routine gio "g_settings_unbind" [
        object [pointer]
        property [pointer]
        return: [void]
    ]
    settings_create_action: make-routine gio "g_settings_create_action" [
        settings [pointer]
        key [pointer]
        return: [pointer]
    ]
    settings_get_mapped: make-routine gio "g_settings_get_mapped" [
        settings [pointer]
        key [pointer]
        mapping [pointer]
        user_data [pointer]
        return: [pointer]
    ]
    simple_action_get_type: make-routine gio "g_simple_action_get_type" [
        return: [uint64]
    ]
    simple_action_new: make-routine gio "g_simple_action_new" [
        name [pointer]
        parameter_type [pointer]
        return: [pointer]
    ]
    simple_action_new_stateful: make-routine gio "g_simple_action_new_stateful" [
        name [pointer]
        parameter_type [pointer]
        state [pointer]
        return: [pointer]
    ]
    simple_action_set_enabled: make-routine gio "g_simple_action_set_enabled" [
        simple [pointer]
        enabled [int32]
        return: [void]
    ]
    simple_action_set_state: make-routine gio "g_simple_action_set_state" [
        simple [pointer]
        value [pointer]
        return: [void]
    ]
    simple_action_group_get_type: make-routine gio "g_simple_action_group_get_type" [
        return: [uint64]
    ]
    simple_action_group_new: make-routine gio "g_simple_action_group_new" [
        return: [pointer]
    ]
    simple_async_result_get_type: make-routine gio "g_simple_async_result_get_type" [
        return: [uint64]
    ]
    simple_async_result_new: make-routine gio "g_simple_async_result_new" [
        source_object [pointer]
        callback [pointer]
        user_data [pointer]
        source_tag [pointer]
        return: [pointer]
    ]
    simple_async_result_new_error: make-routine gio "g_simple_async_result_new_error" [
        source_object [pointer]
        callback [pointer]
        user_data [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [pointer]
    ]
    simple_async_result_new_from_error: make-routine gio "g_simple_async_result_new_from_error" [
        source_object [pointer]
        callback [pointer]
        user_data [pointer]
        error [pointer]
        return: [pointer]
    ]
    simple_async_result_new_take_error: make-routine gio "g_simple_async_result_new_take_error" [
        source_object [pointer]
        callback [pointer]
        user_data [pointer]
        error [pointer]
        return: [pointer]
    ]
    simple_async_result_set_op_res_gpointer: make-routine gio "g_simple_async_result_set_op_res_gpointer" [
        simple [pointer]
        op_res [pointer]
        destroy_op_res [pointer]
        return: [void]
    ]
    simple_async_result_get_op_res_gpointer: make-routine gio "g_simple_async_result_get_op_res_gpointer" [
        simple [pointer]
        return: [pointer]
    ]
    simple_async_result_set_op_res_gssize: make-routine gio "g_simple_async_result_set_op_res_gssize" [
        simple [pointer]
        op_res [int64]
        return: [void]
    ]
    simple_async_result_get_op_res_gssize: make-routine gio "g_simple_async_result_get_op_res_gssize" [
        simple [pointer]
        return: [int64]
    ]
    simple_async_result_set_op_res_gboolean: make-routine gio "g_simple_async_result_set_op_res_gboolean" [
        simple [pointer]
        op_res [int32]
        return: [void]
    ]
    simple_async_result_get_op_res_gboolean: make-routine gio "g_simple_async_result_get_op_res_gboolean" [
        simple [pointer]
        return: [int32]
    ]
    simple_async_result_set_check_cancellable: make-routine gio "g_simple_async_result_set_check_cancellable" [
        simple [pointer]
        check_cancellable [pointer]
        return: [void]
    ]
    simple_async_result_get_source_tag: make-routine gio "g_simple_async_result_get_source_tag" [
        simple [pointer]
        return: [pointer]
    ]
    simple_async_result_set_handle_cancellation: make-routine gio "g_simple_async_result_set_handle_cancellation" [
        simple [pointer]
        handle_cancellation [int32]
        return: [void]
    ]
    simple_async_result_complete: make-routine gio "g_simple_async_result_complete" [
        simple [pointer]
        return: [void]
    ]
    simple_async_result_complete_in_idle: make-routine gio "g_simple_async_result_complete_in_idle" [
        simple [pointer]
        return: [void]
    ]
    simple_async_result_run_in_thread: make-routine gio "g_simple_async_result_run_in_thread" [
        simple [pointer]
        func [pointer]
        io_priority [int32]
        cancellable [pointer]
        return: [void]
    ]
    simple_async_result_set_from_error: make-routine gio "g_simple_async_result_set_from_error" [
        simple [pointer]
        error [pointer]
        return: [void]
    ]
    simple_async_result_take_error: make-routine gio "g_simple_async_result_take_error" [
        simple [pointer]
        error [pointer]
        return: [void]
    ]
    simple_async_result_propagate_error: make-routine gio "g_simple_async_result_propagate_error" [
        simple [pointer]
        dest [pointer]
        return: [int32]
    ]
    simple_async_result_set_error: make-routine gio "g_simple_async_result_set_error" [
        simple [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [void]
    ]
    simple_async_result_set_error_va: make-routine gio "g_simple_async_result_set_error_va" [
        simple [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        args [int32]
        return: [void]
    ]
    simple_async_result_is_valid: make-routine gio "g_simple_async_result_is_valid" [
        result [pointer]
        source [pointer]
        source_tag [pointer]
        return: [int32]
    ]
    simple_async_report_error_in_idle: make-routine gio "g_simple_async_report_error_in_idle" [
        object [pointer]
        callback [pointer]
        user_data [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [void]
    ]
    simple_async_report_gerror_in_idle: make-routine gio "g_simple_async_report_gerror_in_idle" [
        object [pointer]
        callback [pointer]
        user_data [pointer]
        error [pointer]
        return: [void]
    ]
    simple_async_report_take_gerror_in_idle: make-routine gio "g_simple_async_report_take_gerror_in_idle" [
        object [pointer]
        callback [pointer]
        user_data [pointer]
        error [pointer]
        return: [void]
    ]
    simple_permission_get_type: make-routine gio "g_simple_permission_get_type" [
        return: [uint64]
    ]
    simple_permission_new: make-routine gio "g_simple_permission_new" [
        allowed [int32]
        return: [pointer]
    ]
    socket_client_get_type: make-routine gio "g_socket_client_get_type" [
        return: [uint64]
    ]
    socket_client_new: make-routine gio "g_socket_client_new" [
        return: [pointer]
    ]
    socket_client_get_family: make-routine gio "g_socket_client_get_family" [
        client [pointer]
        return: [int32]
    ]
    socket_client_set_family: make-routine gio "g_socket_client_set_family" [
        client [pointer]
        family [int32]
        return: [void]
    ]
    socket_client_get_socket_type: make-routine gio "g_socket_client_get_socket_type" [
        client [pointer]
        return: [int32]
    ]
    socket_client_set_socket_type: make-routine gio "g_socket_client_set_socket_type" [
        client [pointer]
        type [int32]
        return: [void]
    ]
    socket_client_get_protocol: make-routine gio "g_socket_client_get_protocol" [
        client [pointer]
        return: [int32]
    ]
    socket_client_set_protocol: make-routine gio "g_socket_client_set_protocol" [
        client [pointer]
        protocol [int32]
        return: [void]
    ]
    socket_client_get_local_address: make-routine gio "g_socket_client_get_local_address" [
        client [pointer]
        return: [pointer]
    ]
    socket_client_set_local_address: make-routine gio "g_socket_client_set_local_address" [
        client [pointer]
        address [pointer]
        return: [void]
    ]
    socket_client_get_timeout: make-routine gio "g_socket_client_get_timeout" [
        client [pointer]
        return: [uint32]
    ]
    socket_client_set_timeout: make-routine gio "g_socket_client_set_timeout" [
        client [pointer]
        timeout [uint32]
        return: [void]
    ]
    socket_client_get_enable_proxy: make-routine gio "g_socket_client_get_enable_proxy" [
        client [pointer]
        return: [int32]
    ]
    socket_client_set_enable_proxy: make-routine gio "g_socket_client_set_enable_proxy" [
        client [pointer]
        enable [int32]
        return: [void]
    ]
    socket_client_get_tls: make-routine gio "g_socket_client_get_tls" [
        client [pointer]
        return: [int32]
    ]
    socket_client_set_tls: make-routine gio "g_socket_client_set_tls" [
        client [pointer]
        tls [int32]
        return: [void]
    ]
    socket_client_get_tls_validation_flags: make-routine gio "g_socket_client_get_tls_validation_flags" [
        client [pointer]
        return: [int32]
    ]
    socket_client_set_tls_validation_flags: make-routine gio "g_socket_client_set_tls_validation_flags" [
        client [pointer]
        flags [int32]
        return: [void]
    ]
    socket_client_get_proxy_resolver: make-routine gio "g_socket_client_get_proxy_resolver" [
        client [pointer]
        return: [pointer]
    ]
    socket_client_set_proxy_resolver: make-routine gio "g_socket_client_set_proxy_resolver" [
        client [pointer]
        proxy_resolver [pointer]
        return: [void]
    ]
    socket_client_connect: make-routine gio "g_socket_client_connect" [
        client [pointer]
        connectable [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_to_host: make-routine gio "g_socket_client_connect_to_host" [
        client [pointer]
        host_and_port [pointer]
        default_port [uint16]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_to_service: make-routine gio "g_socket_client_connect_to_service" [
        client [pointer]
        domain [pointer]
        service [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_to_uri: make-routine gio "g_socket_client_connect_to_uri" [
        client [pointer]
        uri [pointer]
        default_port [uint16]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_async: make-routine gio "g_socket_client_connect_async" [
        client [pointer]
        connectable [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_client_connect_finish: make-routine gio "g_socket_client_connect_finish" [
        client [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_to_host_async: make-routine gio "g_socket_client_connect_to_host_async" [
        client [pointer]
        host_and_port [pointer]
        default_port [uint16]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_client_connect_to_host_finish: make-routine gio "g_socket_client_connect_to_host_finish" [
        client [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_to_service_async: make-routine gio "g_socket_client_connect_to_service_async" [
        client [pointer]
        domain [pointer]
        service [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_client_connect_to_service_finish: make-routine gio "g_socket_client_connect_to_service_finish" [
        client [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_connect_to_uri_async: make-routine gio "g_socket_client_connect_to_uri_async" [
        client [pointer]
        uri [pointer]
        default_port [uint16]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_client_connect_to_uri_finish: make-routine gio "g_socket_client_connect_to_uri_finish" [
        client [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_client_add_application_proxy: make-routine gio "g_socket_client_add_application_proxy" [
        client [pointer]
        protocol [pointer]
        return: [void]
    ]
    socket_connectable_get_type: make-routine gio "g_socket_connectable_get_type" [
        return: [uint64]
    ]
    socket_connectable_enumerate: make-routine gio "g_socket_connectable_enumerate" [
        connectable [pointer]
        return: [pointer]
    ]
    socket_connectable_proxy_enumerate: make-routine gio "g_socket_connectable_proxy_enumerate" [
        connectable [pointer]
        return: [pointer]
    ]
    socket_get_type: make-routine gio "g_socket_get_type" [
        return: [uint64]
    ]
    socket_new: make-routine gio "g_socket_new" [
        family [int32]
        type [int32]
        protocol [int32]
        error [pointer]
        return: [pointer]
    ]
    socket_new_from_fd: make-routine gio "g_socket_new_from_fd" [
        fd [int32]
        error [pointer]
        return: [pointer]
    ]
    socket_get_fd: make-routine gio "g_socket_get_fd" [
        socket [pointer]
        return: [int32]
    ]
    socket_get_family: make-routine gio "g_socket_get_family" [
        socket [pointer]
        return: [int32]
    ]
    socket_get_socket_type: make-routine gio "g_socket_get_socket_type" [
        socket [pointer]
        return: [int32]
    ]
    socket_get_protocol: make-routine gio "g_socket_get_protocol" [
        socket [pointer]
        return: [int32]
    ]
    socket_get_local_address: make-routine gio "g_socket_get_local_address" [
        socket [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_get_remote_address: make-routine gio "g_socket_get_remote_address" [
        socket [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_set_blocking: make-routine gio "g_socket_set_blocking" [
        socket [pointer]
        blocking [int32]
        return: [void]
    ]
    socket_get_blocking: make-routine gio "g_socket_get_blocking" [
        socket [pointer]
        return: [int32]
    ]
    socket_set_keepalive: make-routine gio "g_socket_set_keepalive" [
        socket [pointer]
        keepalive [int32]
        return: [void]
    ]
    socket_get_keepalive: make-routine gio "g_socket_get_keepalive" [
        socket [pointer]
        return: [int32]
    ]
    socket_get_listen_backlog: make-routine gio "g_socket_get_listen_backlog" [
        socket [pointer]
        return: [int32]
    ]
    socket_set_listen_backlog: make-routine gio "g_socket_set_listen_backlog" [
        socket [pointer]
        backlog [int32]
        return: [void]
    ]
    socket_get_timeout: make-routine gio "g_socket_get_timeout" [
        socket [pointer]
        return: [uint32]
    ]
    socket_set_timeout: make-routine gio "g_socket_set_timeout" [
        socket [pointer]
        timeout [uint32]
        return: [void]
    ]
    socket_get_ttl: make-routine gio "g_socket_get_ttl" [
        socket [pointer]
        return: [uint32]
    ]
    socket_set_ttl: make-routine gio "g_socket_set_ttl" [
        socket [pointer]
        ttl [uint32]
        return: [void]
    ]
    socket_get_broadcast: make-routine gio "g_socket_get_broadcast" [
        socket [pointer]
        return: [int32]
    ]
    socket_set_broadcast: make-routine gio "g_socket_set_broadcast" [
        socket [pointer]
        broadcast [int32]
        return: [void]
    ]
    socket_get_multicast_loopback: make-routine gio "g_socket_get_multicast_loopback" [
        socket [pointer]
        return: [int32]
    ]
    socket_set_multicast_loopback: make-routine gio "g_socket_set_multicast_loopback" [
        socket [pointer]
        loopback [int32]
        return: [void]
    ]
    socket_get_multicast_ttl: make-routine gio "g_socket_get_multicast_ttl" [
        socket [pointer]
        return: [uint32]
    ]
    socket_set_multicast_ttl: make-routine gio "g_socket_set_multicast_ttl" [
        socket [pointer]
        ttl [uint32]
        return: [void]
    ]
    socket_is_connected: make-routine gio "g_socket_is_connected" [
        socket [pointer]
        return: [int32]
    ]
    socket_bind: make-routine gio "g_socket_bind" [
        socket [pointer]
        address [pointer]
        allow_reuse [int32]
        error [pointer]
        return: [int32]
    ]
    socket_join_multicast_group: make-routine gio "g_socket_join_multicast_group" [
        socket [pointer]
        group [pointer]
        source_specific [int32]
        iface [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_leave_multicast_group: make-routine gio "g_socket_leave_multicast_group" [
        socket [pointer]
        group [pointer]
        source_specific [int32]
        iface [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_connect: make-routine gio "g_socket_connect" [
        socket [pointer]
        address [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_check_connect_result: make-routine gio "g_socket_check_connect_result" [
        socket [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_get_available_bytes: make-routine gio "g_socket_get_available_bytes" [
        socket [pointer]
        return: [int64]
    ]
    socket_condition_check: make-routine gio "g_socket_condition_check" [
        socket [pointer]
        condition [int32]
        return: [int32]
    ]
    socket_condition_wait: make-routine gio "g_socket_condition_wait" [
        socket [pointer]
        condition [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_condition_timed_wait: make-routine gio "g_socket_condition_timed_wait" [
        socket [pointer]
        condition [int32]
        timeout [int64]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_accept: make-routine gio "g_socket_accept" [
        socket [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_listen: make-routine gio "g_socket_listen" [
        socket [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_receive: make-routine gio "g_socket_receive" [
        socket [pointer]
        buffer [pointer]
        size [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_receive_from: make-routine gio "g_socket_receive_from" [
        socket [pointer]
        address [pointer]
        buffer [pointer]
        size [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_send: make-routine gio "g_socket_send" [
        socket [pointer]
        buffer [pointer]
        size [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_send_to: make-routine gio "g_socket_send_to" [
        socket [pointer]
        address [pointer]
        buffer [pointer]
        size [uint64]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_receive_message: make-routine gio "g_socket_receive_message" [
        socket [pointer]
        address [pointer]
        vectors [pointer]
        num_vectors [int32]
        messages [pointer]
        num_messages [pointer]
        flags [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_send_message: make-routine gio "g_socket_send_message" [
        socket [pointer]
        address [pointer]
        vectors [pointer]
        num_vectors [int32]
        messages [pointer]
        num_messages [int32]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_close: make-routine gio "g_socket_close" [
        socket [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_shutdown: make-routine gio "g_socket_shutdown" [
        socket [pointer]
        shutdown_read [int32]
        shutdown_write [int32]
        error [pointer]
        return: [int32]
    ]
    socket_is_closed: make-routine gio "g_socket_is_closed" [
        socket [pointer]
        return: [int32]
    ]
    socket_create_source: make-routine gio "g_socket_create_source" [
        socket [pointer]
        condition [int32]
        cancellable [pointer]
        return: [pointer]
    ]
    socket_speaks_ipv4: make-routine gio "g_socket_speaks_ipv4" [
        socket [pointer]
        return: [int32]
    ]
    socket_get_credentials: make-routine gio "g_socket_get_credentials" [
        socket [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_receive_with_blocking: make-routine gio "g_socket_receive_with_blocking" [
        socket [pointer]
        buffer [pointer]
        size [uint64]
        blocking [int32]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_send_with_blocking: make-routine gio "g_socket_send_with_blocking" [
        socket [pointer]
        buffer [pointer]
        size [uint64]
        blocking [int32]
        cancellable [pointer]
        error [pointer]
        return: [int64]
    ]
    socket_get_option: make-routine gio "g_socket_get_option" [
        socket [pointer]
        level [int32]
        optname [int32]
        value [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_set_option: make-routine gio "g_socket_set_option" [
        socket [pointer]
        level [int32]
        optname [int32]
        value [int32]
        error [pointer]
        return: [int32]
    ]
    socket_connection_get_type: make-routine gio "g_socket_connection_get_type" [
        return: [uint64]
    ]
    socket_connection_is_connected: make-routine gio "g_socket_connection_is_connected" [
        connection [pointer]
        return: [int32]
    ]
    socket_connection_connect: make-routine gio "g_socket_connection_connect" [
        connection [pointer]
        address [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_connection_connect_async: make-routine gio "g_socket_connection_connect_async" [
        connection [pointer]
        address [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_connection_connect_finish: make-routine gio "g_socket_connection_connect_finish" [
        connection [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_connection_get_socket: make-routine gio "g_socket_connection_get_socket" [
        connection [pointer]
        return: [pointer]
    ]
    socket_connection_get_local_address: make-routine gio "g_socket_connection_get_local_address" [
        connection [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_connection_get_remote_address: make-routine gio "g_socket_connection_get_remote_address" [
        connection [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_connection_factory_register_type: make-routine gio "g_socket_connection_factory_register_type" [
        g_type [uint64]
        family [int32]
        type [int32]
        protocol [int32]
        return: [void]
    ]
    socket_connection_factory_lookup_type: make-routine gio "g_socket_connection_factory_lookup_type" [
        family [int32]
        type [int32]
        protocol_id [int32]
        return: [uint64]
    ]
    socket_connection_factory_create_connection: make-routine gio "g_socket_connection_factory_create_connection" [
        socket [pointer]
        return: [pointer]
    ]
    socket_control_message_get_type: make-routine gio "g_socket_control_message_get_type" [
        return: [uint64]
    ]
    socket_control_message_get_size: make-routine gio "g_socket_control_message_get_size" [
        message [pointer]
        return: [uint64]
    ]
    socket_control_message_get_level: make-routine gio "g_socket_control_message_get_level" [
        message [pointer]
        return: [int32]
    ]
    socket_control_message_get_msg_type: make-routine gio "g_socket_control_message_get_msg_type" [
        message [pointer]
        return: [int32]
    ]
    socket_control_message_serialize: make-routine gio "g_socket_control_message_serialize" [
        message [pointer]
        data [pointer]
        return: [void]
    ]
    socket_control_message_deserialize: make-routine gio "g_socket_control_message_deserialize" [
        level [int32]
        type [int32]
        size [uint64]
        data [pointer]
        return: [pointer]
    ]
    socket_listener_get_type: make-routine gio "g_socket_listener_get_type" [
        return: [uint64]
    ]
    socket_listener_new: make-routine gio "g_socket_listener_new" [
        return: [pointer]
    ]
    socket_listener_set_backlog: make-routine gio "g_socket_listener_set_backlog" [
        listener [pointer]
        listen_backlog [int32]
        return: [void]
    ]
    socket_listener_add_socket: make-routine gio "g_socket_listener_add_socket" [
        listener [pointer]
        socket [pointer]
        source_object [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_listener_add_address: make-routine gio "g_socket_listener_add_address" [
        listener [pointer]
        address [pointer]
        type [int32]
        protocol [int32]
        source_object [pointer]
        effective_address [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_listener_add_inet_port: make-routine gio "g_socket_listener_add_inet_port" [
        listener [pointer]
        port [uint16]
        source_object [pointer]
        error [pointer]
        return: [int32]
    ]
    socket_listener_add_any_inet_port: make-routine gio "g_socket_listener_add_any_inet_port" [
        listener [pointer]
        source_object [pointer]
        error [pointer]
        return: [uint16]
    ]
    socket_listener_accept_socket: make-routine gio "g_socket_listener_accept_socket" [
        listener [pointer]
        source_object [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_listener_accept_socket_async: make-routine gio "g_socket_listener_accept_socket_async" [
        listener [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_listener_accept_socket_finish: make-routine gio "g_socket_listener_accept_socket_finish" [
        listener [pointer]
        result [pointer]
        source_object [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_listener_accept: make-routine gio "g_socket_listener_accept" [
        listener [pointer]
        source_object [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_listener_accept_async: make-routine gio "g_socket_listener_accept_async" [
        listener [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    socket_listener_accept_finish: make-routine gio "g_socket_listener_accept_finish" [
        listener [pointer]
        result [pointer]
        source_object [pointer]
        error [pointer]
        return: [pointer]
    ]
    socket_listener_close: make-routine gio "g_socket_listener_close" [
        listener [pointer]
        return: [void]
    ]
    socket_service_get_type: make-routine gio "g_socket_service_get_type" [
        return: [uint64]
    ]
    socket_service_new: make-routine gio "g_socket_service_new" [
        return: [pointer]
    ]
    socket_service_start: make-routine gio "g_socket_service_start" [
        service [pointer]
        return: [void]
    ]
    socket_service_stop: make-routine gio "g_socket_service_stop" [
        service [pointer]
        return: [void]
    ]
    socket_service_is_active: make-routine gio "g_socket_service_is_active" [
        service [pointer]
        return: [int32]
    ]
    srv_target_get_type: make-routine gio "g_srv_target_get_type" [
        return: [uint64]
    ]
    srv_target_new: make-routine gio "g_srv_target_new" [
        hostname [pointer]
        port [uint16]
        priority [uint16]
        weight [uint16]
        return: [pointer]
    ]
    srv_target_copy: make-routine gio "g_srv_target_copy" [
        target [pointer]
        return: [pointer]
    ]
    srv_target_free: make-routine gio "g_srv_target_free" [
        target [pointer]
        return: [void]
    ]
    srv_target_get_hostname: make-routine gio "g_srv_target_get_hostname" [
        target [pointer]
        return: [pointer]
    ]
    srv_target_get_port: make-routine gio "g_srv_target_get_port" [
        target [pointer]
        return: [uint16]
    ]
    srv_target_get_priority: make-routine gio "g_srv_target_get_priority" [
        target [pointer]
        return: [uint16]
    ]
    srv_target_get_weight: make-routine gio "g_srv_target_get_weight" [
        target [pointer]
        return: [uint16]
    ]
    srv_target_list_sort: make-routine gio "g_srv_target_list_sort" [
        targets [pointer]
        return: [pointer]
    ]
    simple_proxy_resolver_get_type: make-routine gio "g_simple_proxy_resolver_get_type" [
        return: [uint64]
    ]
    simple_proxy_resolver_new: make-routine gio "g_simple_proxy_resolver_new" [
        default_proxy [pointer]
        ignore_hosts [pointer]
        return: [pointer]
    ]
    simple_proxy_resolver_set_default_proxy: make-routine gio "g_simple_proxy_resolver_set_default_proxy" [
        resolver [pointer]
        default_proxy [pointer]
        return: [void]
    ]
    simple_proxy_resolver_set_ignore_hosts: make-routine gio "g_simple_proxy_resolver_set_ignore_hosts" [
        resolver [pointer]
        ignore_hosts [pointer]
        return: [void]
    ]
    simple_proxy_resolver_set_uri_proxy: make-routine gio "g_simple_proxy_resolver_set_uri_proxy" [
        resolver [pointer]
        uri_scheme [pointer]
        proxy [pointer]
        return: [void]
    ]
    task_get_type: make-routine gio "g_task_get_type" [
        return: [uint64]
    ]
    task_new: make-routine gio "g_task_new" [
        source_object [pointer]
        cancellable [pointer]
        callback [pointer]
        callback_data [pointer]
        return: [pointer]
    ]
    task_report_error: make-routine gio "g_task_report_error" [
        source_object [pointer]
        callback [pointer]
        callback_data [pointer]
        source_tag [pointer]
        error [pointer]
        return: [void]
    ]
    task_report_new_error: make-routine gio "g_task_report_new_error" [
        source_object [pointer]
        callback [pointer]
        callback_data [pointer]
        source_tag [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [void]
    ]
    task_set_task_data: make-routine gio "g_task_set_task_data" [
        task [pointer]
        task_data [pointer]
        task_data_destroy [pointer]
        return: [void]
    ]
    task_set_priority: make-routine gio "g_task_set_priority" [
        task [pointer]
        priority [int32]
        return: [void]
    ]
    task_set_check_cancellable: make-routine gio "g_task_set_check_cancellable" [
        task [pointer]
        check_cancellable [int32]
        return: [void]
    ]
    task_set_source_tag: make-routine gio "g_task_set_source_tag" [
        task [pointer]
        source_tag [pointer]
        return: [void]
    ]
    task_get_source_object: make-routine gio "g_task_get_source_object" [
        task [pointer]
        return: [pointer]
    ]
    task_get_task_data: make-routine gio "g_task_get_task_data" [
        task [pointer]
        return: [pointer]
    ]
    task_get_priority: make-routine gio "g_task_get_priority" [
        task [pointer]
        return: [int32]
    ]
    task_get_context: make-routine gio "g_task_get_context" [
        task [pointer]
        return: [pointer]
    ]
    task_get_cancellable: make-routine gio "g_task_get_cancellable" [
        task [pointer]
        return: [pointer]
    ]
    task_get_check_cancellable: make-routine gio "g_task_get_check_cancellable" [
        task [pointer]
        return: [int32]
    ]
    task_get_source_tag: make-routine gio "g_task_get_source_tag" [
        task [pointer]
        return: [pointer]
    ]
    task_is_valid: make-routine gio "g_task_is_valid" [
        result [pointer]
        source_object [pointer]
        return: [int32]
    ]
    task_run_in_thread: make-routine gio "g_task_run_in_thread" [
        task [pointer]
        task_func [pointer]
        return: [void]
    ]
    task_run_in_thread_sync: make-routine gio "g_task_run_in_thread_sync" [
        task [pointer]
        task_func [pointer]
        return: [void]
    ]
    task_set_return_on_cancel: make-routine gio "g_task_set_return_on_cancel" [
        task [pointer]
        return_on_cancel [int32]
        return: [int32]
    ]
    task_get_return_on_cancel: make-routine gio "g_task_get_return_on_cancel" [
        task [pointer]
        return: [int32]
    ]
    task_attach_source: make-routine gio "g_task_attach_source" [
        task [pointer]
        source [pointer]
        callback [pointer]
        return: [void]
    ]
    task_return_pointer: make-routine gio "g_task_return_pointer" [
        task [pointer]
        result [pointer]
        result_destroy [pointer]
        return: [void]
    ]
    task_return_boolean: make-routine gio "g_task_return_boolean" [
        task [pointer]
        result [int32]
        return: [void]
    ]
    task_return_int: make-routine gio "g_task_return_int" [
        task [pointer]
        result [int64]
        return: [void]
    ]
    task_return_error: make-routine gio "g_task_return_error" [
        task [pointer]
        error [pointer]
        return: [void]
    ]
    task_return_new_error: make-routine gio "g_task_return_new_error" [
        task [pointer]
        domain [uint32]
        code [int32]
        format [pointer]
        ...
        return: [void]
    ]
    task_return_error_if_cancelled: make-routine gio "g_task_return_error_if_cancelled" [
        task [pointer]
        return: [int32]
    ]
    task_propagate_pointer: make-routine gio "g_task_propagate_pointer" [
        task [pointer]
        error [pointer]
        return: [pointer]
    ]
    task_propagate_boolean: make-routine gio "g_task_propagate_boolean" [
        task [pointer]
        error [pointer]
        return: [int32]
    ]
    task_propagate_int: make-routine gio "g_task_propagate_int" [
        task [pointer]
        error [pointer]
        return: [int64]
    ]
    task_had_error: make-routine gio "g_task_had_error" [
        task [pointer]
        return: [int32]
    ]
    subprocess_get_type: make-routine gio "g_subprocess_get_type" [
        return: [uint64]
    ]
    subprocess_new: make-routine gio "g_subprocess_new" [
        flags [int32]
        error [pointer]
        argv0 [pointer]
        ...
        return: [pointer]
    ]
    subprocess_newv: make-routine gio "g_subprocess_newv" [
        argv [pointer]
        flags [int32]
        error [pointer]
        return: [pointer]
    ]
    subprocess_get_stdin_pipe: make-routine gio "g_subprocess_get_stdin_pipe" [
        subprocess [pointer]
        return: [pointer]
    ]
    subprocess_get_stdout_pipe: make-routine gio "g_subprocess_get_stdout_pipe" [
        subprocess [pointer]
        return: [pointer]
    ]
    subprocess_get_stderr_pipe: make-routine gio "g_subprocess_get_stderr_pipe" [
        subprocess [pointer]
        return: [pointer]
    ]
    subprocess_get_identifier: make-routine gio "g_subprocess_get_identifier" [
        subprocess [pointer]
        return: [pointer]
    ]
    subprocess_send_signal: make-routine gio "g_subprocess_send_signal" [
        subprocess [pointer]
        signal_num [int32]
        return: [void]
    ]
    subprocess_force_exit: make-routine gio "g_subprocess_force_exit" [
        subprocess [pointer]
        return: [void]
    ]
    subprocess_wait: make-routine gio "g_subprocess_wait" [
        subprocess [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_wait_async: make-routine gio "g_subprocess_wait_async" [
        subprocess [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    subprocess_wait_finish: make-routine gio "g_subprocess_wait_finish" [
        subprocess [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_wait_check: make-routine gio "g_subprocess_wait_check" [
        subprocess [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_wait_check_async: make-routine gio "g_subprocess_wait_check_async" [
        subprocess [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    subprocess_wait_check_finish: make-routine gio "g_subprocess_wait_check_finish" [
        subprocess [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_get_status: make-routine gio "g_subprocess_get_status" [
        subprocess [pointer]
        return: [int32]
    ]
    subprocess_get_successful: make-routine gio "g_subprocess_get_successful" [
        subprocess [pointer]
        return: [int32]
    ]
    subprocess_get_if_exited: make-routine gio "g_subprocess_get_if_exited" [
        subprocess [pointer]
        return: [int32]
    ]
    subprocess_get_exit_status: make-routine gio "g_subprocess_get_exit_status" [
        subprocess [pointer]
        return: [int32]
    ]
    subprocess_get_if_signaled: make-routine gio "g_subprocess_get_if_signaled" [
        subprocess [pointer]
        return: [int32]
    ]
    subprocess_get_term_sig: make-routine gio "g_subprocess_get_term_sig" [
        subprocess [pointer]
        return: [int32]
    ]
    subprocess_communicate: make-routine gio "g_subprocess_communicate" [
        subprocess [pointer]
        stdin_buf [pointer]
        cancellable [pointer]
        stdout_buf [pointer]
        stderr_buf [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_communicate_async: make-routine gio "g_subprocess_communicate_async" [
        subprocess [pointer]
        stdin_buf [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    subprocess_communicate_finish: make-routine gio "g_subprocess_communicate_finish" [
        subprocess [pointer]
        result [pointer]
        stdout_buf [pointer]
        stderr_buf [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_communicate_utf8: make-routine gio "g_subprocess_communicate_utf8" [
        subprocess [pointer]
        stdin_buf [pointer]
        cancellable [pointer]
        stdout_buf [pointer]
        stderr_buf [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_communicate_utf8_async: make-routine gio "g_subprocess_communicate_utf8_async" [
        subprocess [pointer]
        stdin_buf [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    subprocess_communicate_utf8_finish: make-routine gio "g_subprocess_communicate_utf8_finish" [
        subprocess [pointer]
        result [pointer]
        stdout_buf [pointer]
        stderr_buf [pointer]
        error [pointer]
        return: [int32]
    ]
    subprocess_launcher_get_type: make-routine gio "g_subprocess_launcher_get_type" [
        return: [uint64]
    ]
    subprocess_launcher_new: make-routine gio "g_subprocess_launcher_new" [
        flags [int32]
        return: [pointer]
    ]
    subprocess_launcher_spawn: make-routine gio "g_subprocess_launcher_spawn" [
        self [pointer]
        error [pointer]
        argv0 [pointer]
        ...
        return: [pointer]
    ]
    subprocess_launcher_spawnv: make-routine gio "g_subprocess_launcher_spawnv" [
        self [pointer]
        argv [pointer]
        error [pointer]
        return: [pointer]
    ]
    subprocess_launcher_set_environ: make-routine gio "g_subprocess_launcher_set_environ" [
        self [pointer]
        env [pointer]
        return: [void]
    ]
    subprocess_launcher_setenv: make-routine gio "g_subprocess_launcher_setenv" [
        self [pointer]
        variable [pointer]
        value [pointer]
        overwrite [int32]
        return: [void]
    ]
    subprocess_launcher_unsetenv: make-routine gio "g_subprocess_launcher_unsetenv" [
        self [pointer]
        variable [pointer]
        return: [void]
    ]
    subprocess_launcher_getenv: make-routine gio "g_subprocess_launcher_getenv" [
        self [pointer]
        variable [pointer]
        return: [pointer]
    ]
    subprocess_launcher_set_cwd: make-routine gio "g_subprocess_launcher_set_cwd" [
        self [pointer]
        cwd [pointer]
        return: [void]
    ]
    subprocess_launcher_set_flags: make-routine gio "g_subprocess_launcher_set_flags" [
        self [pointer]
        flags [int32]
        return: [void]
    ]
    subprocess_launcher_set_stdin_file_path: make-routine gio "g_subprocess_launcher_set_stdin_file_path" [
        self [pointer]
        path [pointer]
        return: [void]
    ]
    subprocess_launcher_take_stdin_fd: make-routine gio "g_subprocess_launcher_take_stdin_fd" [
        self [pointer]
        fd [int32]
        return: [void]
    ]
    subprocess_launcher_set_stdout_file_path: make-routine gio "g_subprocess_launcher_set_stdout_file_path" [
        self [pointer]
        path [pointer]
        return: [void]
    ]
    subprocess_launcher_take_stdout_fd: make-routine gio "g_subprocess_launcher_take_stdout_fd" [
        self [pointer]
        fd [int32]
        return: [void]
    ]
    subprocess_launcher_set_stderr_file_path: make-routine gio "g_subprocess_launcher_set_stderr_file_path" [
        self [pointer]
        path [pointer]
        return: [void]
    ]
    subprocess_launcher_take_stderr_fd: make-routine gio "g_subprocess_launcher_take_stderr_fd" [
        self [pointer]
        fd [int32]
        return: [void]
    ]
    subprocess_launcher_take_fd: make-routine gio "g_subprocess_launcher_take_fd" [
        self [pointer]
        source_fd [int32]
        target_fd [int32]
        return: [void]
    ]
    subprocess_launcher_set_child_setup: make-routine gio "g_subprocess_launcher_set_child_setup" [
        self [pointer]
        child_setup [pointer]
        user_data [pointer]
        destroy_notify [pointer]
        return: [void]
    ]
    tcp_connection_get_type: make-routine gio "g_tcp_connection_get_type" [
        return: [uint64]
    ]
    tcp_connection_set_graceful_disconnect: make-routine gio "g_tcp_connection_set_graceful_disconnect" [
        connection [pointer]
        graceful_disconnect [int32]
        return: [void]
    ]
    tcp_connection_get_graceful_disconnect: make-routine gio "g_tcp_connection_get_graceful_disconnect" [
        connection [pointer]
        return: [int32]
    ]
    tcp_wrapper_connection_get_type: make-routine gio "g_tcp_wrapper_connection_get_type" [
        return: [uint64]
    ]
    tcp_wrapper_connection_new: make-routine gio "g_tcp_wrapper_connection_new" [
        base_io_stream [pointer]
        socket [pointer]
        return: [pointer]
    ]
    tcp_wrapper_connection_get_base_io_stream: make-routine gio "g_tcp_wrapper_connection_get_base_io_stream" [
        conn [pointer]
        return: [pointer]
    ]
    test_dbus_get_type: make-routine gio "g_test_dbus_get_type" [
        return: [uint64]
    ]
    test_dbus_new: make-routine gio "g_test_dbus_new" [
        flags [int32]
        return: [pointer]
    ]
    test_dbus_get_flags: make-routine gio "g_test_dbus_get_flags" [
        self [pointer]
        return: [int32]
    ]
    test_dbus_get_bus_address: make-routine gio "g_test_dbus_get_bus_address" [
        self [pointer]
        return: [pointer]
    ]
    test_dbus_add_service_dir: make-routine gio "g_test_dbus_add_service_dir" [
        self [pointer]
        path [pointer]
        return: [void]
    ]
    test_dbus_up: make-routine gio "g_test_dbus_up" [
        self [pointer]
        return: [void]
    ]
    test_dbus_stop: make-routine gio "g_test_dbus_stop" [
        self [pointer]
        return: [void]
    ]
    test_dbus_down: make-routine gio "g_test_dbus_down" [
        self [pointer]
        return: [void]
    ]
    test_dbus_unset: make-routine gio "g_test_dbus_unset" [
        return: [void]
    ]
    themed_icon_get_type: make-routine gio "g_themed_icon_get_type" [
        return: [uint64]
    ]
    themed_icon_new: make-routine gio "g_themed_icon_new" [
        iconname [pointer]
        return: [pointer]
    ]
    themed_icon_new_with_default_fallbacks: make-routine gio "g_themed_icon_new_with_default_fallbacks" [
        iconname [pointer]
        return: [pointer]
    ]
    themed_icon_new_from_names: make-routine gio "g_themed_icon_new_from_names" [
        iconnames [pointer]
        len [int32]
        return: [pointer]
    ]
    themed_icon_prepend_name: make-routine gio "g_themed_icon_prepend_name" [
        icon [pointer]
        iconname [pointer]
        return: [void]
    ]
    themed_icon_append_name: make-routine gio "g_themed_icon_append_name" [
        icon [pointer]
        iconname [pointer]
        return: [void]
    ]
    themed_icon_get_names: make-routine gio "g_themed_icon_get_names" [
        icon [pointer]
        return: [pointer]
    ]
    threaded_socket_service_get_type: make-routine gio "g_threaded_socket_service_get_type" [
        return: [uint64]
    ]
    threaded_socket_service_new: make-routine gio "g_threaded_socket_service_new" [
        max_threads [int32]
        return: [pointer]
    ]
    tls_backend_get_type: make-routine gio "g_tls_backend_get_type" [
        return: [uint64]
    ]
    tls_backend_get_default: make-routine gio "g_tls_backend_get_default" [
        return: [pointer]
    ]
    tls_backend_get_default_database: make-routine gio "g_tls_backend_get_default_database" [
        backend [pointer]
        return: [pointer]
    ]
    tls_backend_supports_tls: make-routine gio "g_tls_backend_supports_tls" [
        backend [pointer]
        return: [int32]
    ]
    tls_backend_get_certificate_type: make-routine gio "g_tls_backend_get_certificate_type" [
        backend [pointer]
        return: [uint64]
    ]
    tls_backend_get_client_connection_type: make-routine gio "g_tls_backend_get_client_connection_type" [
        backend [pointer]
        return: [uint64]
    ]
    tls_backend_get_server_connection_type: make-routine gio "g_tls_backend_get_server_connection_type" [
        backend [pointer]
        return: [uint64]
    ]
    tls_backend_get_file_database_type: make-routine gio "g_tls_backend_get_file_database_type" [
        backend [pointer]
        return: [uint64]
    ]
    tls_certificate_get_type: make-routine gio "g_tls_certificate_get_type" [
        return: [uint64]
    ]
    tls_certificate_new_from_pem: make-routine gio "g_tls_certificate_new_from_pem" [
        data [pointer]
        length [int64]
        error [pointer]
        return: [pointer]
    ]
    tls_certificate_new_from_file: make-routine gio "g_tls_certificate_new_from_file" [
        file [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_certificate_new_from_files: make-routine gio "g_tls_certificate_new_from_files" [
        cert_file [pointer]
        key_file [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_certificate_list_new_from_file: make-routine gio "g_tls_certificate_list_new_from_file" [
        file [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_certificate_get_issuer: make-routine gio "g_tls_certificate_get_issuer" [
        cert [pointer]
        return: [pointer]
    ]
    tls_certificate_verify: make-routine gio "g_tls_certificate_verify" [
        cert [pointer]
        identity [pointer]
        trusted_ca [pointer]
        return: [int32]
    ]
    tls_certificate_is_same: make-routine gio "g_tls_certificate_is_same" [
        cert_one [pointer]
        cert_two [pointer]
        return: [int32]
    ]
    tls_connection_get_type: make-routine gio "g_tls_connection_get_type" [
        return: [uint64]
    ]
    tls_connection_set_database: make-routine gio "g_tls_connection_set_database" [
        conn [pointer]
        database [pointer]
        return: [void]
    ]
    tls_connection_get_database: make-routine gio "g_tls_connection_get_database" [
        conn [pointer]
        return: [pointer]
    ]
    tls_connection_set_certificate: make-routine gio "g_tls_connection_set_certificate" [
        conn [pointer]
        certificate [pointer]
        return: [void]
    ]
    tls_connection_get_certificate: make-routine gio "g_tls_connection_get_certificate" [
        conn [pointer]
        return: [pointer]
    ]
    tls_connection_set_interaction: make-routine gio "g_tls_connection_set_interaction" [
        conn [pointer]
        interaction [pointer]
        return: [void]
    ]
    tls_connection_get_interaction: make-routine gio "g_tls_connection_get_interaction" [
        conn [pointer]
        return: [pointer]
    ]
    tls_connection_get_peer_certificate: make-routine gio "g_tls_connection_get_peer_certificate" [
        conn [pointer]
        return: [pointer]
    ]
    tls_connection_get_peer_certificate_errors: make-routine gio "g_tls_connection_get_peer_certificate_errors" [
        conn [pointer]
        return: [int32]
    ]
    tls_connection_set_require_close_notify: make-routine gio "g_tls_connection_set_require_close_notify" [
        conn [pointer]
        require_close_notify [int32]
        return: [void]
    ]
    tls_connection_get_require_close_notify: make-routine gio "g_tls_connection_get_require_close_notify" [
        conn [pointer]
        return: [int32]
    ]
    tls_connection_set_rehandshake_mode: make-routine gio "g_tls_connection_set_rehandshake_mode" [
        conn [pointer]
        mode [int32]
        return: [void]
    ]
    tls_connection_get_rehandshake_mode: make-routine gio "g_tls_connection_get_rehandshake_mode" [
        conn [pointer]
        return: [int32]
    ]
    tls_connection_handshake: make-routine gio "g_tls_connection_handshake" [
        conn [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_connection_handshake_async: make-routine gio "g_tls_connection_handshake_async" [
        conn [pointer]
        io_priority [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_connection_handshake_finish: make-routine gio "g_tls_connection_handshake_finish" [
        conn [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_error_quark: make-routine gio "g_tls_error_quark" [
        return: [uint32]
    ]
    tls_connection_emit_accept_certificate: make-routine gio "g_tls_connection_emit_accept_certificate" [
        conn [pointer]
        peer_cert [pointer]
        errors [int32]
        return: [int32]
    ]
    tls_client_connection_get_type: make-routine gio "g_tls_client_connection_get_type" [
        return: [uint64]
    ]
    tls_client_connection_new: make-routine gio "g_tls_client_connection_new" [
        base_io_stream [pointer]
        server_identity [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_client_connection_get_validation_flags: make-routine gio "g_tls_client_connection_get_validation_flags" [
        conn [pointer]
        return: [int32]
    ]
    tls_client_connection_set_validation_flags: make-routine gio "g_tls_client_connection_set_validation_flags" [
        conn [pointer]
        flags [int32]
        return: [void]
    ]
    tls_client_connection_get_server_identity: make-routine gio "g_tls_client_connection_get_server_identity" [
        conn [pointer]
        return: [pointer]
    ]
    tls_client_connection_set_server_identity: make-routine gio "g_tls_client_connection_set_server_identity" [
        conn [pointer]
        identity [pointer]
        return: [void]
    ]
    tls_client_connection_get_use_ssl3: make-routine gio "g_tls_client_connection_get_use_ssl3" [
        conn [pointer]
        return: [int32]
    ]
    tls_client_connection_set_use_ssl3: make-routine gio "g_tls_client_connection_set_use_ssl3" [
        conn [pointer]
        use_ssl3 [int32]
        return: [void]
    ]
    tls_client_connection_get_accepted_cas: make-routine gio "g_tls_client_connection_get_accepted_cas" [
        conn [pointer]
        return: [pointer]
    ]
    tls_database_get_type: make-routine gio "g_tls_database_get_type" [
        return: [uint64]
    ]
    tls_database_verify_chain: make-routine gio "g_tls_database_verify_chain" [
        self [pointer]
        chain [pointer]
        purpose [pointer]
        identity [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_database_verify_chain_async: make-routine gio "g_tls_database_verify_chain_async" [
        self [pointer]
        chain [pointer]
        purpose [pointer]
        identity [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_database_verify_chain_finish: make-routine gio "g_tls_database_verify_chain_finish" [
        self [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_database_create_certificate_handle: make-routine gio "g_tls_database_create_certificate_handle" [
        self [pointer]
        certificate [pointer]
        return: [pointer]
    ]
    tls_database_lookup_certificate_for_handle: make-routine gio "g_tls_database_lookup_certificate_for_handle" [
        self [pointer]
        handle [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_database_lookup_certificate_for_handle_async: make-routine gio "g_tls_database_lookup_certificate_for_handle_async" [
        self [pointer]
        handle [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_database_lookup_certificate_for_handle_finish: make-routine gio {g_tls_database_lookup_certificate_for_handle_finish} [
        self [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_database_lookup_certificate_issuer: make-routine gio "g_tls_database_lookup_certificate_issuer" [
        self [pointer]
        certificate [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_database_lookup_certificate_issuer_async: make-routine gio "g_tls_database_lookup_certificate_issuer_async" [
        self [pointer]
        certificate [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_database_lookup_certificate_issuer_finish: make-routine gio "g_tls_database_lookup_certificate_issuer_finish" [
        self [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_database_lookup_certificates_issued_by: make-routine gio "g_tls_database_lookup_certificates_issued_by" [
        self [pointer]
        issuer_raw_dn [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_database_lookup_certificates_issued_by_async: make-routine gio "g_tls_database_lookup_certificates_issued_by_async" [
        self [pointer]
        issuer_raw_dn [pointer]
        interaction [pointer]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_database_lookup_certificates_issued_by_finish: make-routine gio {g_tls_database_lookup_certificates_issued_by_finish} [
        self [pointer]
        result [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_file_database_get_type: make-routine gio "g_tls_file_database_get_type" [
        return: [uint64]
    ]
    tls_file_database_new: make-routine gio "g_tls_file_database_new" [
        anchors [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_interaction_get_type: make-routine gio "g_tls_interaction_get_type" [
        return: [uint64]
    ]
    tls_interaction_invoke_ask_password: make-routine gio "g_tls_interaction_invoke_ask_password" [
        interaction [pointer]
        password [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_interaction_ask_password: make-routine gio "g_tls_interaction_ask_password" [
        interaction [pointer]
        password [pointer]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_interaction_ask_password_async: make-routine gio "g_tls_interaction_ask_password_async" [
        interaction [pointer]
        password [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_interaction_ask_password_finish: make-routine gio "g_tls_interaction_ask_password_finish" [
        interaction [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_interaction_invoke_request_certificate: make-routine gio "g_tls_interaction_invoke_request_certificate" [
        interaction [pointer]
        connection [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_interaction_request_certificate: make-routine gio "g_tls_interaction_request_certificate" [
        interaction [pointer]
        connection [pointer]
        flags [int32]
        cancellable [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_interaction_request_certificate_async: make-routine gio "g_tls_interaction_request_certificate_async" [
        interaction [pointer]
        connection [pointer]
        flags [int32]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    tls_interaction_request_certificate_finish: make-routine gio "g_tls_interaction_request_certificate_finish" [
        interaction [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    tls_server_connection_get_type: make-routine gio "g_tls_server_connection_get_type" [
        return: [uint64]
    ]
    tls_server_connection_new: make-routine gio "g_tls_server_connection_new" [
        base_io_stream [pointer]
        certificate [pointer]
        error [pointer]
        return: [pointer]
    ]
    tls_password_get_type: make-routine gio "g_tls_password_get_type" [
        return: [uint64]
    ]
    tls_password_new: make-routine gio "g_tls_password_new" [
        flags [int32]
        description [pointer]
        return: [pointer]
    ]
    tls_password_get_value: make-routine gio "g_tls_password_get_value" [
        password [pointer]
        length [pointer]
        return: [pointer]
    ]
    tls_password_set_value: make-routine gio "g_tls_password_set_value" [
        password [pointer]
        value [pointer]
        length [int64]
        return: [void]
    ]
    tls_password_set_value_full: make-routine gio "g_tls_password_set_value_full" [
        password [pointer]
        value [pointer]
        length [int64]
        destroy [pointer]
        return: [void]
    ]
    tls_password_get_flags: make-routine gio "g_tls_password_get_flags" [
        password [pointer]
        return: [int32]
    ]
    tls_password_set_flags: make-routine gio "g_tls_password_set_flags" [
        password [pointer]
        flags [int32]
        return: [void]
    ]
    tls_password_get_description: make-routine gio "g_tls_password_get_description" [
        password [pointer]
        return: [pointer]
    ]
    tls_password_set_description: make-routine gio "g_tls_password_set_description" [
        password [pointer]
        description [pointer]
        return: [void]
    ]
    tls_password_get_warning: make-routine gio "g_tls_password_get_warning" [
        password [pointer]
        return: [pointer]
    ]
    tls_password_set_warning: make-routine gio "g_tls_password_set_warning" [
        password [pointer]
        warning [pointer]
        return: [void]
    ]
    vfs_get_type: make-routine gio "g_vfs_get_type" [
        return: [uint64]
    ]
    vfs_is_active: make-routine gio "g_vfs_is_active" [
        vfs [pointer]
        return: [int32]
    ]
    vfs_get_file_for_path: make-routine gio "g_vfs_get_file_for_path" [
        vfs [pointer]
        path [pointer]
        return: [pointer]
    ]
    vfs_get_file_for_uri: make-routine gio "g_vfs_get_file_for_uri" [
        vfs [pointer]
        uri [pointer]
        return: [pointer]
    ]
    vfs_get_supported_uri_schemes: make-routine gio "g_vfs_get_supported_uri_schemes" [
        vfs [pointer]
        return: [pointer]
    ]
    vfs_parse_name: make-routine gio "g_vfs_parse_name" [
        vfs [pointer]
        parse_name [pointer]
        return: [pointer]
    ]
    vfs_get_default: make-routine gio "g_vfs_get_default" [
        return: [pointer]
    ]
    vfs_get_local: make-routine gio "g_vfs_get_local" [
        return: [pointer]
    ]
    volume_get_type: make-routine gio "g_volume_get_type" [
        return: [uint64]
    ]
    volume_get_name: make-routine gio "g_volume_get_name" [
        volume [pointer]
        return: [pointer]
    ]
    volume_get_icon: make-routine gio "g_volume_get_icon" [
        volume [pointer]
        return: [pointer]
    ]
    volume_get_symbolic_icon: make-routine gio "g_volume_get_symbolic_icon" [
        volume [pointer]
        return: [pointer]
    ]
    volume_get_uuid: make-routine gio "g_volume_get_uuid" [
        volume [pointer]
        return: [pointer]
    ]
    volume_get_drive: make-routine gio "g_volume_get_drive" [
        volume [pointer]
        return: [pointer]
    ]
    volume_get_mount: make-routine gio "g_volume_get_mount" [
        volume [pointer]
        return: [pointer]
    ]
    volume_can_mount: make-routine gio "g_volume_can_mount" [
        volume [pointer]
        return: [int32]
    ]
    volume_can_eject: make-routine gio "g_volume_can_eject" [
        volume [pointer]
        return: [int32]
    ]
    volume_should_automount: make-routine gio "g_volume_should_automount" [
        volume [pointer]
        return: [int32]
    ]
    volume_mount: make-routine gio "g_volume_mount" [
        volume [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    volume_mount_finish: make-routine gio "g_volume_mount_finish" [
        volume [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    volume_get_identifier: make-routine gio "g_volume_get_identifier" [
        volume [pointer]
        kind [pointer]
        return: [pointer]
    ]
    volume_enumerate_identifiers: make-routine gio "g_volume_enumerate_identifiers" [
        volume [pointer]
        return: [pointer]
    ]
    volume_get_activation_root: make-routine gio "g_volume_get_activation_root" [
        volume [pointer]
        return: [pointer]
    ]
    volume_eject_with_operation: make-routine gio "g_volume_eject_with_operation" [
        volume [pointer]
        flags [int32]
        mount_operation [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    volume_eject_with_operation_finish: make-routine gio "g_volume_eject_with_operation_finish" [
        volume [pointer]
        result [pointer]
        error [pointer]
        return: [int32]
    ]
    volume_get_sort_key: make-routine gio "g_volume_get_sort_key" [
        volume [pointer]
        return: [pointer]
    ]
    zlib_compressor_get_type: make-routine gio "g_zlib_compressor_get_type" [
        return: [uint64]
    ]
    zlib_compressor_new: make-routine gio "g_zlib_compressor_new" [
        format [int32]
        level [int32]
        return: [pointer]
    ]
    zlib_compressor_get_file_info: make-routine gio "g_zlib_compressor_get_file_info" [
        compressor [pointer]
        return: [pointer]
    ]
    zlib_compressor_set_file_info: make-routine gio "g_zlib_compressor_set_file_info" [
        compressor [pointer]
        file_info [pointer]
        return: [void]
    ]
    zlib_decompressor_get_type: make-routine gio "g_zlib_decompressor_get_type" [
        return: [uint64]
    ]
    zlib_decompressor_new: make-routine gio "g_zlib_decompressor_new" [
        format [int32]
        return: [pointer]
    ]
    zlib_decompressor_get_file_info: make-routine gio "g_zlib_decompressor_get_file_info" [
        decompressor [pointer]
        return: [pointer]
    ]
    dbus_interface_get_type: make-routine gio "g_dbus_interface_get_type" [
        return: [uint64]
    ]
    dbus_interface_get_info: make-routine gio "g_dbus_interface_get_info" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_get_object: make-routine gio "g_dbus_interface_get_object" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_set_object: make-routine gio "g_dbus_interface_set_object" [
        interface_ [pointer]
        object [pointer]
        return: [void]
    ]
    dbus_interface_dup_object: make-routine gio "g_dbus_interface_dup_object" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_skeleton_get_type: make-routine gio "g_dbus_interface_skeleton_get_type" [
        return: [uint64]
    ]
    dbus_interface_skeleton_get_flags: make-routine gio "g_dbus_interface_skeleton_get_flags" [
        interface_ [pointer]
        return: [int32]
    ]
    dbus_interface_skeleton_set_flags: make-routine gio "g_dbus_interface_skeleton_set_flags" [
        interface_ [pointer]
        flags [int32]
        return: [void]
    ]
    dbus_interface_skeleton_get_info: make-routine gio "g_dbus_interface_skeleton_get_info" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_skeleton_get_vtable: make-routine gio "g_dbus_interface_skeleton_get_vtable" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_skeleton_get_properties: make-routine gio "g_dbus_interface_skeleton_get_properties" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_skeleton_flush: make-routine gio "g_dbus_interface_skeleton_flush" [
        interface_ [pointer]
        return: [void]
    ]
    dbus_interface_skeleton_export: make-routine gio "g_dbus_interface_skeleton_export" [
        interface_ [pointer]
        connection [pointer]
        object_path [pointer]
        error [pointer]
        return: [int32]
    ]
    dbus_interface_skeleton_unexport: make-routine gio "g_dbus_interface_skeleton_unexport" [
        interface_ [pointer]
        return: [void]
    ]
    dbus_interface_skeleton_unexport_from_connection: make-routine gio "g_dbus_interface_skeleton_unexport_from_connection" [
        interface_ [pointer]
        connection [pointer]
        return: [void]
    ]
    dbus_interface_skeleton_get_connection: make-routine gio "g_dbus_interface_skeleton_get_connection" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_skeleton_get_connections: make-routine gio "g_dbus_interface_skeleton_get_connections" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_interface_skeleton_has_connection: make-routine gio "g_dbus_interface_skeleton_has_connection" [
        interface_ [pointer]
        connection [pointer]
        return: [int32]
    ]
    dbus_interface_skeleton_get_object_path: make-routine gio "g_dbus_interface_skeleton_get_object_path" [
        interface_ [pointer]
        return: [pointer]
    ]
    dbus_object_get_type: make-routine gio "g_dbus_object_get_type" [
        return: [uint64]
    ]
    dbus_object_get_object_path: make-routine gio "g_dbus_object_get_object_path" [
        object [pointer]
        return: [pointer]
    ]
    dbus_object_get_interfaces: make-routine gio "g_dbus_object_get_interfaces" [
        object [pointer]
        return: [pointer]
    ]
    dbus_object_get_interface: make-routine gio "g_dbus_object_get_interface" [
        object [pointer]
        interface_name [pointer]
        return: [pointer]
    ]
    dbus_object_skeleton_get_type: make-routine gio "g_dbus_object_skeleton_get_type" [
        return: [uint64]
    ]
    dbus_object_skeleton_new: make-routine gio "g_dbus_object_skeleton_new" [
        object_path [pointer]
        return: [pointer]
    ]
    dbus_object_skeleton_flush: make-routine gio "g_dbus_object_skeleton_flush" [
        object [pointer]
        return: [void]
    ]
    dbus_object_skeleton_add_interface: make-routine gio "g_dbus_object_skeleton_add_interface" [
        object [pointer]
        interface_ [pointer]
        return: [void]
    ]
    dbus_object_skeleton_remove_interface: make-routine gio "g_dbus_object_skeleton_remove_interface" [
        object [pointer]
        interface_ [pointer]
        return: [void]
    ]
    dbus_object_skeleton_remove_interface_by_name: make-routine gio "g_dbus_object_skeleton_remove_interface_by_name" [
        object [pointer]
        interface_name [pointer]
        return: [void]
    ]
    dbus_object_skeleton_set_object_path: make-routine gio "g_dbus_object_skeleton_set_object_path" [
        object [pointer]
        object_path [pointer]
        return: [void]
    ]
    dbus_object_proxy_get_type: make-routine gio "g_dbus_object_proxy_get_type" [
        return: [uint64]
    ]
    dbus_object_proxy_new: make-routine gio "g_dbus_object_proxy_new" [
        connection [pointer]
        object_path [pointer]
        return: [pointer]
    ]
    dbus_object_proxy_get_connection: make-routine gio "g_dbus_object_proxy_get_connection" [
        proxy [pointer]
        return: [pointer]
    ]
    dbus_object_manager_get_type: make-routine gio "g_dbus_object_manager_get_type" [
        return: [uint64]
    ]
    dbus_object_manager_get_object_path: make-routine gio "g_dbus_object_manager_get_object_path" [
        manager [pointer]
        return: [pointer]
    ]
    dbus_object_manager_get_objects: make-routine gio "g_dbus_object_manager_get_objects" [
        manager [pointer]
        return: [pointer]
    ]
    dbus_object_manager_get_object: make-routine gio "g_dbus_object_manager_get_object" [
        manager [pointer]
        object_path [pointer]
        return: [pointer]
    ]
    dbus_object_manager_get_interface: make-routine gio "g_dbus_object_manager_get_interface" [
        manager [pointer]
        object_path [pointer]
        interface_name [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_get_type: make-routine gio "g_dbus_object_manager_client_get_type" [
        return: [uint64]
    ]
    dbus_object_manager_client_new: make-routine gio "g_dbus_object_manager_client_new" [
        connection [pointer]
        flags [int32]
        name [pointer]
        object_path [pointer]
        get_proxy_type_func [pointer]
        get_proxy_type_user_data [pointer]
        get_proxy_type_destroy_notify [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_object_manager_client_new_finish: make-routine gio "g_dbus_object_manager_client_new_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_new_sync: make-routine gio "g_dbus_object_manager_client_new_sync" [
        connection [pointer]
        flags [int32]
        name [pointer]
        object_path [pointer]
        get_proxy_type_func [pointer]
        get_proxy_type_user_data [pointer]
        get_proxy_type_destroy_notify [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_new_for_bus: make-routine gio "g_dbus_object_manager_client_new_for_bus" [
        bus_type [int32]
        flags [int32]
        name [pointer]
        object_path [pointer]
        get_proxy_type_func [pointer]
        get_proxy_type_user_data [pointer]
        get_proxy_type_destroy_notify [pointer]
        cancellable [pointer]
        callback [pointer]
        user_data [pointer]
        return: [void]
    ]
    dbus_object_manager_client_new_for_bus_finish: make-routine gio "g_dbus_object_manager_client_new_for_bus_finish" [
        res [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_new_for_bus_sync: make-routine gio "g_dbus_object_manager_client_new_for_bus_sync" [
        bus_type [int32]
        flags [int32]
        name [pointer]
        object_path [pointer]
        get_proxy_type_func [pointer]
        get_proxy_type_user_data [pointer]
        get_proxy_type_destroy_notify [pointer]
        cancellable [pointer]
        error [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_get_connection: make-routine gio "g_dbus_object_manager_client_get_connection" [
        manager [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_get_flags: make-routine gio "g_dbus_object_manager_client_get_flags" [
        manager [pointer]
        return: [int32]
    ]
    dbus_object_manager_client_get_name: make-routine gio "g_dbus_object_manager_client_get_name" [
        manager [pointer]
        return: [pointer]
    ]
    dbus_object_manager_client_get_name_owner: make-routine gio "g_dbus_object_manager_client_get_name_owner" [
        manager [pointer]
        return: [pointer]
    ]
    dbus_object_manager_server_get_type: make-routine gio "g_dbus_object_manager_server_get_type" [
        return: [uint64]
    ]
    dbus_object_manager_server_new: make-routine gio "g_dbus_object_manager_server_new" [
        object_path [pointer]
        return: [pointer]
    ]
    dbus_object_manager_server_get_connection: make-routine gio "g_dbus_object_manager_server_get_connection" [
        manager [pointer]
        return: [pointer]
    ]
    dbus_object_manager_server_set_connection: make-routine gio "g_dbus_object_manager_server_set_connection" [
        manager [pointer]
        connection [pointer]
        return: [void]
    ]
    dbus_object_manager_server_export: make-routine gio "g_dbus_object_manager_server_export" [
        manager [pointer]
        object [pointer]
        return: [void]
    ]
    dbus_object_manager_server_export_uniquely: make-routine gio "g_dbus_object_manager_server_export_uniquely" [
        manager [pointer]
        object [pointer]
        return: [void]
    ]
    dbus_object_manager_server_is_exported: make-routine gio "g_dbus_object_manager_server_is_exported" [
        manager [pointer]
        object [pointer]
        return: [int32]
    ]
    dbus_object_manager_server_unexport: make-routine gio "g_dbus_object_manager_server_unexport" [
        manager [pointer]
        object_path [pointer]
        return: [int32]
    ]
    dbus_action_group_get_type: make-routine gio "g_dbus_action_group_get_type" [
        return: [uint64]
    ]
    dbus_action_group_get: make-routine gio "g_dbus_action_group_get" [
        connection [pointer]
        bus_name [pointer]
        object_path [pointer]
        return: [pointer]
    ]
    remote_action_group_get_type: make-routine gio "g_remote_action_group_get_type" [
        return: [uint64]
    ]
    remote_action_group_activate_action_full: make-routine gio "g_remote_action_group_activate_action_full" [
        remote [pointer]
        action_name [pointer]
        parameter [pointer]
        platform_data [pointer]
        return: [void]
    ]
    remote_action_group_change_action_state_full: make-routine gio "g_remote_action_group_change_action_state_full" [
        remote [pointer]
        action_name [pointer]
        value [pointer]
        platform_data [pointer]
        return: [void]
    ]
    menu_model_get_type: make-routine gio "g_menu_model_get_type" [
        return: [uint64]
    ]
    menu_model_is_mutable: make-routine gio "g_menu_model_is_mutable" [
        model [pointer]
        return: [int32]
    ]
    menu_model_get_n_items: make-routine gio "g_menu_model_get_n_items" [
        model [pointer]
        return: [int32]
    ]
    menu_model_iterate_item_attributes: make-routine gio "g_menu_model_iterate_item_attributes" [
        model [pointer]
        item_index [int32]
        return: [pointer]
    ]
    menu_model_get_item_attribute_value: make-routine gio "g_menu_model_get_item_attribute_value" [
        model [pointer]
        item_index [int32]
        attribute [pointer]
        expected_type [pointer]
        return: [pointer]
    ]
    menu_model_get_item_attribute: make-routine gio "g_menu_model_get_item_attribute" [
        model [pointer]
        item_index [int32]
        attribute [pointer]
        format_string [pointer]
        ...
        return: [int32]
    ]
    menu_model_iterate_item_links: make-routine gio "g_menu_model_iterate_item_links" [
        model [pointer]
        item_index [int32]
        return: [pointer]
    ]
    menu_model_get_item_link: make-routine gio "g_menu_model_get_item_link" [
        model [pointer]
        item_index [int32]
        link [pointer]
        return: [pointer]
    ]
    menu_model_items_changed: make-routine gio "g_menu_model_items_changed" [
        model [pointer]
        position [int32]
        removed [int32]
        added [int32]
        return: [void]
    ]
    menu_attribute_iter_get_type: make-routine gio "g_menu_attribute_iter_get_type" [
        return: [uint64]
    ]
    menu_attribute_iter_get_next: make-routine gio "g_menu_attribute_iter_get_next" [
        iter [pointer]
        out_name [pointer]
        value [pointer]
        return: [int32]
    ]
    menu_attribute_iter_next: make-routine gio "g_menu_attribute_iter_next" [
        iter [pointer]
        return: [int32]
    ]
    menu_attribute_iter_get_name: make-routine gio "g_menu_attribute_iter_get_name" [
        iter [pointer]
        return: [pointer]
    ]
    menu_attribute_iter_get_value: make-routine gio "g_menu_attribute_iter_get_value" [
        iter [pointer]
        return: [pointer]
    ]
    menu_link_iter_get_type: make-routine gio "g_menu_link_iter_get_type" [
        return: [uint64]
    ]
    menu_link_iter_get_next: make-routine gio "g_menu_link_iter_get_next" [
        iter [pointer]
        out_link [pointer]
        value [pointer]
        return: [int32]
    ]
    menu_link_iter_next: make-routine gio "g_menu_link_iter_next" [
        iter [pointer]
        return: [int32]
    ]
    menu_link_iter_get_name: make-routine gio "g_menu_link_iter_get_name" [
        iter [pointer]
        return: [pointer]
    ]
    menu_link_iter_get_value: make-routine gio "g_menu_link_iter_get_value" [
        iter [pointer]
        return: [pointer]
    ]
    menu_get_type: make-routine gio "g_menu_get_type" [
        return: [uint64]
    ]
    menu_new: make-routine gio "g_menu_new" [
        return: [pointer]
    ]
    menu_freeze: make-routine gio "g_menu_freeze" [
        menu [pointer]
        return: [void]
    ]
    menu_insert_item: make-routine gio "g_menu_insert_item" [
        menu [pointer]
        position [int32]
        item [pointer]
        return: [void]
    ]
    menu_prepend_item: make-routine gio "g_menu_prepend_item" [
        menu [pointer]
        item [pointer]
        return: [void]
    ]
    menu_append_item: make-routine gio "g_menu_append_item" [
        menu [pointer]
        item [pointer]
        return: [void]
    ]
    menu_remove: make-routine gio "g_menu_remove" [
        menu [pointer]
        position [int32]
        return: [void]
    ]
    menu_remove_all: make-routine gio "g_menu_remove_all" [
        menu [pointer]
        return: [void]
    ]
    menu_insert: make-routine gio "g_menu_insert" [
        menu [pointer]
        position [int32]
        label [pointer]
        detailed_action [pointer]
        return: [void]
    ]
    menu_prepend: make-routine gio "g_menu_prepend" [
        menu [pointer]
        label [pointer]
        detailed_action [pointer]
        return: [void]
    ]
    menu_append: make-routine gio "g_menu_append" [
        menu [pointer]
        label [pointer]
        detailed_action [pointer]
        return: [void]
    ]
    menu_insert_section: make-routine gio "g_menu_insert_section" [
        menu [pointer]
        position [int32]
        label [pointer]
        section [pointer]
        return: [void]
    ]
    menu_prepend_section: make-routine gio "g_menu_prepend_section" [
        menu [pointer]
        label [pointer]
        section [pointer]
        return: [void]
    ]
    menu_append_section: make-routine gio "g_menu_append_section" [
        menu [pointer]
        label [pointer]
        section [pointer]
        return: [void]
    ]
    menu_insert_submenu: make-routine gio "g_menu_insert_submenu" [
        menu [pointer]
        position [int32]
        label [pointer]
        submenu [pointer]
        return: [void]
    ]
    menu_prepend_submenu: make-routine gio "g_menu_prepend_submenu" [
        menu [pointer]
        label [pointer]
        submenu [pointer]
        return: [void]
    ]
    menu_append_submenu: make-routine gio "g_menu_append_submenu" [
        menu [pointer]
        label [pointer]
        submenu [pointer]
        return: [void]
    ]
    menu_item_get_type: make-routine gio "g_menu_item_get_type" [
        return: [uint64]
    ]
    menu_item_new: make-routine gio "g_menu_item_new" [
        label [pointer]
        detailed_action [pointer]
        return: [pointer]
    ]
    menu_item_new_from_model: make-routine gio "g_menu_item_new_from_model" [
        model [pointer]
        item_index [int32]
        return: [pointer]
    ]
    menu_item_new_submenu: make-routine gio "g_menu_item_new_submenu" [
        label [pointer]
        submenu [pointer]
        return: [pointer]
    ]
    menu_item_new_section: make-routine gio "g_menu_item_new_section" [
        label [pointer]
        section [pointer]
        return: [pointer]
    ]
    menu_item_get_attribute_value: make-routine gio "g_menu_item_get_attribute_value" [
        menu_item [pointer]
        attribute [pointer]
        expected_type [pointer]
        return: [pointer]
    ]
    menu_item_get_attribute: make-routine gio "g_menu_item_get_attribute" [
        menu_item [pointer]
        attribute [pointer]
        format_string [pointer]
        ...
        return: [int32]
    ]
    menu_item_get_link: make-routine gio "g_menu_item_get_link" [
        menu_item [pointer]
        link [pointer]
        return: [pointer]
    ]
    menu_item_set_attribute_value: make-routine gio "g_menu_item_set_attribute_value" [
        menu_item [pointer]
        attribute [pointer]
        value [pointer]
        return: [void]
    ]
    menu_item_set_attribute: make-routine gio "g_menu_item_set_attribute" [
        menu_item [pointer]
        attribute [pointer]
        format_string [pointer]
        ...
        return: [void]
    ]
    menu_item_set_link: make-routine gio "g_menu_item_set_link" [
        menu_item [pointer]
        link [pointer]
        model [pointer]
        return: [void]
    ]
    menu_item_set_label: make-routine gio "g_menu_item_set_label" [
        menu_item [pointer]
        label [pointer]
        return: [void]
    ]
    menu_item_set_submenu: make-routine gio "g_menu_item_set_submenu" [
        menu_item [pointer]
        submenu [pointer]
        return: [void]
    ]
    menu_item_set_section: make-routine gio "g_menu_item_set_section" [
        menu_item [pointer]
        section [pointer]
        return: [void]
    ]
    menu_item_set_action_and_target_value: make-routine gio "g_menu_item_set_action_and_target_value" [
        menu_item [pointer]
        action [pointer]
        target_value [pointer]
        return: [void]
    ]
    menu_item_set_action_and_target: make-routine gio "g_menu_item_set_action_and_target" [
        menu_item [pointer]
        action [pointer]
        format_string [pointer]
        ...
        return: [void]
    ]
    menu_item_set_detailed_action: make-routine gio "g_menu_item_set_detailed_action" [
        menu_item [pointer]
        detailed_action [pointer]
        return: [void]
    ]
    menu_item_set_icon: make-routine gio "g_menu_item_set_icon" [
        menu_item [pointer]
        icon [pointer]
        return: [void]
    ]
    dbus_connection_export_menu_model: make-routine gio "g_dbus_connection_export_menu_model" [
        connection [pointer]
        object_path [pointer]
        menu [pointer]
        error [pointer]
        return: [uint32]
    ]
    dbus_connection_unexport_menu_model: make-routine gio "g_dbus_connection_unexport_menu_model" [
        connection [pointer]
        export_id [uint32]
        return: [void]
    ]
    dbus_menu_model_get_type: make-routine gio "g_dbus_menu_model_get_type" [
        return: [uint64]
    ]
    dbus_menu_model_get: make-routine gio "g_dbus_menu_model_get" [
        connection [pointer]
        bus_name [pointer]
        object_path [pointer]
        return: [pointer]
    ]
    notification_get_type: make-routine gio "g_notification_get_type" [
        return: [uint64]
    ]
    notification_new: make-routine gio "g_notification_new" [
        title [pointer]
        return: [pointer]
    ]
    notification_set_title: make-routine gio "g_notification_set_title" [
        notification [pointer]
        title [pointer]
        return: [void]
    ]
    notification_set_body: make-routine gio "g_notification_set_body" [
        notification [pointer]
        body [pointer]
        return: [void]
    ]
    notification_set_icon: make-routine gio "g_notification_set_icon" [
        notification [pointer]
        icon [pointer]
        return: [void]
    ]
    notification_set_priority: make-routine gio "g_notification_set_priority" [
        notification [pointer]
        priority [int32]
        return: [void]
    ]
    notification_add_button: make-routine gio "g_notification_add_button" [
        notification [pointer]
        label [pointer]
        detailed_action [pointer]
        return: [void]
    ]
    notification_add_button_with_target: make-routine gio "g_notification_add_button_with_target" [
        notification [pointer]
        label [pointer]
        action [pointer]
        target_format [pointer]
        ...
        return: [void]
    ]
    notification_add_button_with_target_value: make-routine gio "g_notification_add_button_with_target_value" [
        notification [pointer]
        label [pointer]
        action [pointer]
        target [pointer]
        return: [void]
    ]
    notification_set_default_action: make-routine gio "g_notification_set_default_action" [
        notification [pointer]
        detailed_action [pointer]
        return: [void]
    ]
    notification_set_default_action_and_target: make-routine gio "g_notification_set_default_action_and_target" [
        notification [pointer]
        action [pointer]
        target_format [pointer]
        ...
        return: [void]
    ]
    notification_set_default_action_and_target_value: make-routine gio "g_notification_set_default_action_and_target_value" [
        notification [pointer]
        action [pointer]
        target [pointer]
        return: [void]
    ]
]
